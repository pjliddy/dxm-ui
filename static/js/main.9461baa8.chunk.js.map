{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/selectedContentActions.js","actions/types.js","actions/selectedAssetActions.js","components/buttons/Button.js","components/buttons/ShowJsonButton.js","components/buttons/BrowserPreviewButton.js","components/views/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/IsLoading.js","components/views/ContentCreate.js","components/views/ContentEdit.js","components/views/AssetList.js","actions/assetsActions.js","components/api/S3.js","components/forms/AssetForm.js","components/views/AssetCreate.js","components/views/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_ASSET_STATE","id","dataType","title","url","file","dateCreated","dateModified","INTIAL_CONTENT_STATE","subTitle","copyText","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","deselectContent","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","type","payload","stop","_x4","apply","this","arguments","updateSelectedContent","prop","_ref4","_callee4","_context4","_x5","deselectAsset","updateSelectedAsset","Button","_ref","_ref$buttonType","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","icon","iconClass","data-tooltip","data-position","ShowJsonButton","node","hidden","buttons_Button","window","open","onShowJsonButton","BrowserPreviewButton","onPreview","ContentList","props","fetchContents","_this","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","renderList","React","Component","mapDispatchToProps","_callee","_context","sent","filter","_x","connect","state","Field","handleChange","event","onChange","renderInput","renderTextInput","renderSelect","renderTextArea","fieldClasses","required","disabled","htmlFor","name","label","placeholder","value","ContentForm","onFormCancel","preventDefault","onFormSubmit","_event$target","target","onFormUpdate","isNew","forms_Field","readOnly","IsLoading","isLoading","loaderStyles","ContentCreate","redirect","setState","createContent","newContent","react_router","forms_ContentForm","components_IsLoading","_ref2","_callee2","getState","_context2","selectedContent","_x2","_x3","ContentEdit","updateContent","fetchContent","match","AssetList","fetchAssets","assets","asset","src","alt","size","toFixed","deleteAsset","getPresignedUrl","s3Params","urlParams","Bucket","Key","ACL","ContentType","getSignedUrl","abrupt","uploadAsset","uploadUrl","config","headers","Content-Type","onUploadProgress","progressEvent","progress","Number","parseInt","loaded","axios","put","split","t0","AssetForm","selectedFile","handleFileChange","files","AssetCreate","createAsset","fileObj","uploadURL","fileData","newAsset","forms_AssetForm","selectedAsset","AssetEdit","updateAsset","fetchAsset","App","style","margin","basename","components_Header","path","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.9461baa8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'nodes';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Initial Reducer States\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_ASSET_STATE = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INTIAL_CONTENT_STATE = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to class?\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\n\nexport const fetchContent = (id) => async (dispatch) => {\n  const response = await read(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENT,\n    payload: response\n  });\n};\n\nexport const newContent = () => async (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: prop\n  });\n}\n","// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected content actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from './types';\n\nexport const fetchAsset = (id) => async (dispatch) => {\n  const response = await read(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSET,\n    payload: response\n  });\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n\n  dispatch({\n    type: NEW_ASSET,\n    payload: asset\n  });\n};\n\nexport const deselectAsset = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: prop\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  buttonType = 'secondary',  // primary | secondary | icon\n  children,\n  iconType,\n  linkTo,\n  onClick,\n  tooltipPosition,\n  tooltipText,\n}) => {\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'ui primary button';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'ui secondary basic button';\n      break;\n    case 'icon':\n      buttonStyle = 'ui basic button'\n      break;\n  }\n\n  let icon = '';\n\n  if (iconType) {\n    const iconClass = `${iconType} icon`;\n    icon = <i className={iconClass}></i>;\n  }\n\n  if (linkTo) {\n    return(\n      <Link className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && icon}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && icon}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = ({ node, type, hidden, children }) => {\n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top center\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = ({node, type, hidden, children}) => {\n  const onPreview = (node) => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top center\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContents, deleteContent } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  renderList() {\n    return this.props.contents.map(content => {\n      const linkPath = `/contents/${content.id}/edit`;\n\n      return(\n        <tr key={content.id}>\n          <td>\n            <Link to={linkPath}>\n              {content.title}\n            </Link>\n          </td>\n          <td>\n            {content.dataType}\n          </td>\n          <td className=\"collapsing\">\n            {content.id}\n          </td>\n          <td className=\"collapsing\">\n            {content.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <ShowJsonButton node={content} type=\"icon\"/>\n              <BrowserPreviewButton node={content} type=\"icon\"/>\n              <Button buttonType=\"icon\"\n                      iconType=\"trash alternate outline\"\n                      tooltipText=\"Delete Content\"\n                      tooltipPosition=\"top right\"\n                      onClick={() => this.props.deleteContent(content.id)}>Delete Content\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    // const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n              <h1>Content List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/contents/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\"\n                      tooltipText=\"New Content\"\n                      tooltipPosition=\"top center\">\n                New Content\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/*\n          <div className={loaderStyles}>\n            <div className=\"ui text loader\">Working...</div>\n          </div>\n        */}\n\n        <table className=\"ui celled striped compact table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Data Type</th>\n              <th>ID</th>\n              <th>Date Modified</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderList()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { contents: state.contents };\n}\n\nconst mapDispatchToProps = { fetchContents, deleteContent };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentList);\n","import { index, create, update, destroy } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\n\nexport const fetchContents = () => async (dispatch) => {\n  const response = await index(CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENTS,\n    payload: response.filter(content => content.dataType === 'content')\n  });\n};\n\nexport const createContent = (content) => async (dispatch) => {\n  const response = await create(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: CREATE_CONTENT,\n    payload: response\n  });\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  const content = getState().selectedContent;\n  const response = await update(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: UPDATE_CONTENT,\n    payload: response\n  });\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async (dispatch) => {\n  await destroy(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: DELETE_CONTENT,\n    payload: { id }\n  });\n};\n","import React from 'react';\n\nclass Field extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  renderInput = () => {\n    switch(this.props.type) {\n      case 'text':\n      default:\n        return this.renderTextInput();\n      case 'select':\n        return this.renderSelect();\n      case 'textarea':\n        return this.renderTextArea();\n    }\n  }\n\n  renderTextInput = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <input name={this.props.name}\n               type={this.props.type}\n               placeholder={this.props.placeholder}\n               value={this.props.value}\n               onChange={this.handleChange} />\n      </div>\n    );\n  }\n\n  renderSelect = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n        <select name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value}\n                onChange={this.handleChange}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n\n  renderTextArea = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <textarea name={this.props.name}\n                  placeholder={this.props.placeholder}\n                  value={this.props.value}\n                  onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return this.renderInput();\n  }\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const content = this.props.content;\n    const isNew = this.props.isNew;\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={content.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={content.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"content\">Content</option>\n        </Field>\n\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={content.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"subTitle\"\n               label=\"Subtitle\"\n               placeholder=\"subtitle\"\n               value={content.subTitle}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"textarea\"\n               name=\"copyText\"\n               label=\"Copy Text\"\n               placeholder=\"copy text\"\n               value={content.copyText}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={content.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={content.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={content}\n                          hidden={isNew}></ShowJsonButton>\n          <BrowserPreviewButton node={content}\n                                hidden={isNew}></BrowserPreviewButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Content\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentForm;\n","import React from 'react';\n\nconst IsLoading = ({isLoading}) => {\n  const loaderStyles = `ui ${isLoading ? 'active' : ''} inverted dimmer`;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={loaderStyles}>\n      <div className=\"ui text loader\">Working...</div>\n    </div>\n  );\n}\nexport default IsLoading;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newContent, createContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport IsLoading from '../IsLoading';\n\nclass ContentCreate extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  createContent = async () => {\n    this.setState({ isLoading: true });\n\n    await this.props.createContent(this.props.content);\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    return (\n      <div>\n        <h1>New Content</h1>\n        <ContentForm content={this.props.content}\n                     isNew={true}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.createContent}\n                     onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.state.isLoading} />\n       </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { content: state.selectedContent };\n}\n\nconst mapDispatchToProps = { newContent, createContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContent, updateContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport IsLoading from '../IsLoading';\n\n// research containers for wrapping forms, etc.\n\nclass ContentEdit extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  updateContent = async () => {\n    this.setState({ isLoading: true });\n\n    await this.props.updateContent();\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  render() {\n    // create redirect component\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    return (\n      <div>\n        <h1>Edit Content</h1>\n        <ContentForm content={this.props.content}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.updateContent}\n                     onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.state.isLoading} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { content: state.selectedContent };\n}\n\nconst mapDispatchToProps = { fetchContent, updateContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAssets, deleteAsset } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  renderList() {\n    return this.props.assets.map(asset => {\n      const linkPath = `/assets/${asset.id}/edit`;\n\n      return (\n        <div className=\"item\"\n             key={asset.id}>\n          <img className=\"ui small image\"\n               src={asset.url}\n               alt=\"alt text placeholder\"></img>\n          <div className=\"content\">\n            <Link to={linkPath} className=\"header\">\n              {asset.title}\n            </Link>\n            <div className=\"description\">\n              <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n              <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n              <strong>File Type: </strong>{asset.file.type}</p>\n            </div>\n          </div>\n          <div className=\"ui icon buttons right floated content\">\n            <ShowJsonButton node={asset} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Asset\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => this.props.deleteAsset(asset.id)}>\n              Delete Asset\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    // const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n            <h1>Asset List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/assets/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\">\n                New Asset\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/*\n          <div className={loaderStyles}>\n            <div className=\"ui text loader\">Working...</div>\n          </div>\n        */}\n        \n        <div className=\"ui divided relaxed list\">\n          {this.renderList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { assets: state.assets };\n}\n\nconst mapDispatchToProps = { fetchAssets, deleteAsset }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetList);\n","import { index, create, update, destroy } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\n\nexport const fetchAssets = () => async (dispatch) => {\n  const response = await index(ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSETS,\n    payload: response.filter(node => node.dataType === 'asset')\n  });\n};\n\nexport const createAsset = (asset) => async (dispatch) => {\n  const response = await create(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: CREATE_ASSET,\n    payload: response\n  });\n};\n\nexport const updateAsset = (asset) => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n  const response = await update(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: UPDATE_ASSET,\n    payload: response\n  });\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n  await destroy(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: DELETE_ASSET,\n    payload: { id: id }\n  });\n};\n","import { create } from '../api/Api';\nimport axios from 'axios';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../../config';\nimport { updateSelectedAsset } from '../../actions';\n\nexport const getPresignedUrl = async (file) => {\n  const s3Params = {\n    'Bucket': ASSET_REPO_BUCKET,\n    'Key':  `${ASSET_RESOURCE}/${file.name}`,\n    'ACL': 'public-read',\n    'ContentType': file.type\n  };\n  const urlParams = { getSignedUrl: true };\n  const response = await create(s3Params, ASSET_RESOURCE, urlParams);\n\n  return response;\n}\n\nexport const uploadAsset = async (uploadUrl, file) => {\n  try {\n    // post file to presigned URL\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': file.type\n      },\n      onUploadProgress: progressEvent => {\n        const progress = Number.parseInt(progressEvent.loaded / file.size * 100, 10);\n\n        // set to state value\n\n        console.log(`Progress: ${progress}%`);\n      }\n    }\n\n    const response = await axios.put(uploadUrl, file, config);\n    const url = response.config.url.split('?')[0];\n\n    return url;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const updateAssetFile = (url, fileObj) => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n\n  updateSelectedAsset({ 'name': 'file', 'value': fileData });\n  updateSelectedAsset({ 'name': 'url', 'value': url });\n\n  return;\n}\n","import React from 'react';\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetForm extends React.Component {\n  state = {\n    selectedFile: ''\n  };\n\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.selectedFile);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  handleFileChange = (event) => {\n    const { name } = event.target;\n    const value = event.target.files[0];\n\n    this.props.onFormUpdate({ name, value });\n\n    this.setState({\n      selectedFile: value\n    });\n  }\n\n  render() {\n    const asset = this.props.asset;\n    const isNew = this.props.isNew\n\n    /*\n      create upload component in React?\n      make file input component?\n      disable upload button during upload?\n    */\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={asset.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={asset.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"asset\">Asset</option>\n        </Field>\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={asset.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <div className=\"field\">\n          <label htmlFor=\"file\">File</label>\n          <input name=\"file\"\n                 type=\"file\"\n                 onChange={this.handleFileChange} />\n\n          {!isNew ? (\n            <div>\n              <div className=\"ui hidden divider\"></div>\n              <img className=\"ui big image\"\n                   src={this.props.asset.url}\n                   alt=\"alt text placeholder\">\n               </img>\n               <div className=\"ui divider\"></div>\n             </div>\n           ) : ''}\n        </div>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={asset.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={asset.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={asset}\n                    hidden={isNew}></ShowJsonButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssetForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newAsset, createAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset /*, updateAssetFile */ } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\nimport IsLoading from '../IsLoading';\n\nclass AssetCreate extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  createAsset = async (fileObj) => {\n    try {\n      this.setState({ isLoading: true });\n\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      // upload file to S3\n      const url = await uploadAsset(uploadURL, fileObj);\n\n      // what if upload fails?\n\n      // updateAssetFile(url, fileObj);\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n      // console.log(this.props.asset);\n\n      // on success, create asset node in db\n      await this.props.createAsset(this.props.asset);\n\n      this.setState({\n        isLoading: false,\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    return (\n      <div>\n        <h1>New Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   isNew={true}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.createAsset}\n                   onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.state.isLoading} />\n       </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { asset: state.selectedAsset };\n}\n\nconst mapDispatchToProps = { newAsset, createAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset /*, updateAssetFile */ } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\nimport IsLoading from '../IsLoading';\n\nclass AssetEdit extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  /*\n    Need to delete existing asset image if updated\n  */\n\n  updateAsset = async (fileObj) => {\n    try {\n      this.setState({ isLoading: true });\n\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      const url = await uploadAsset(uploadURL, fileObj);\n      // what if upload fails?\n\n      // updateAssetFile(url, fileObj);\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n      // console.log(this.props.asset);\n\n      // on success, create asset node in db\n      await this.props.updateAsset(this.props.asset);\n\n      this.setState({\n        isLoading: false,\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    return (\n      <div>\n        <h1>Edit Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.updateAsset}\n                   onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.state.isLoading} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { asset: state.selectedAsset };\n}\n\nconst mapDispatchToProps = { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from './views/ContentList';\nimport ContentCreate from './views/ContentCreate';\nimport ContentEdit from './views/ContentEdit';\nimport AssetList from './views/AssetList';\nimport AssetCreate from './views/AssetCreate';\nimport AssetEdit from './views/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  // contents/:id/edit\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_ASSETS':\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case 'CREATE_ASSET':\n      return [...state , action.payload];\n    case 'UPDATE_ASSET':\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case 'DELETE_ASSET':\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_CONTENTS':\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case 'CREATE_CONTENT':\n      return [...state , action.payload];\n    case 'UPDATE_CONTENT':\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case 'DELETE_CONTENT':\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_ASSET_STATE } from '../config';\n\nexport default (state = INITIAL_ASSET_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_ASSET':\n      return action.payload;\n    case 'NEW_ASSET':\n        return action.payload;\n    case 'DESELECT_ASSET':\n      return INITIAL_ASSET_STATE;\n    case 'UPDATE_SELECTED_ASSET':\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INTIAL_CONTENT_STATE } from '../config';\n\nexport default (state = INTIAL_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case 'FETCH_CONTENT':\n      return action.payload;\n    case 'NEW_CONTENT':\n      return action.payload;\n    case 'DESELECT_CONTENT':\n      return INTIAL_CONTENT_STATE;\n    case 'UPDATE_SELECTED_CONTENT':\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}