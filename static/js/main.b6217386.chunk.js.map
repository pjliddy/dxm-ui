{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/assetsActions.js","actions/types.js","actions/metadataActions.js","actions/previewActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","components/buttons/Button.js","components/LoadingIndicator.js","components/views/ContentList.js","containers/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate.js","containers/ContentCreate.js","components/views/ContentEdit.js","containers/ContentEdit.js","components/views/AssetList.js","containers/AssetList.js","components/forms/FilePicker.js","containers/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate.js","containers/AssetCreate.js","components/views/AssetEdit.js","containers/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_METADATA_STATE","isLoading","redirect","INITIAL_SELECTED_ASSET_STATE","id","resourceType","title","url","file","dateCreated","dateModified","INITIAL_SELECTED_CONTENT_STATE","subtitle","copyText","INITIAL_UPLOAD_STATE","fileObj","fileUrl","isNew","isUploading","progress","uploadUrl","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","createAsset","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","asset","wrap","_context2","prev","next","type","selectedAsset","api","sent","payload","t0","abrupt","stop","_x2","_x3","apply","this","arguments","startRedirect","previewHtml","node","window","open","previewJson","deselectContent","updateSelectedContent","property","deselectAsset","updateSelectedAsset","deselectUploadFile","startUpload","getPresignedUrl","upload","_ref","_callee","s3Params","urlParams","uploadURL","_context","uuid","name","value","Bucket","Key","ACL","ContentType","getSignedUrl","uploadFile","_x","_ref3","config","headers","Content-Type","onUploadProgress","progressEvent","Number","parseInt","loaded","size","axios","put","split","updateAssetUpload","fileData","stopUpload","_ref4","_callee3","_context3","_x4","_x5","Button","props","buttonType","children","hidden","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","LoadingIndicator","message","renderPageHeader","buttons_Button","renderList","contents","map","content","linkPath","key","deleteContent","memo","components_LoadingIndicator","ContentList","fetchContents","views_ContentList","React","Component","mapDispatchToProps","_callee4","_context4","_x6","filter","connect","state","metadata","Field","handleChange","event","readOnly","onChange","renderTextInput","fieldClasses","required","disabled","htmlFor","label","placeholder","renderSelect","renderTextArea","renderInput","ContentForm","_event$target","target","onFormUpdate","forms_Field","preventDefault","onFormCancel","onFormSubmit","Redirector","stopRedirect","react_router","path","components_Redirector","forms_ContentForm","createContent","ContentCreate","newContent","views_ContentCreate","selectedContent","updateContent","ContentEdit","fetchContent","match","views_ContentEdit","assets","src","alt","toFixed","deleteAsset","AssetList","fetchAssets","views_AssetList","FilePicker","e","files","preview","forms_FilePicker","selectUploadFile","AssetForm","containers_FilePicker","forms_AssetForm","AssetCreate","newAsset","views_AssetCreate","AssetEdit","fetchAsset","views_AssetEdit","App","style","margin","basename","components_Header","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.b6217386.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'contents';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n\n// Initial Reducer States\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n};\nexport const INITIAL_PREVIEW_STATE = { };\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  resourceType: ASSET_RESOURCE,\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  resourceType: CONTENT_RESOURCE,\n  title: '',\n  subtitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  id: '',\n  isNew: false,\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to axios since it's used for progress on uploads\n\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  // POST includes params for getSignedUrl for S3 authentication\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import * as api from '../components/api/Api';\n\nimport { ASSET_RESOURCE }  from '../config';\nimport {\n  CREATE_ASSET,\n  DELETE_ASSET,\n  FETCH_ASSETS,\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  UPDATE_ASSET\n} from './types';\n\nexport const fetchAssets = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSETS,\n      payload: response.filter(node => node.resourceType === ASSET_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.create(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: CREATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.update(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: UPDATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deleteAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: DELETE_ASSET,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// preview action types\nexport const PREVIEW_HTML = 'PREVIEW_HTML';\nexport const PREVIEW_JSON = 'PREVIEW_JSON';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const UPLOAD_IS_NEW = 'UPLOAD_IS_NEW';\n","import {\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  STOP_REDIRECT \n} from './types';\n\nexport const startLoading = () => {\n  return { type: START_LOADING };\n};\n\nexport const stopLoading = () => {\n  return { type: STOP_LOADING };\n};\n\nexport const startRedirect = () => {\n  return { type: START_REDIRECT };\n};\n\nexport const stopRedirect = () => {\n  return { type: STOP_REDIRECT };\n};\n","import { CONTENT_LAKE_URL, SITE_REPO_URL } from '../config';\nimport { PREVIEW_HTML, PREVIEW_JSON } from './types';\n\nexport const previewHtml = node => {\n   window.open(`${SITE_REPO_URL}/${node.resourceType}/${node.id}.html`);\n\n   return { type: PREVIEW_HTML };\n};\n\nexport const previewJson = node => {\n   window.open(`${CONTENT_LAKE_URL}/${node.resourceType}/${node.id}.json`);\n   \n   return { type: PREVIEW_JSON };\n};\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.read(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  // const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: getState().selectedContent\n  });\n};\n\nexport const deselectContent = () => dispatch => {\n  dispatch({ type: DESELECT_CONTENT });\n};\n\nexport const updateSelectedContent = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\n\nimport { ASSET_RESOURCE }  from '../config';\nimport {\n  DESELECT_ASSET,\n  FETCH_ASSET,\n  NEW_ASSET,\n  START_LOADING,\n  STOP_LOADING,\n  UPDATE_SELECTED_ASSET,\n  UPLOAD_IS_NEW\n} from './types';\n\nexport const fetchAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.read(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPLOAD_IS_NEW });\n    dispatch({\n      type: NEW_ASSET,\n      payload: getState().selectedAsset\n    });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deselectAsset = () => dispatch => {\n  dispatch({ type: DESELECT_ASSET });\n};\n\nexport const updateSelectedAsset = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\n\nimport { createAsset, updateAsset, updateSelectedAsset } from './'\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config';\nimport {\n  DESELECT_UPLOAD_FILE,\n  GET_PRESIGNED_URL,\n  SELECT_UPLOAD_FILE,\n  SET_UPLOAD_PROGRESS,\n  START_UPLOAD,\n  STOP_UPLOAD,\n  UPLOAD_FILE,\n  UPLOAD_IS_NEW\n} from './types';\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return { type: DESELECT_UPLOAD_FILE };\n};\n\nexport const startUpload = () => (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  dispatch(getPresignedUrl(getState().upload.fileObj));\n};\n\nexport const getPresignedUrl = fileObj => async (dispatch, getState) => {\n  try {\n    // if state.selectedAsset has id, use it or else generate one\n    const id = (getState().selectedAsset.id) ? getState().selectedAsset.id : uuid();\n\n    dispatch(updateSelectedAsset({ 'name': 'id', 'value': id }));\n\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${id}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL }= await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: { uploadURL, id }\n    });\n\n    dispatch(uploadFile(fileObj, uploadURL));\n\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const uploadFile = (fileObj, uploadUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, config);\n    const fileUrl = response.config.url.split('?')[0];\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n\n    dispatch(updateAssetUpload(fileObj, fileUrl));\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateAssetUpload = (fileObj, url) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n  dispatch(stopUpload());\n}\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: STOP_UPLOAD });\n\n    const asset = getState().selectedAsset;\n\n    getState().upload.isNew\n      ? await dispatch(createAsset(asset))\n      : await dispatch(updateAsset(asset));\n\n    dispatch(deselectUploadFile());\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadIsNew = () => {\n  return { type: UPLOAD_IS_NEW };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType,\n    children,\n    hidden,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  if (hidden) return null;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n  if (linkTo) {\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={`ui ${isLoading ? 'active' : ''} inverted dimmer`}>\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\n\nimport { CONTENT_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst ContentList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <table className=\"ui celled striped compact table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Data Type</th>\n            <th>ID</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList(props)}\n        </tbody>\n      </table>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nconst renderPageHeader = () => {\n  return(\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n          <h1>Content List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/contents/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Content\"\n                  tooltipPosition=\"left center\">\n            New Content\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.contents.map(content => {\n    const linkPath = `/${CONTENT_RESOURCE}/${content.id}/edit`;\n\n    return(\n      <tr key={content.id}>\n        <td>\n          <Link to={linkPath}>\n            {content.title}\n          </Link>\n        </td>\n        <td>\n          {content.resourceType}\n        </td>\n        <td className=\"collapsing\">\n          {content.id}\n        </td>\n        <td className=\"collapsing\">\n          {content.dateModified}\n        </td>\n        <td className=\"collapsing\">\n          <div className=\"ui icon buttons\">\n            <Button buttonType=\"icon\"\n                    iconType=\"code\"\n                    tooltipText=\"Show JSON\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => props.previewJson(content)}>\n              Show JSON\n            </Button>\n            <Button buttonType=\"icon\"\n                    iconType=\"desktop\"\n                    tooltipText=\"Preview in Browser\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => props.previewHtml(content)}>\n              Preview in Browser\n            </Button>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Content\"\n                    tooltipPosition=\"top right\"\n                    onClick={() => props.deleteContent(content.id)}>Delete Content\n            </Button>\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nexport default memo(ContentList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteContent,\n  fetchContents,\n  previewHtml,\n  previewJson\n} from '../actions';\n\nimport ContentListView from '../components/views/ContentList';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  render() {\n    return <ContentListView contents={this.props.contents}\n                            deleteContent={this.props.deleteContent}\n                            isLoading={this.props.isLoading}\n                            previewHtml={this.props.previewHtml}\n                            previewJson={this.props.previewJson} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteContent,\n  fetchContents,\n  previewHtml,\n  previewJson\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentList)\n","import * as api from '../components/api/Api';\n\nimport { CONTENT_RESOURCE }  from '../config';\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  FETCH_CONTENTS,\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  UPDATE_CONTENT\n} from './types';\n\nexport const fetchContents = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENTS,\n      payload: response.filter(content => content.resourceType === CONTENT_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.create(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: CREATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.update(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: UPDATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deleteContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: DELETE_CONTENT,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n","import React from 'react';\n\nconst Field = props => {\n  const handleChange = (event) => {\n    if (!props.readOnly) props.onChange(event);\n  };\n\n  const renderInput = () => {\n    switch(props.type) {\n      case 'text':\n      default:\n        return renderTextInput();\n      case 'select':\n        return renderSelect();\n      case 'textarea':\n        return renderTextArea();\n    }\n  };\n\n  const renderTextInput = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <input name={props.name}\n               type={props.type}\n               placeholder={props.placeholder}\n               value={props.value}\n               onChange={handleChange} />\n      </div>\n    );\n  };\n\n  const renderSelect = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={props.name}>{props.label}</label>\n        <select name={props.name}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={handleChange}>\n          {props.children}\n        </select>\n      </div>\n    );\n  };\n\n  const renderTextArea = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <textarea name={props.name}\n                  placeholder={props.placeholder}\n                  value={props.value}\n                  onChange={handleChange}></textarea>\n      </div>\n    );\n  };\n\n  if (props.hidden) return null;\n\n  return renderInput();\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\n\nconst ContentForm = props => {\n  const { content, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={content.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={content.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={content.title}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"subtitle\"\n             label=\"Subtitle\"\n             placeholder=\"subtitle\"\n             value={content.subtitle}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"textarea\"\n             name=\"copyText\"\n             label=\"Copy Text\"\n             placeholder=\"copy text\"\n             value={content.copyText}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={content.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={content.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"code\"\n                tooltipText=\"Show JSON\"\n                tooltipPosition=\"top center\"\n                onClick={() => props.previewJson(content)}>Show JSON</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"desktop\"\n                tooltipText=\"Preview in Browser\"\n                tooltipPosition=\"top center\"\n                onClick={() => props.previewHtml(content)}>Preview in Browser</Button>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Content\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n  \n  render() {\n    return this.props.redirect\n      ? <Redirect to={this.props.path} />\n      : null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>New Content</h1>\n      <ContentForm content={props.content}\n                   isNew={true}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.createContent}\n                   onFormUpdate={props.updateSelectedContent}\n                   previewHtml={props.previewHtml}\n                   previewJson={props.previewJson}/>\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\nexport default memo(ContentCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createContent,\n  deselectContent,\n  newContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateSelectedContent\n} from '../actions';\n\nimport ContentCreateView from '../components/views/ContentCreate';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentCreateView content={this.props.content}\n                              createContent={this.props.createContent}\n                              isLoading={this.props.isLoading}\n                              previewHtml={this.props.previewHtml}\n                              previewJson={this.props.previewJson}\n                              startRedirect={this.props.startRedirect}\n                              updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  createContent,\n  deselectContent,\n  newContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateSelectedContent\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>Edit Content</h1>\n      <ContentForm content={props.content}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.updateContent}\n                   onFormUpdate={props.updateSelectedContent}\n                   previewHtml={props.previewHtml}\n                   previewJson={props.previewJson}/>\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nexport default memo(ContentEdit);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectContent,\n  fetchContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateContent,\n  updateSelectedContent\n} from '../actions';\n\nimport ContentEditView from '../components/views/ContentEdit';\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentEditView content={this.props.content}\n                            isLoading={this.props.isLoading}\n                            previewHtml={this.props.previewHtml}\n                            previewJson={this.props.previewJson}\n                            startRedirect={this.props.startRedirect}\n                            updateContent={this.props.updateContent}\n                            updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectContent,\n  fetchContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateContent,\n  updateSelectedContent\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst AssetList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <div className=\"ui divided relaxed list\">\n        {renderList(props)}\n      </div>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  )\n};\n\nconst renderPageHeader = () => {\n  return (\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n        <h1>Asset List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/assets/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Asset\"\n                  tooltipPosition=\"left center\">\n            New Asset\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.assets.map(asset => {\n    const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n    return (\n      <div className=\"item\"\n           key={asset.id}>\n        <img className=\"ui small image\"\n             src={asset.url}\n             alt=\"alt text placeholder\"></img>\n        <div className=\"content\">\n          <Link to={linkPath} className=\"header\">\n            {asset.title}\n          </Link>\n          <div className=\"description\">\n            <p><strong>ID: </strong>{asset.id}<br />\n            <strong>Date Modified: </strong>{asset.dateModified}<br />\n            <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n            <strong>File Type: </strong>{asset.file.type}</p>\n          </div>\n        </div>\n        <div className=\"ui icon buttons right floated content\">\n          <Button buttonType=\"icon\"\n                  iconType=\"code\"\n                  tooltipText=\"Show JSON\"\n                  tooltipPosition=\"top center\"\n                  onClick={() => props.previewJson(asset)}>\n            Show JSON\n          </Button>\n          <Button buttonType=\"icon\"\n                  iconType=\"trash alternate outline\"\n                  onClick={() => props.deleteAsset(asset.id)}\n                  tooltipPosition=\"top center\"\n                  tooltipText=\"Delete Asset\">\n            Delete Asset\n          </Button>\n        </div>\n      </div>\n    );\n  });\n}\nexport default memo(AssetList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteAsset,\n  fetchAssets,\n  previewJson\n} from '../actions';\n\nimport AssetListView from '../components/views/AssetList';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  render() {\n    return <AssetListView assets={this.props.assets}\n                          deleteAsset={this.props.deleteAsset}\n                          isLoading={this.props.isLoading}\n                          previewJson={this.props.previewJson} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteAsset,\n  fetchAssets,\n  previewJson\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetList)\n","import React from 'react';\n\nconst FilePicker = props => {\n  if (props.hidden)  return null;\n\n  const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n  return (\n    <div className={fieldClasses}>\n      <label htmlFor=\"file\">File</label>\n      <input name=\"file\"\n             type=\"file\"\n             onChange={(e) => props.onChange(e.target.files[0])} />\n\n      {props.isUploading && <p>Uploading: {props.progress}%</p>}\n\n      {!props.isUploading && props.preview ? (\n        <div>\n          <div className=\"ui hidden divider\"></div>\n          <img className=\"ui big image\"\n               src={props.asset.url}\n               alt=\"alt text placeholder\">\n           </img>\n           <div className=\"ui divider\"></div>\n         </div>\n       ) : ''}\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectUploadFile,\n  selectUploadFile\n} from '../actions';\n\nimport FilePickerView from '../components/forms/FilePicker';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.deselectUploadFile();\n  }\n\n  render() {\n    return <FilePickerView asset={this.props.asset}\n                           isUploading={this.props.isUploading}\n                           onChange={this.props.selectUploadFile}\n                           preview={this.props.preview}\n                           progress={this.props.progress}\n                           required={this.props.required}\n                           value={this.props.value} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    upload: state.upload,\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectUploadFile,\n  selectUploadFile\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (FilePicker);\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport FilePicker from '../../containers/FilePicker';\n\nconst AssetForm = props => {\n  const { asset, upload, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={asset.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={asset.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={asset.title}\n             required={true}\n             onChange={handleChange} />\n\n      <FilePicker asset={asset}\n                  preview={!isNew}\n                  value={upload.fileObj}\n                  required={true}\n                  progress={upload.progress}\n                  isUploading={upload.isUploading} />\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={asset.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={asset.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"code\"\n                tooltipText=\"Show JSON\"\n                tooltipPosition=\"top center\"\n                onClick={() => props.previewJson(asset)}>Show JSON</Button>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Asset\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AssetForm;\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>New Asset</h1>\n      <AssetForm asset={props.asset}\n                 isNew={true}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 previewJson={props.previewJson}\n                 upload={props.upload} />\n       <LoadingIndicator isLoading={props.isLoading}\n                         message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\n\nexport default memo(AssetCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n} from '../actions';\n\nimport AssetCreateView from '../components/views/AssetCreate';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetCreateView asset={this.props.asset}\n                            isLoading={this.props.isLoading}\n                            previewJson={this.props.previewJson}\n                            startRedirect={this.props.startRedirect}\n                            startUpload={this.props.startUpload}\n                            updateSelectedAsset={this.props.updateSelectedAsset}\n                            upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>Edit Asset</h1>\n      <AssetForm asset={props.asset}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 previewJson={props.previewJson}\n                 upload={props.upload} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n}\n\nexport default memo(AssetEdit);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deselectAsset,\n  fetchAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n } from '../actions';\n\nimport AssetEditView from '../components/views/AssetEdit';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetEditView asset={this.props.asset}\n                          isLoading={this.props.isLoading}\n                          previewJson={this.props.previewJson}\n                          startRedirect={this.props.startRedirect}\n                          startUpload={this.props.startUpload}\n                          updateSelectedAsset={this.props.updateSelectedAsset}\n                          upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectAsset,\n  fetchAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from '../containers/ContentList';\nimport ContentCreate from '../containers/ContentCreate';\nimport ContentEdit from '../containers/ContentEdit';\nimport AssetList from '../containers/AssetList';\nimport AssetCreate from '../containers/AssetCreate';\nimport AssetEdit from '../containers/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport {\n  CREATE_ASSET,\n  DELETE_ASSET,\n  FETCH_ASSETS,\n  UPDATE_ASSET\n} from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state, action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a );\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  FETCH_CONTENTS,\n  UPDATE_CONTENT\n} from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport {\n  START_LOADING,\n  STOP_LOADING,\n  START_REDIRECT,\n  STOP_REDIRECT\n} from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config';\nimport {\n  DESELECT_ASSET,\n  FETCH_ASSET,\n  NEW_ASSET,\n  UPDATE_SELECTED_ASSET\n} from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config';\nimport {\n  DESELECT_CONTENT,\n  FETCH_CONTENT,\n  NEW_CONTENT,\n  UPDATE_SELECTED_CONTENT\n} from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config';\nimport {\n  DESELECT_UPLOAD_FILE,\n  GET_PRESIGNED_URL,\n  SELECT_UPLOAD_FILE,\n  SET_UPLOAD_PROGRESS,\n  START_UPLOAD,\n  STOP_UPLOAD,\n  UPLOAD_FILE,\n  UPLOAD_IS_NEW \n} from '../actions/types';\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return {\n        ...state,\n        fileObj: action.payload\n      }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return {\n        ...state,\n        uploadUrl: action.payload.uploadUrl,\n        id: action.payload.id\n      }\n    case START_UPLOAD:\n      return {\n        ...state,\n        isUploading: true\n      }\n    case STOP_UPLOAD:\n      return {\n        ...state,\n        isUploading: false\n      }\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        fileUrl: action.payload\n      };\n    case SET_UPLOAD_PROGRESS:\n      return {\n        ...state,\n        progress: action.payload\n      };\n    case UPLOAD_IS_NEW:\n      return {\n        ...state,\n        isNew: true\n      }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}