{"version":3,"sources":["components/Header.js","config/constants.js","components/api/Api.js","config/actionTypes.js","actions/metadataActions.js","actions/previewActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","actions/assetsActions.js","components/forms/Button.js","components/LoadingIndicator.js","components/views/ContentList/ContentListView.js","components/views/ContentList/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate/ContentCreateView.js","components/views/ContentCreate/ContentCreate.js","components/views/ContentEdit/ContentEditView.js","components/views/ContentEdit/ContentEdit.js","components/views/AssetList/AssetListView.js","components/views/AssetList/AssetList.js","components/forms/FilePicker/FilePickerView.js","components/forms/FilePicker/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate/AssetCreateView.js","components/views/AssetCreate/AssetCreate.js","components/views/AssetEdit/AssetEditView.js","components/views/AssetEdit/AssetEdit.js","components/App.js","config/initialStates.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","create","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","resource","body","params","url","_ref2","data","wrap","_context","prev","next","URL","concat","axios","post","JSON","stringify","sent","abrupt","t0","console","log","stop","_x","_x2","_x3","apply","this","arguments","index","_ref3","_callee2","_ref4","_context2","get","_x4","read","_ref5","_callee3","id","_ref6","_context3","_x5","_x6","update","_ref7","_callee4","_ref8","_context4","put","_x7","_x8","destroy","_ref9","_callee5","_ref10","_context5","delete","_x9","_x10","upload","_ref11","_callee6","uploadUrl","fileObj","dispatch","response","fileUrl","_context6","headers","ACL","Content-Type","type","onUploadProgress","progressEvent","payload","Number","parseInt","loaded","size","config","split","_x11","_x12","_x13","startRedirect","previewHtml","node","window","open","resourceType","previewJson","deselectContent","updateSelectedContent","property","deselectAsset","updateSelectedAsset","deselectUploadFile","startUpload","getState","getPresignedUrl","uploadFile","updateAssetUpload","stopUpload","assetId","s3Params","urlParams","uploadURL","selectedAsset","uuid","name","value","Bucket","Key","ContentType","getSignedUrl","api","_getState$upload","_getState$upload2","fileData","_getState","isNew","asset","Button","props","buttonType","children","hidden","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","LoadingIndicator","isLoading","message","memo","contents","deleteContent","forms_Button","map","content","linkPath","key","title","dateModified","renderList","components_LoadingIndicator","ContentList","listContents","ContentList_ContentListView","React","Component","mapDispatchToProps","filter","connect","state","metadata","Field","disabled","inputType","label","onChange","placeholder","readOnly","required","handleChange","event","fieldClasses","renderTextInput","htmlFor","renderSelect","renderTextArea","renderInput","ContentForm","_event$target","target","onFormUpdate","forms_Field","subtitle","copyText","dateCreated","preventDefault","onFormCancel","onFormSubmit","Redirector","stopRedirect","redirect","react_router","path","components_Redirector","forms_ContentForm","ContentCreate","newContent","ContentCreate_ContentCreateView","createContent","selectedContent","ContentEdit","getContent","match","ContentEdit_ContentEditView","updateContent","assets","deleteAsset","src","alt","file","toFixed","AssetList","listAssets","AssetList_AssetListView","FilePicker","isUploading","preview","progress","e","files","FilePickerView","selectUploadFile","AssetForm","forms_FilePicker_FilePicker","forms_AssetForm","AssetCreate","newAsset","AssetCreate_AssetCreateView","AssetEdit","getAsset","AssetEdit_AssetEditView","App","style","margin","basename","components_Header","exact","component","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_METADATA_STATE","INITIAL_SELECTED_ASSET_STATE","INITIAL_SELECTED_CONTENT_STATE","INITIAL_UPLOAD_STATE","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.3a01b971.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// Base URLs\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Path constants\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_RESOURCE = 'contents';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n","import axios from 'axios';\nimport { API_BASE_URL }  from '../../config/constants';\nimport {\n  SET_UPLOAD_PROGRESS\n} from '../../config/actionTypes';\n\n// import {\n//   startLoading,\n//   stopLoading,\n// } from '../../actions';\n\nexport const create = async (resource, body, params) => {\n  // POST can include params (getSignedUrl: true) for S3 authentication\n  try {\n    const url = new URL(`${API_BASE_URL}/${resource}`);\n    const { data } = await axios.post(url, JSON.stringify(body), params);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const index = async (resource) => {\n  try {\n    const url = `${API_BASE_URL}/${resource}`;\n    const { data } = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const read = async (resource, id) => {\n  try {\n    const url = `${API_BASE_URL}/${resource}/${id}`;\n    const { data } = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const update = async (resource, body) => {\n  try {\n    const url = new URL(`${API_BASE_URL}/${resource}/${body.id}`);\n    const { data } = await axios.put(url, JSON.stringify(body));\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const destroy = async (resource, id) => {\n  try {\n    const url = `${API_BASE_URL}/${resource}/${id}`;\n    const { data } = await axios.delete(url);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const upload = async (uploadUrl, fileObj, dispatch) => {\n  try {\n    const params = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, params);\n    const fileUrl = response.config.url.split('?')[0];\n\n    return fileUrl;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const LIST_ASSETS = 'LIST_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const LIST_CONTENTS = 'LIST_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// preview action types\nexport const PREVIEW_HTML = 'PREVIEW_HTML';\nexport const PREVIEW_JSON = 'PREVIEW_JSON';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const GET_ASSET = 'GET_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const GET_CONTENT = 'GET_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const UPLOAD_IS_NEW = 'UPLOAD_IS_NEW';\n","import {\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  STOP_REDIRECT\n} from '../config/actionTypes';\n\nexport const startLoading = () => dispatch => {\n  dispatch({ type: START_LOADING });\n};\n\nexport const stopLoading = () => dispatch => {\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const startRedirect = () => dispatch => {\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const stopRedirect = () => dispatch => {\n  dispatch({ type: STOP_REDIRECT });\n};\n","import {\n  CONTENT_LAKE_URL,\n  SITE_REPO_URL\n} from '../config/constants';\nimport {\n  PREVIEW_HTML,\n  PREVIEW_JSON\n} from '../config/actionTypes';\n\n// move to utils file instead of actions\n\nexport const previewHtml = node => {\n   window.open(`${SITE_REPO_URL}/${node.resourceType}/${node.id}.html`);\n\n   return { type: PREVIEW_HTML };\n};\n\nexport const previewJson = node => {\n   window.open(`${CONTENT_LAKE_URL}/${node.resourceType}/${node.id}.json`);\n\n   return { type: PREVIEW_JSON };\n};\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config/constants';\nimport {\n  DESELECT_CONTENT,\n  GET_CONTENT,\n  NEW_CONTENT,\n  START_LOADING,\n  STOP_LOADING,\n  UPDATE_SELECTED_CONTENT\n} from '../config/actionTypes';\n\nexport const getContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.read(CONTENT_RESOURCE, id);\n\n    dispatch({\n      type: GET_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  // const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: getState().selectedContent\n  });\n};\n\nexport const deselectContent = () => dispatch => {\n  dispatch({ type: DESELECT_CONTENT });\n};\n\nexport const updateSelectedContent = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE } from '../config/constants';\nimport {\n  DESELECT_ASSET,\n  GET_ASSET,\n  NEW_ASSET,\n  START_LOADING,\n  STOP_LOADING,\n  UPDATE_SELECTED_ASSET,\n  UPLOAD_IS_NEW\n} from '../config/actionTypes';\n\nexport const getAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.read(ASSET_RESOURCE, id);\n\n    dispatch({\n      type: GET_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: UPLOAD_IS_NEW });\n    dispatch({\n      type: NEW_ASSET\n    });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deselectAsset = () => dispatch => {\n  dispatch({ type: DESELECT_ASSET });\n};\n\nexport const updateSelectedAsset = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\nimport uuid from 'uuid/v4';\n\nimport { createAsset, updateAsset, updateSelectedAsset } from './'\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config/constants';\nimport {\n  DESELECT_UPLOAD_FILE,\n  GET_PRESIGNED_URL,\n  SELECT_UPLOAD_FILE,\n  START_UPLOAD,\n  STOP_UPLOAD,\n  UPLOAD_FILE,\n  UPLOAD_IS_NEW\n} from '../config/actionTypes';\n\nexport const uploadIsNew = () => {\n  return { type: UPLOAD_IS_NEW };\n};\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return { type: DESELECT_UPLOAD_FILE };\n};\n\nexport const startUpload = () => async (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  await dispatch(getPresignedUrl());\n  await dispatch(uploadFile());\n  dispatch(updateAssetUpload());\n  await dispatch(stopUpload());\n  dispatch(deselectUploadFile());\n};\n\nexport const getPresignedUrl = () => async (dispatch, getState) => {\n  try {\n    const { fileObj } = getState().upload;\n    const assetId = getState().selectedAsset.id;\n\n    // if state.selectedAsset has id, use it or else generate one\n    const id = assetId ? assetId : uuid();\n\n    dispatch(updateSelectedAsset({ 'name': 'id', 'value': id }));\n\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${id}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL } = await api.create(ASSET_RESOURCE, s3Params, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: { uploadUrl: uploadURL, id }\n    });\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const uploadFile = () => async (dispatch, getState) => {\n  try {\n    const { uploadUrl, fileObj } = getState().upload;\n    const fileUrl = await api.upload(uploadUrl, fileObj, dispatch);\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateAssetUpload = url => (dispatch, getState) => {\n  const { fileUrl, fileObj } = getState().upload;\n\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': fileUrl }));\n}\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: STOP_UPLOAD });\n\n    const { selectedAsset } = getState();\n\n    getState().upload.isNew\n      ? await dispatch(createAsset(selectedAsset))\n      : await dispatch(updateAsset(selectedAsset));\n  } catch (error) {\n    return error;\n  }\n};\n","import * as api from '../components/api/Api';\n\nimport { ASSET_RESOURCE }  from '../config/constants';\nimport {\n  CREATE_ASSET,\n  DELETE_ASSET,\n  LIST_ASSETS,\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  UPDATE_ASSET\n} from '../config/actionTypes';\n\nexport const listAssets = () => async dispatch => {\n  try {\n    // add to API wrapper?\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(ASSET_RESOURCE);\n\n    dispatch({\n      type: LIST_ASSETS,\n      payload: response.filter(node => node.resourceType === ASSET_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n\n  } catch (error) {\n    // handle errors; dipatch to state?\n    console.log(error);\n    return error;\n  }\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.create(ASSET_RESOURCE, asset);\n\n    dispatch({\n      type: CREATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.update(ASSET_RESOURCE, asset);\n\n    dispatch({\n      type: UPDATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deleteAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(ASSET_RESOURCE, id);\n\n    dispatch({\n      type: DELETE_ASSET,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType,\n    children,\n    hidden,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  if (hidden) return null;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n\n  if (linkTo) {\n    // don't duplicate icon & type, convert to portable\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className=\"ui active inverted dimmer\">\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../forms/Button';\nimport LoadingIndicator from '../../LoadingIndicator';\n\nimport { CONTENT_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../../config/constants';\n\n// use propTypes?\n\nconst ContentListView = props => {\n  const {\n    contents,\n    deleteContent,\n    isLoading,\n    previewHtml,\n    previewJson\n  } = props;\n\n  const renderPageHeader = () => {\n    return(\n      <div className=\"ui two column grid\">\n        <div className=\"row\">\n          <div className=\"left floated column\">\n            <h1>Content List</h1>\n          </div>\n          <div className=\"right floated right aligned column\">\n\n            {/*\n              hard coded linkTo path and button labels\n              move param strings to config?\n            */}\n\n            <Button linkTo=\"/contents/new\"\n                    buttonType=\"primary\"\n                    iconType=\"plus\"\n                    tooltipText=\"New Content\"\n                    tooltipPosition=\"left center\">\n              New Content\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const renderList = contents => {\n    return contents.map(content => {\n      const linkPath = `/${CONTENT_RESOURCE}/${content.id}/edit`;\n\n      return(\n        <tr key={content.id}>\n          <td>\n            <Link to={linkPath}>\n              {content.title}\n            </Link>\n          </td>\n          <td>\n            {content.resourceType}\n          </td>\n          <td className=\"collapsing\">\n            {content.id}\n          </td>\n          <td className=\"collapsing\">\n            {content.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <Button buttonType=\"icon\"\n                      iconType=\"code\"\n                      tooltipText=\"Show JSON\"\n                      tooltipPosition=\"top center\"\n                      onClick={() => previewJson(content)}>\n                Show JSON\n              </Button>\n              <Button buttonType=\"icon\"\n                      iconType=\"desktop\"\n                      tooltipText=\"Preview in Browser\"\n                      tooltipPosition=\"top center\"\n                      onClick={() => previewHtml(content)}>\n                Preview in Browser\n              </Button>\n              <Button buttonType=\"icon\"\n                      iconType=\"trash alternate outline\"\n                      tooltipText=\"Delete Content\"\n                      tooltipPosition=\"top right\"\n                      onClick={() => deleteContent(content.id)}>Delete Content\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <div>\n      {renderPageHeader()}\n      <table className=\"ui celled striped compact table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Data Type</th>\n            <th>ID</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList(contents)}\n        </tbody>\n      </table>\n\n      <LoadingIndicator isLoading={isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nexport default memo(ContentListView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteContent,\n  listContents,\n  previewHtml,\n  previewJson\n} from '../../../actions';\n\nimport ContentListView from './ContentListView';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.listContents();\n  }\n\n  render() {\n    return <ContentListView contents={this.props.contents}\n                            deleteContent={this.props.deleteContent}\n                            isLoading={this.props.isLoading}\n                            previewHtml={this.props.previewHtml}\n                            previewJson={this.props.previewJson} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteContent,\n  listContents,\n  previewHtml,\n  previewJson\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentList)\n","import * as api from '../components/api/Api';\n\nimport { CONTENT_RESOURCE }  from '../config/constants';\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  LIST_CONTENTS,\n  START_LOADING,\n  START_REDIRECT,\n  STOP_LOADING,\n  UPDATE_CONTENT\n} from '../config/actionTypes';\n\nexport const listContents = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(CONTENT_RESOURCE);\n\n    dispatch({\n      type: LIST_CONTENTS,\n      payload: response.filter(content => content.resourceType === CONTENT_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.create(CONTENT_RESOURCE, content);\n\n    dispatch({\n      type: CREATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.update(CONTENT_RESOURCE, content);\n\n    dispatch({\n      type: UPDATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n\nexport const deleteContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(CONTENT_RESOURCE, id);\n\n    dispatch({\n      type: DELETE_CONTENT,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    // handle errors\n    console.log(error);\n    return error;\n  }\n};\n","import React from 'react';\n\nconst Field = props => {\n  const {\n    disabled,\n    hidden,\n    inputType,\n    label,\n    name,\n    onChange,\n    placeholder,\n    readOnly,\n    required,\n    value\n  } = props;\n\n  if (hidden) return null;\n\n  const handleChange = (event) => {\n    if (!readOnly) onChange(event);\n  };\n\n  const renderInput = () => {\n    switch(inputType) {\n      case 'text':\n      default:\n        return renderTextInput();\n      case 'select':\n        return renderSelect();\n      case 'textarea':\n        return renderTextArea();\n    }\n  };\n\n  const fieldClasses = `${required ? 'required ' : ''}${disabled ? 'disabled ' : ''}field`;\n\n  const renderTextInput = () => {\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={name}>{label}</label>\n        <input name={name}\n               type={props.inputType}\n               placeholder={placeholder}\n               value={value}\n               onChange={handleChange} />\n      </div>\n    );\n  };\n\n  const renderSelect = () => {\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={name}>{label}</label>\n        <select name={name}\n                placeholder={placeholder}\n                value={value}\n                onChange={handleChange}>\n          {props.children}\n        </select>\n      </div>\n    );\n  };\n\n  const renderTextArea = () => {\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={name}>{label}</label>\n        <textarea name={name}\n                  placeholder={placeholder}\n                  value={value}\n                  onChange={handleChange}></textarea>\n      </div>\n    );\n  };\n\n  return renderInput();\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Button from './Button';\nimport Field from './Field';\n\nconst ContentForm = props => {\n  const { content, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field inputType=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={content.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={content.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={content.title}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field inputType=\"text\"\n             name=\"subtitle\"\n             label=\"Subtitle\"\n             placeholder=\"subtitle\"\n             value={content.subtitle}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field inputType=\"textarea\"\n             name=\"copyText\"\n             label=\"Copy Text\"\n             placeholder=\"copy text\"\n             value={content.copyText}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field inputType=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={content.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={content.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"code\"\n                tooltipText=\"Show JSON\"\n                tooltipPosition=\"top center\"\n                onClick={() => props.previewJson(content)}>Show JSON</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"desktop\"\n                tooltipText=\"Preview in Browser\"\n                tooltipPosition=\"top center\"\n                onClick={() => props.previewHtml(content)}>Preview in Browser</Button>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Content\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n\n  render() {\n    if (!this.props.redirect) return null;\n\n    return <Redirect to={this.props.path} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../../forms/ContentForm';\nimport LoadingIndicator from '../../LoadingIndicator';\nimport Redirector from '../../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../../config/constants';\n\nconst ContentCreateView = props => {\n  const {\n    content,\n    isLoading,\n    onFormCancel,\n    onFormSubmit,\n    onFormUpdate,\n    previewHtml,\n    previewJson\n  } = props;\n\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>New Content</h1>\n      <ContentForm content={content}\n                   isNew={true}\n                   onFormCancel={onFormCancel}\n                   onFormSubmit={onFormSubmit}\n                   onFormUpdate={onFormUpdate}\n                   previewHtml={previewHtml}\n                   previewJson={previewJson}/>\n      <LoadingIndicator isLoading={isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\nexport default memo(ContentCreateView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createContent,\n  deselectContent,\n  newContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateSelectedContent\n} from '../../../actions';\n\nimport ContentCreateView from './ContentCreateView';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentCreateView content={this.props.content}\n                              onFormSubmit={this.props.createContent}\n                              isLoading={this.props.isLoading}\n                              previewHtml={this.props.previewHtml}\n                              previewJson={this.props.previewJson}\n                              onFormCancel={this.props.startRedirect}\n                              onFormUpdate={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  createContent,\n  deselectContent,\n  newContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateSelectedContent\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../../forms/ContentForm';\nimport LoadingIndicator from '../../LoadingIndicator';\nimport Redirector from '../../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../../config/constants';\n\nconst ContentEditView = props => {\n  const {\n    content,\n    isLoading,\n    onFormCancel,\n    onFormSubmit,\n    onFormUpdate,\n    previewHtml,\n    previewJson\n  } = props;\n\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>Edit Content</h1>\n      <ContentForm content={content}\n                   onFormCancel={onFormCancel}\n                   onFormSubmit={onFormSubmit}\n                   onFormUpdate={onFormUpdate}\n                   previewHtml={previewHtml}\n                   previewJson={previewJson}/>\n      <LoadingIndicator isLoading={isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nexport default memo(ContentEditView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectContent,\n  getContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateContent,\n  updateSelectedContent\n} from '../../../actions';\n\nimport ContentEditView from './ContentEditView';\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.getContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentEditView content={this.props.content}\n                            isLoading={this.props.isLoading}\n                            previewHtml={this.props.previewHtml}\n                            previewJson={this.props.previewJson}\n                            onFormCancel={this.props.startRedirect}\n                            onFormSubmit={this.props.updateContent}\n                            onFormUpdate={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectContent,\n  getContent,\n  previewHtml,\n  previewJson,\n  startRedirect,\n  updateContent,\n  updateSelectedContent\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../../forms/Button';\nimport LoadingIndicator from '../../LoadingIndicator';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../../config/constants';\n\nconst AssetListView = props => {\n  const {\n    assets,\n    deleteAsset,\n    isLoading,\n    previewJson\n  } = props;\n\n  const renderPageHeader = () => {\n    return (\n      <div className=\"ui two column grid\">\n        <div className=\"row\">\n          <div className=\"left floated column\">\n          <h1>Asset List</h1>\n          </div>\n          <div className=\"right floated right aligned column\">\n            <Button linkTo=\"/assets/new\"\n                    buttonType=\"primary\"\n                    iconType=\"plus\"\n                    tooltipText=\"New Asset\"\n                    tooltipPosition=\"left center\">\n              New Asset\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const renderList = assets => {\n    return assets.map(asset => {\n      const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n      return (\n        <div className=\"item\"\n             key={asset.id}>\n          <img className=\"ui small image\"\n               src={asset.url}\n               alt=\"alt text placeholder\"></img>\n          <div className=\"content\">\n            <Link to={linkPath} className=\"header\">\n              {asset.title}\n            </Link>\n            <div className=\"description\">\n              <p><strong>ID: </strong>{asset.id}<br />\n              <strong>Date Modified: </strong>{asset.dateModified}<br />\n              <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n              <strong>File Type: </strong>{asset.file.type}</p>\n            </div>\n          </div>\n          <div className=\"ui icon buttons right floated content\">\n            <Button buttonType=\"icon\"\n                    iconType=\"code\"\n                    tooltipText=\"Show JSON\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => previewJson(asset)}>\n              Show JSON\n            </Button>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    onClick={() => deleteAsset(asset.id)}\n                    tooltipPosition=\"top center\"\n                    tooltipText=\"Delete Asset\">\n              Delete Asset\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  return (\n    <div>\n      {renderPageHeader()}\n      <div className=\"ui divided relaxed list\">\n        {renderList(assets)}\n      </div>\n\n      <LoadingIndicator isLoading={isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  )\n};\n\nexport default memo(AssetListView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteAsset,\n  listAssets,\n  previewJson\n} from '../../../actions';\n\nimport AssetListView from './AssetListView';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.listAssets();\n  }\n\n  render() {\n    return <AssetListView assets={this.props.assets}\n                          deleteAsset={this.props.deleteAsset}\n                          isLoading={this.props.isLoading}\n                          previewJson={this.props.previewJson} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteAsset,\n  listAssets,\n  previewJson\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetList)\n","import React from 'react';\n\nconst FilePicker = props => {\n  const {\n    asset,\n    disabled,\n    hidden,\n    isUploading,\n    onChange,\n    preview,\n    progress,\n    required\n   } = props;\n\n  if (hidden) return null;\n\n  const fieldClasses = `${required ? 'required ' : ''}${disabled ? 'disabled ' : ''}field`;\n\n  return (\n    <div className={fieldClasses}>\n      <label htmlFor=\"file\">File</label>\n      <input name=\"file\"\n             type=\"file\"\n             onChange={(e) => onChange(e.target.files[0])} />\n\n      {isUploading && <p>Uploading: {progress}%</p>}\n\n      {!isUploading && preview ? (\n        <div>\n          <div className=\"ui hidden divider\"></div>\n          <img className=\"ui big image\"\n               src={asset.url}\n               alt=\"alt text placeholder\">\n           </img>\n           <div className=\"ui divider\"></div>\n         </div>\n       ) : ''}\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectUploadFile,\n  selectUploadFile\n} from '../../../actions';\n\nimport FilePickerView from './FilePickerView';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.deselectUploadFile();\n  }\n\n  render() {\n    return <FilePickerView asset={this.props.asset}\n                           isUploading={this.props.isUploading}\n                           onChange={this.props.selectUploadFile}\n                           preview={this.props.preview}\n                           progress={this.props.progress}\n                           required={this.props.required}\n                           value={this.props.value} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectUploadFile,\n  selectUploadFile\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (FilePicker);\n","import React from 'react';\n\nimport Button from './Button';\nimport Field from './Field';\nimport FilePicker from './FilePicker/FilePicker';\n\nconst AssetForm = props => {\n  const {\n    asset,\n    isNew,\n    previewJson,\n    upload,\n  } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field inputType=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={asset.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={asset.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={asset.title}\n             required={true}\n             onChange={handleChange} />\n\n      <FilePicker asset={asset}\n                  preview={!isNew}\n                  value={upload.fileObj}\n                  required={true}\n                  progress={upload.progress}\n                  isUploading={upload.isUploading} />\n\n      <Field inputType=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={asset.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field inputType=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={asset.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <Button buttonType=\"secondary\"\n                hidden={isNew}\n                iconType=\"code\"\n                tooltipText=\"Show JSON\"\n                tooltipPosition=\"top center\"\n                onClick={() => previewJson(asset)}>Show JSON</Button>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Asset\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AssetForm;\n","import React, { memo } from 'react'\n\nimport AssetForm from '../../forms/AssetForm';\nimport LoadingIndicator from '../../LoadingIndicator';\nimport Redirector from '../../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../../config/constants';\n\nconst AssetCreateView = props => {\n  const {\n    asset,\n    isLoading,\n    onFormCancel,\n    onFormSubmit,\n    onFormUpdate,\n    previewJson,\n    upload\n  } = props;\n\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>New Asset</h1>\n      <AssetForm asset={asset}\n                 isNew={true}\n                 onFormCancel={onFormCancel}\n                 onFormSubmit={onFormSubmit}\n                 onFormUpdate={onFormUpdate}\n                 previewJson={previewJson}\n                 upload={upload} />\n       <LoadingIndicator isLoading={isLoading}\n                         message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\n\nexport default memo(AssetCreateView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectAsset,\n  newAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n} from '../../../actions';\n\nimport AssetCreateView from './AssetCreateView';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetCreateView asset={this.props.asset}\n                            isLoading={this.props.isLoading}\n                            previewJson={this.props.previewJson}\n                            onFormCancel={this.props.startRedirect}\n                            onFormSubmit={this.props.startUpload}\n                            onFormUpdate={this.props.updateSelectedAsset}\n                            upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectAsset,\n  newAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../../forms/AssetForm';\nimport LoadingIndicator from '../../LoadingIndicator';\nimport Redirector from '../../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../../config/constants';\n\nconst AssetEditView = props => {\n  const {\n    asset,\n    isLoading,\n    previewJson,\n    startRedirect,\n    startUpload,\n    updateSelectedAsset,\n    upload\n  } = props;\n\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>Edit Asset</h1>\n      <AssetForm asset={asset}\n                 onFormCancel={startRedirect}\n                 onFormSubmit={startUpload}\n                 onFormUpdate={updateSelectedAsset}\n                 previewJson={previewJson}\n                 upload={upload} />\n      <LoadingIndicator isLoading={isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n}\n\nexport default memo(AssetEditView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deselectAsset,\n  getAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n} from '../../../actions';\n\nimport AssetEditView from './AssetEditView';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.getAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetEditView asset={this.props.asset}\n                          isLoading={this.props.isLoading}\n                          previewJson={this.props.previewJson}\n                          startRedirect={this.props.startRedirect}\n                          startUpload={this.props.startUpload}\n                          updateSelectedAsset={this.props.updateSelectedAsset}\n                          upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectAsset,\n  getAsset,\n  previewJson,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from './views/ContentList/ContentList';\nimport ContentCreate from './views/ContentCreate/ContentCreate';\nimport ContentEdit from './views/ContentEdit/ContentEdit';\nimport AssetList from './views/AssetList/AssetList';\nimport AssetCreate from './views/AssetCreate/AssetCreate';\nimport AssetEdit from './views/AssetEdit/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import {\n  ASSET_RESOURCE,\n  CONTENT_RESOURCE\n} from './constants';\n\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n};\nexport const INITIAL_PREVIEW_STATE = { };\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  resourceType: ASSET_RESOURCE,\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  resourceType: CONTENT_RESOURCE,\n  title: '',\n  subtitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  id: '',\n  isNew: false,\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config/initialStates';\nimport {\n  CREATE_ASSET,\n  DELETE_ASSET,\n  LIST_ASSETS,\n  UPDATE_ASSET\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case LIST_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state, action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a );\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config/initialStates';\nimport {\n  CREATE_CONTENT,\n  DELETE_CONTENT,\n  LIST_CONTENTS,\n  UPDATE_CONTENT\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case LIST_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config/initialStates';\nimport {\n  START_LOADING,\n  STOP_LOADING,\n  START_REDIRECT,\n  STOP_REDIRECT\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config/initialStates';\nimport {\n  DESELECT_ASSET,\n  GET_ASSET,\n  NEW_ASSET,\n  UPDATE_SELECTED_ASSET\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case GET_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config/initialStates';\nimport {\n  DESELECT_CONTENT,\n  GET_CONTENT,\n  NEW_CONTENT,\n  UPDATE_SELECTED_CONTENT\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case GET_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config/initialStates';\nimport {\n  DESELECT_UPLOAD_FILE,\n  GET_PRESIGNED_URL,\n  SELECT_UPLOAD_FILE,\n  SET_UPLOAD_PROGRESS,\n  START_UPLOAD,\n  STOP_UPLOAD,\n  UPLOAD_FILE,\n  UPLOAD_IS_NEW\n} from '../config/actionTypes';\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return { ...state, fileObj: action.payload }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return {\n        ...state,\n        uploadUrl: action.payload.uploadUrl,\n        id: action.payload.id\n      }\n    case START_UPLOAD:\n      return { ...state, isUploading: true }\n    case STOP_UPLOAD:\n      return { ...state, isUploading: false }\n    case UPLOAD_FILE:\n      return { ...state, fileUrl: action.payload };\n    case SET_UPLOAD_PROGRESS:\n      return { ...state, progress: action.payload };\n    case UPLOAD_IS_NEW:\n      return { ...state, isNew: true }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}