{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/assetsActions.js","actions/types.js","actions/metadataActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","components/buttons/Button.js","components/buttons/ShowJsonButton.js","components/buttons/BrowserPreviewButton.js","components/LoadingIndicator.js","components/views/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate.js","components/views/ContentEdit.js","components/views/AssetList.js","components/forms/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate.js","components/views/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_METADATA_STATE","isLoading","redirect","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_SELECTED_ASSET_STATE","id","dataType","title","url","file","dateCreated","dateModified","INITIAL_SELECTED_CONTENT_STATE","subTitle","copyText","INITIAL_UPLOAD_STATE","fileObj","fileUrl","isUploading","progress","uploadUrl","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","createAsset","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","asset","wrap","_context2","prev","next","type","selectedAsset","api","sent","payload","stop","_x2","_x3","apply","this","arguments","updateAsset","_ref3","_callee3","_context3","_x4","_x5","startRedirect","deselectContent","updateSelectedContent","prop","deselectAsset","updateSelectedAsset","_ref4","_callee4","_context4","startUpload","getPresignedUrl","upload","deselectUploadFile","s3Params","urlParams","uploadURL","Bucket","Key","name","ACL","ContentType","getSignedUrl","uploadFile","t0","abrupt","config","headers","Content-Type","onUploadProgress","progressEvent","Number","parseInt","loaded","size","axios","put","split","updateAssetUpload","fileData","value","_ref","_callee","_context","_x","Button","props","_props$buttonType","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","ShowJsonButton","node","hidden","buttons_Button","window","open","onShowJsonButton","BrowserPreviewButton","onPreview","LoadingIndicator","message","ContentList","fetchContents","_this","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","renderList","components_LoadingIndicator","React","Component","mapDispatchToProps","filter","_x6","connect","state","metadata","Field","handleChange","event","onChange","renderInput","renderTextInput","renderSelect","renderTextArea","fieldClasses","required","disabled","htmlFor","label","placeholder","ContentForm","onFormCancel","preventDefault","onFormSubmit","_event$target","target","onFormUpdate","isNew","forms_Field","readOnly","selectedContent","Redirector","stopRedirect","react_router","path","ContentCreate","newContent","components_Redirector","forms_ContentForm","createContent","ContentEdit","fetchContent","match","updateContent","AssetList","fetchAssets","assets","src","alt","toFixed","deleteAsset","FilePicker","onUnmount","e","files","preview","AssetForm","forms_FilePicker","selectUploadFile","AssetCreate","newAsset","forms_AssetForm","AssetEdit","fetchAsset","App","style","margin","basename","components_Header","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"wNAqBeA,EAlBA,WACb,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,8BAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QAAvB,WAGAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,UAAUF,UAAU,QAA7B,uECZKG,EAAe,iEAYfC,EAAyB,CACpCC,WAAW,EACXC,UAAU,GAECC,EAAuB,GACvBC,EAAyB,GACzBC,EAA+B,CAC1CC,GAAI,GACJC,SAAU,QACVC,MAAO,GACPC,IAAK,GACLC,KAAM,GACNC,YAAa,GACbC,aAAc,IAEHC,EAAiC,CAC5CP,GAAI,GACJC,SAAU,UACVC,MAAO,GACPM,SAAU,GACVC,SAAU,GACVJ,YAAa,GACbC,aAAc,IAGHI,EAAuB,CAClCC,QAAS,GACTC,QAAS,GACTC,aAAa,EACbC,SAAU,EACVC,UAAW,ICtCAC,EAAS,SAACC,EAAMC,EAAUC,GACrC,IAAMhB,EAAM,IAAIiB,IAAJ,GAAAC,OAAW5B,EAAX,KAAA4B,OAA2BH,IAGvC,OAFAf,EAAImB,OAAS,IAAIC,gBAAgBJ,GAE1BK,MAAMrB,EAAK,CACdsB,OAAQ,OACRR,KAAMS,KAAKC,UAAUV,KAEtBW,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACC,SAACC,GACC,OAAOA,GAET,SAACE,GACCC,QAAQC,IAAIF,MAKPG,EAAQ,SAAChB,GACpB,OAAOM,MAAK,GAAAH,OAAI5B,EAAJ,KAAA4B,OAAoBH,IAC7BU,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACC,SAACC,GACC,OAAOA,GAET,SAACE,GACCC,QAAQC,IAAIF,MAKPI,EAAO,SAACnC,EAAIkB,GACvB,OAAOM,MAAK,GAAAH,OAAI5B,EAAJ,KAAA4B,OAAoBH,EAApB,KAAAG,OAAgCrB,IACzC4B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACC,SAACC,GACC,OAAOA,GAET,SAACE,GACCC,QAAQC,IAAIF,MAKPK,EAAS,SAACnB,EAAMC,GAC3B,OAAOM,MAAK,GAAAH,OAAI5B,EAAJ,KAAA4B,OAAoBH,EAApB,KAAAG,OAAgCJ,EAAKjB,IAAM,CACnDyB,OAAQ,MACRR,KAAMS,KAAKC,UAAUV,KAEtBW,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACC,SAACC,GACC,OAAOA,GAET,SAACE,GACCC,QAAQC,IAAIF,MAKPM,EAAU,SAACrC,EAAIkB,GAC1B,OAAOM,MAAK,GAAAH,OAAI5B,EAAJ,KAAA4B,OAAoBH,EAApB,KAAAG,OAAgCrB,GAAM,CAC9CyB,OAAQ,WAETG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KACC,SAACC,GACC,OAAOA,GAET,SAACE,GACCC,QAAQC,IAAIF,MC1DPO,EAAc,iCAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAAlB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC/BN,EAAS,CAAEO,KClBgB,kBDoBrBL,EAAQD,IAAWO,cAHMJ,EAAAE,KAAA,EAIRG,EAAWP,EFnBN,UEeG,OAIzBlB,EAJyBoB,EAAAM,KAM/BV,EAAS,CACPO,KClBwB,eDmBxBI,QAAS3B,IAGXgB,EAAS,CAAEO,KC3Be,iBD4B1BP,EAAS,CAAEO,KC3BiB,mBDeG,wBAAAH,EAAAQ,SAAAb,MAAN,gBAAAc,EAAAC,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,IAedC,EAAc,iCAAAC,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAsB,EAAOpB,EAAUC,GAAjB,IAAAC,EAAAlB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAC/BN,EAAS,CAAEO,KCjCgB,kBDmCrBL,EAAQD,IAAWO,cAHMa,EAAAf,KAAA,EAIRG,EAAWP,EFlCN,UE8BG,OAIzBlB,EAJyBqC,EAAAX,KAM/BV,EAAS,CACPO,KC9BwB,eD+BxBI,QAAS3B,IAGXgB,EAAS,CAAEO,KC1Ce,iBD2C1BP,EAAS,CAAEO,KC1CiB,mBD8BG,wBAAAc,EAAAT,SAAAQ,MAAN,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,IEnBdO,EAAgB,WAC3B,MAAO,CACLjB,KDb0B,mBEwBjBkB,EAAkB,kBAAM,SAACzB,GACpCA,EAAS,CACPO,KFJ4B,mBEK5BI,QAAS,OAIAe,EAAwB,SAAEC,GAAF,OAAY,SAAC3B,GAChDA,EAAS,CACPO,KFRmC,0BESnCI,QAASgB,MCVAC,EAAgB,iCAAAT,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAsB,EAAOpB,GAAP,OAAAH,EAAAtD,EAAA4D,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,OACjCN,EAAS,CACPO,KHV0B,iBGW1BI,QAAS,KAHsB,wBAAAU,EAAAT,SAAAQ,MAAN,gBAAAE,GAAA,OAAAH,EAAAJ,MAAAC,KAAAC,YAAA,IAOhBY,EAAsB,SAAEF,GAAF,sBAAAG,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAY,SAAAiC,EAAO/B,GAAP,OAAAH,EAAAtD,EAAA4D,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OAC7CN,EAAS,CACPO,KHdiC,wBGejCI,QAASgB,IAHkC,wBAAAK,EAAApB,SAAAmB,MAAZ,gBAAAR,GAAA,OAAAO,EAAAf,MAAAC,KAAAC,YAAA,qBC3BtBgB,EAAc,kBAAM,SAACjC,EAAUC,GAC1CD,EAAS,CAAEO,KJ2Be,iBI1B1BP,EAASkC,EAAgBjC,IAAWkC,OAAOrE,YAmBhCsE,EAAqB,WAChC,MAAO,CACL7B,KJCgC,yBIGvB2B,EAAkB,SAAApE,GAAO,sBAAA4B,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAI,SAAAC,EAAMC,GAAN,IAAAqC,EAAAC,EAAAnB,EAAAoB,EAAA,OAAA1C,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAEhCgC,EAAW,CACfG,OPnC2B,gBOoC3BC,IAAA,GAAAjE,OPnCwB,SOmCxB,KAAAA,OAA6BV,EAAQ4E,MACrCC,IAAO,cACPC,YAAe9E,EAAQyC,MAEnB+B,EAAY,CAAEO,cAAc,GARIzC,EAAAE,KAAA,EASVG,EAAW4B,EPxCb,SOwCuCC,GAT3B,OAAAnB,EAAAf,EAAAM,KAS9B6B,EAT8BpB,EAS9BoB,UAERvC,EAAS,CACPO,KJd2B,oBIe3BI,QAAS4B,IAGXvC,EAAS8C,EAAWhF,EAASyE,IAhBSnC,EAAAE,KAAA,wBAAAF,EAAAC,KAAA,GAAAD,EAAA2C,GAAA3C,EAAA,SAAAA,EAAA4C,OAAA,SAAA5C,EAAA2C,IAAA,yBAAA3C,EAAAQ,SAAAb,EAAA,kBAAJ,gBAAAe,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,IAuBzB6B,EAAa,SAAChF,EAASI,GAAV,sBAAA4D,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAwB,SAAAsB,EAAMpB,GAAN,IAAAiD,EAAAjE,EAAAjB,EAAA,OAAA8B,EAAAtD,EAAA4D,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAhB,KAAA,EAExC4C,EAAS,CACbC,QAAS,CACPP,IAAO,cACPQ,eAAgBrF,EAAQyC,MAE1B6C,iBAAkB,SAAAC,GAChBrD,EAAS,CACPO,KJhCyB,sBIiCzBI,QAAS2C,OAAOC,SAASF,EAAcG,OAAS1F,EAAQ2F,KAAO,IAAK,QAV5BpC,EAAAf,KAAA,EAevBoD,IAAMC,IAAIzF,EAAWJ,EAASmF,GAfP,OAexCjE,EAfwCqC,EAAAX,KAgBxC3C,EAAUiB,EAASiE,OAAO3F,IAAIsG,MAAM,KAAK,GAE/C5D,EAAS,CACPO,KJvCqB,cIwCrBI,QAAS5C,IAGXiC,EAAS6D,EAAkB/F,EAASC,IAvBUsD,EAAAf,KAAA,wBAAAe,EAAAhB,KAAA,GAAAgB,EAAA0B,GAAA1B,EAAA,SAAAA,EAAA2B,OAAA,SAAA3B,EAAA0B,IAAA,yBAAA1B,EAAAT,SAAAQ,EAAA,kBAAxB,gBAAAE,GAAA,OAAAQ,EAAAf,MAAAC,KAAAC,YAAA,IA6Bb4C,EAAoB,SAAC/F,EAASR,GAAV,OAAkB,SAAA0C,GACjD,IAAM8D,EAAW,CACfpB,KAAM5E,EAAQ4E,KACde,KAAM3F,EAAQ2F,KACdlD,KAAMzC,EAAQyC,MAEhBP,EAAS6B,EAAoB,CAAEa,KAAQ,OAAQqB,MAASD,KACxD9D,EAAS6B,EAAoB,CAAEa,KAAQ,MAAOqB,MAASzG,KAEvD0C,EAnFwB,eAAAgE,EAAArE,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAmE,EAAOjE,EAAUC,GAAjB,OAAAJ,EAAAtD,EAAA4D,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,UAC9BN,EAAS,CAAEO,KJuBc,iBIrBXN,IAAWO,cACnBrD,GAJwB,CAAA+G,EAAA5D,KAAA,eAAA4D,EAAA5D,KAAA,EAIbN,EAASkB,KAJI,OAAAgD,EAAA5D,KAAA,sBAAA4D,EAAA5D,KAAA,EAIwBN,EAASP,KAJjC,OAM9BO,EAASoC,KANqB,yBAAA8B,EAAAtD,SAAAqD,MAAN,gBAAAE,EAAAtD,GAAA,OAAAmD,EAAAjD,MAAAC,KAAAC,YAAA,MCuCXmD,EAhDA,SAAAC,GAAS,IAAAC,EASlBD,EAPFE,kBAFoB,IAAAD,EAEP,YAFOA,EAGpBE,EAMEH,EANFG,SACAC,EAKEJ,EALFI,SACAC,EAIEL,EAJFK,OACAC,EAGEN,EAHFM,QACAC,EAEEP,EAFFO,gBACAC,EACER,EADFQ,YAGEC,EAAc,GAElB,OAAQP,GACN,IAAK,UACHO,EAAc,UACd,MACF,IAAK,YACL,QACEA,EAAc,kBACd,MACF,IAAK,OACHA,EAAc,QAGlB,OAAIJ,EAEApI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAS,MAAA+B,OAAQsG,EAAR,WACTC,eAAcF,EACdG,gBAAeJ,EACfjI,GAAI+H,GACPD,GAAYnI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAA+B,OAAKiG,EAAL,WACT,SAAfF,EAAwBC,EAAW,IAMxClI,EAAAC,EAAAC,cAAA,UAAQC,UAAS,MAAA+B,OAAQsG,EAAR,WACTC,eAAcF,EACdG,gBAAeJ,EACfD,QAASA,GACdF,GAAYnI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,GAAA+B,OAAKiG,EAAL,WACT,SAAfF,EAAwBC,EAAW,KCpB3BS,EAtBQ,SAAAZ,GAAS,IACtBa,EAAuBb,EAAvBa,KAAM3E,EAAiB8D,EAAjB9D,KAAM4E,EAAWd,EAAXc,OAMpB,OAAIA,EACK,KAIP7I,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAYhE,EACZkE,SAAS,OACTI,YAAY,YACZD,gBAAgB,YAChBD,QAAS,kBAbM,SAACO,GACxBG,OAAOC,KAAP,GAAA9G,OTJ4B,4CSI5B,KAAAA,OAAmC0G,EAAK9H,SAAxC,KAAAoB,OAAoD0G,EAAK/H,GAAzD,UAYuBoI,CAAiBL,KAJxC,cCUWM,EAtBc,SAAAnB,GAAS,IAC7Ba,EAAsBb,EAAtBa,KAAM3E,EAAgB8D,EAAhB9D,KAAM4E,EAAUd,EAAVc,OAMnB,OAAIA,EACK,KAIP7I,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAYhE,EACZkE,SAAS,UACTI,YAAY,qBACZD,gBAAgB,YAChBD,QAAS,kBAbD,SAAAO,GAChBG,OAAOC,KAAP,GAAA9G,OVFyB,yCUEzB,KAAAA,OAAgC0G,EAAK9H,SAArC,KAAAoB,OAAiD0G,EAAK/H,GAAtD,UAYuBsI,CAAUP,KAJjC,uBCHWQ,EAXU,SAAArB,GAAS,IACxBvH,EAAuBuH,EAAvBvH,UAAW6I,EAAYtB,EAAZsB,QAEnB,OAAK7I,EAGHR,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAA+B,OAAQ1B,EAAY,SAAW,GAA/B,qBACZR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBkJ,IAJd,MCSnBC,8LAEF5E,KAAKqD,MAAMwB,qDAGA,IAAAC,EAAA9E,KACX,OAAOA,KAAKqD,MAAM0B,SAASC,IAAI,SAAAC,GAC7B,IAAMC,EAAQ,aAAA1H,OAAgByH,EAAQ9I,GAAxB,SAEd,OACEb,EAAAC,EAAAC,cAAA,MAAI2J,IAAKF,EAAQ9I,IACfb,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIuJ,GACPD,EAAQ5I,QAGbf,EAAAC,EAAAC,cAAA,UACGyJ,EAAQ7I,UAEXd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXwJ,EAAQ9I,IAEXb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXwJ,EAAQxI,cAEXnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAC4J,EAAD,CAAgBlB,KAAMe,EAAS1F,KAAK,SACpCjE,EAAAC,EAAAC,cAAC6J,EAAD,CAAsBnB,KAAMe,EAAS1F,KAAK,SAC1CjE,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,OACXE,SAAS,0BACTI,YAAY,iBACZD,gBAAgB,YAChBD,QAAS,kBAAMmB,EAAKzB,MAAMiC,cAAcL,EAAQ9I,MAJxD,wDAcV,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAC4I,EAAD,CAAQV,OAAO,gBACPH,WAAW,UACXE,SAAS,OACTI,YAAY,cACZD,gBAAgB,cAJxB,kBAWNtI,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mCACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,aAGJF,EAAAC,EAAAC,cAAA,aACGwE,KAAKuF,eAIVjK,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QZnFY,8BYKZc,IAAMC,WA2F1BC,EAAqB,CAAEd,cCpGA,iCAAA7B,EAAArE,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAmE,EAAOjE,GAAP,IAAAhB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cACjCN,EAAS,CAAEO,KVLgB,kBUIM2D,EAAA5D,KAAA,EAGVG,EbHO,SaAG,OAG3BzB,EAH2BkF,EAAAxD,KAKjCV,EAAS,CACPO,KVI0B,iBUH1BI,QAAS3B,EAAS4H,OAAO,SAAAX,GAAO,MAAyB,YAArBA,EAAQ7I,aAG9C4C,EAAS,CAAEO,KVbe,iBUGO,wBAAA2D,EAAAtD,SAAAqD,MAAN,gBAAAE,GAAA,OAAAH,EAAAjD,MAAAC,KAAAC,YAAA,IDoGeqF,cCvDf,SAACnJ,GAAD,sBAAA2E,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAQ,SAAAiC,EAAO/B,GAAP,OAAAH,EAAAtD,EAAA4D,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACnCN,EAAS,CAAEO,KVlDgB,kBUiDQyB,EAAA1B,KAAA,EAG7BG,EAAYtD,EbhDY,Sa6CK,OAKnC6C,EAAS,CACPO,KV1C0B,iBU2C1BI,QAAS,CAAExD,QAGb6C,EAAS,CAAEO,KV1De,iBUgDS,wBAAAyB,EAAApB,SAAAmB,MAAR,gBAAA8E,GAAA,OAAA/E,EAAAf,MAAAC,KAAAC,YAAA,KD0Dd6F,eAVS,SAACC,GACvB,MAAO,CACLhB,SAAUgB,EAAMhB,SAChBjJ,UAAWiK,EAAMC,SAASlK,YAOU6J,EAAzBG,CAA8ClB,GEnC9CqB,8MAtEbC,aAAe,SAACC,GACdrB,EAAKzB,MAAM+C,SAASD,MAGtBE,YAAc,WACZ,OAAOvB,EAAKzB,MAAM9D,MAChB,IAAK,OACL,QACE,OAAOuF,EAAKwB,kBACd,IAAK,SACH,OAAOxB,EAAKyB,eACd,IAAK,WACH,OAAOzB,EAAK0B,qBAIlBF,gBAAkB,WAChB,IAAMG,EAAY,GAAAjJ,OAAMsH,EAAKzB,MAAMqD,SAAW,YAAc,IAA1ClJ,OAA+CsH,EAAKzB,MAAMsD,SAAW,YAAc,GAAnF,SAElB,OACErL,EAAAC,EAAAC,cAAA,OAAKC,UAAWgL,GACdnL,EAAAC,EAAAC,cAAA,SAAOoL,QAAS9B,EAAKzB,MAAM3B,MAAOoD,EAAKzB,MAAMwD,OAC7CvL,EAAAC,EAAAC,cAAA,SAAOkG,KAAMoD,EAAKzB,MAAM3B,KACjBnC,KAAMuF,EAAKzB,MAAM9D,KACjBuH,YAAahC,EAAKzB,MAAMyD,YACxB/D,MAAO+B,EAAKzB,MAAMN,MAClBqD,SAAUtB,EAAKoB,mBAK5BK,aAAe,WACb,IAAME,EAAY,GAAAjJ,OAAMsH,EAAKzB,MAAMqD,SAAW,YAAc,IAA1ClJ,OAA+CsH,EAAKzB,MAAMsD,SAAW,YAAc,GAAnF,SAElB,OACErL,EAAAC,EAAAC,cAAA,OAAKC,UAAWgL,GAChBnL,EAAAC,EAAAC,cAAA,SAAOoL,QAAS9B,EAAKzB,MAAM3B,MAAOoD,EAAKzB,MAAMwD,OAC3CvL,EAAAC,EAAAC,cAAA,UAAQkG,KAAMoD,EAAKzB,MAAM3B,KACjBoF,YAAahC,EAAKzB,MAAMyD,YACxB/D,MAAO+B,EAAKzB,MAAMN,MAClBqD,SAAUtB,EAAKoB,cACpBpB,EAAKzB,MAAMG,cAMpBgD,eAAiB,WACf,IAAMC,EAAY,GAAAjJ,OAAMsH,EAAKzB,MAAMqD,SAAW,YAAc,IAA1ClJ,OAA+CsH,EAAKzB,MAAMsD,SAAW,YAAc,GAAnF,SAElB,OACErL,EAAAC,EAAAC,cAAA,OAAKC,UAAWgL,GACdnL,EAAAC,EAAAC,cAAA,SAAOoL,QAAS9B,EAAKzB,MAAM3B,MAAOoD,EAAKzB,MAAMwD,OAC7CvL,EAAAC,EAAAC,cAAA,YAAUkG,KAAMoD,EAAKzB,MAAM3B,KACjBoF,YAAahC,EAAKzB,MAAMyD,YACxB/D,MAAO+B,EAAKzB,MAAMN,MAClBqD,SAAUtB,EAAKoB,yFAM7B,OAAIlG,KAAKqD,MAAMc,OACN,KAGFnE,KAAKqG,qBAnEIZ,IAAMC,WCMpBqB,8MACJC,aAAe,SAACb,GACdA,EAAMc,iBACNnC,EAAKzB,MAAM2D,kBAGbE,aAAe,SAACf,GACdA,EAAMc,iBACNnC,EAAKzB,MAAM6D,kBAGbhB,aAAe,SAACC,GAAU,IAAAgB,EACAhB,EAAMiB,OAAtB1F,EADgByF,EAChBzF,KAAMqB,EADUoE,EACVpE,MACd+B,EAAKzB,MAAMgE,aAAa,CAAE3F,OAAMqB,mFAIhC,IAAMkC,EAAUjF,KAAKqD,MAAM4B,QACrBqC,EAAQtH,KAAKqD,MAAMiE,MAEzB,OACEhM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,iEAEAF,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,KACLmF,MAAM,KACNC,YAAY,KACZ/D,MAAOkC,EAAQ9I,GACfgI,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,SACLmC,KAAK,WACLmF,MAAM,YACNC,YAAY,YACZ/D,MAAOkC,EAAQ7I,SACfgK,SAAUpG,KAAKkG,cACpB5K,EAAAC,EAAAC,cAAA,UAAQuH,MAAM,IAAd,uBACAzH,EAAAC,EAAAC,cAAA,UAAQuH,MAAM,WAAd,YAIFzH,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,QACLmF,MAAM,QACNC,YAAY,QACZ/D,MAAOkC,EAAQ5I,MACfqK,UAAU,EACVN,SAAUpG,KAAKkG,eAEtB5K,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,WACLmF,MAAM,WACNC,YAAY,WACZ/D,MAAOkC,EAAQtI,SACf+J,UAAU,EACVN,SAAUpG,KAAKkG,eAEtB5K,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,WACLmC,KAAK,WACLmF,MAAM,YACNC,YAAY,YACZ/D,MAAOkC,EAAQrI,SACf8J,UAAU,EACVN,SAAUpG,KAAKkG,eAEtB5K,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,cACLmF,MAAM,eACNC,YAAY,eACZ/D,MAAOkC,EAAQzI,YACf2H,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,eACLmF,MAAM,gBACNC,YAAY,gBACZ/D,MAAOkC,EAAQxI,aACf0H,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,YACXE,SAAS,QACTI,YAAY,SACZD,gBAAgB,aAChBD,QAAS3D,KAAKgH,cAJtB,UAKA1L,EAAAC,EAAAC,cAAC4J,EAAD,CAAgBlB,KAAMe,EACNd,OAAQmD,IACxBhM,EAAAC,EAAAC,cAAC6J,EAAD,CAAsBnB,KAAMe,EACNd,OAAQmD,IAC9BhM,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,UACXE,SAAS,OACTI,YAAY,eACZD,gBAAgB,aAChBD,QAAS3D,KAAKkH,cAJtB,iBAhGgBzB,IAAMC,WAiHjBI,eANS,SAACC,GACvB,MAAO,CACLd,QAASc,EAAM0B,kBAIJ3B,CAA0BiB,ICpHnCW,kMAEF1H,KAAKqD,MAAMsE,gDAIX,OAAO3H,KAAKqD,MAAMtH,SACdT,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAUjM,GAAIqE,KAAKqD,MAAMwE,OACzB,YARiBpC,IAAMC,WAkBzBC,GAAqB,CAAEgC,aZHD,WAC1B,MAAO,CACLpI,KDlByB,mBaqBduG,eARS,SAACC,GACvB,MAAO,CACLhK,SAAUgK,EAAMC,SAASjK,WAMW4J,GAAzBG,CAA8C4B,ICfvDI,+LAEF9H,KAAKqD,MAAM0E,4DAIX/H,KAAKqD,MAAM5C,mDAIX,OACEnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwM,GAAD,CAAYH,KAAK,MACjBvM,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACyM,GAAD,CAAahD,QAASjF,KAAKqD,MAAM4B,QACpBqC,OAAO,EACPD,aAAcrH,KAAKqD,MAAM3C,sBACzBwG,aAAclH,KAAKqD,MAAM6E,cACzBlB,aAAchH,KAAKqD,MAAM7C,gBACtClF,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QjBpBU,4BiBARc,IAAMC,WAkC5BC,GAAqB,CAAEoC,WZ1BH,kBAAM,SAAC/I,EAAUC,GAGzCD,EAAS,CACPO,KFKuB,cEJvBI,QAJcV,IAAWwI,oBYyBYS,cJ1BZ,iCAAAxJ,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAC,EAAOC,EAAUC,GAAjB,IAAAgG,EAAAjH,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjCN,EAAS,CAAEO,KVlBgB,kBUoBrB0F,EAAUhG,IAAWwI,gBAHMrI,EAAAE,KAAA,EAIVG,EAAWwF,EbjBJ,SaaG,OAI3BjH,EAJ2BoB,EAAAM,KAMjCV,EAAS,CACPO,KVZ0B,iBUa1BI,QAAS3B,IAGXgB,EAAS,CAAEO,KV3Be,iBU4B1BP,EAAS,CAAEO,KV3BiB,mBUeK,wBAAAH,EAAAQ,SAAAb,MAAN,gBAAAc,EAAAC,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,II0B2BQ,kBAAiBC,wBAAuBF,iBAEjFsF,eAVS,SAACC,GACvB,MAAO,CACLd,QAASc,EAAM0B,gBACf3L,UAAWiK,EAAMC,SAASlK,UAC1BC,SAAUgK,EAAMC,SAASjK,WAMW4J,GAAzBG,CAA8CgC,IClCvDK,+LAEFnI,KAAKqD,MAAM+E,aAAapI,KAAKqD,MAAMgF,MAAM/K,OAAOnB,mDAIhD6D,KAAKqD,MAAM5C,mDAIX,OACEnF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwM,GAAD,CAAYH,KAAK,MACjBvM,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACyM,GAAD,CAAahD,QAASjF,KAAKqD,MAAM4B,QACpBoC,aAAcrH,KAAKqD,MAAM3C,sBACzBwG,aAAclH,KAAKqD,MAAMiF,cACzBtB,aAAchH,KAAKqD,MAAM7C,gBACtClF,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QlBrBU,4BkBEVc,IAAMC,WAiC1BC,GAAqB,CAAEyC,abxCD,SAACjM,GAAD,sBAAA6G,EAAArE,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAQ,SAAAmE,EAAOjE,GAAP,IAAAhB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAClCN,EAAS,CAAEO,KFLgB,kBEIO2D,EAAA5D,KAAA,EAGXhB,EAAKnC,ELHE,SKAI,OAG5B6B,EAH4BkF,EAAAxD,KAKlCV,EAAS,CACPO,KFeyB,gBEdzBI,QAAS3B,IAGXgB,EAAS,CAAEO,KFbe,iBEGQ,wBAAA2D,EAAAtD,SAAAqD,MAAR,gBAAAE,GAAA,OAAAH,EAAAjD,MAAAC,KAAAC,YAAA,IawCeqI,cLZd,iCAAAnI,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAsB,EAAOpB,EAAUC,GAAjB,IAAAgG,EAAAjH,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cACjCN,EAAS,CAAEO,KVjCgB,kBUmCrB0F,EAAUhG,IAAWwI,gBAHMpH,EAAAf,KAAA,EAIVG,EAAWwF,EbhCJ,Sa4BG,OAI3BjH,EAJ2BqC,EAAAX,KAMjCV,EAAS,CACPO,KVxB0B,iBUyB1BI,QAAS3B,IAGXgB,EAAS,CAAEO,KV1Ce,iBU2C1BP,EAAS,CAAEO,KV1CiB,mBU8BK,wBAAAc,EAAAT,SAAAQ,MAAN,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,IKY6BQ,kBAAiBC,wBAAuBF,iBAEnFsF,eAVS,SAACC,GACvB,MAAO,CACLd,QAASc,EAAM0B,gBACf3L,UAAWiK,EAAMC,SAASlK,UAC1BC,SAAUgK,EAAMC,SAASjK,WAMW4J,GAAzBG,CAA8CqC,ICpCvDI,+LAEFvI,KAAKqD,MAAMmF,mDAGA,IAAA1D,EAAA9E,KACX,OAAOA,KAAKqD,MAAMoF,OAAOzD,IAAI,SAAA9F,GAC3B,IAAMgG,EAAQ,IAAA1H,OnBfU,SmBeV,KAAAA,OAAyB0B,EAAM/C,GAA/B,SAEd,OACEb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACV0J,IAAKjG,EAAM/C,IACdb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACViN,IAAKxJ,EAAM5C,IACXqM,IAAI,yBACTrN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAIuJ,EAAUzJ,UAAU,UAC3ByD,EAAM7C,OAETf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAiC0D,EAAMzC,aAAanB,EAAAC,EAAAC,cAAA,WACvDF,EAAAC,EAAAC,cAAA,8BAA8B0D,EAAM3C,KAAKkG,KAAO,MAAMmG,QAAQ,GAD9D,MACoEtN,EAAAC,EAAAC,cAAA,WACpEF,EAAAC,EAAAC,cAAA,6BAA6B0D,EAAM3C,KAAKgD,QAG5CjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAC4J,EAAD,CAAgBlB,KAAMhF,EAAOK,KAAK,SAClCjE,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,OACXE,SAAS,0BACTI,YAAY,eACZD,gBAAgB,aAChBD,QAAS,kBAAMmB,EAAKzB,MAAMwF,YAAY3J,EAAM/C,MAJpD,qDAcR,OACEb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAC4I,EAAD,CAAQV,OAAO,cACPH,WAAW,UACXE,SAAS,QAFjB,gBASNnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACZuE,KAAKuF,cAGRjK,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QnBjEY,8BmBEdc,IAAMC,WA4ExBC,GAAqB,CAAE6C,YjBlFF,iCAAAxF,EAAArE,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAmE,EAAOjE,GAAP,IAAAhB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAC/BN,EAAS,CAAEO,KCLgB,kBDII2D,EAAA5D,KAAA,EAGRG,EFLK,UEEG,OAGzBzB,EAHyBkF,EAAAxD,KAK/BV,EAAS,CACPO,KCFwB,eDGxBI,QAAS3B,EAAS4H,OAAO,SAAA1B,GAAI,MAAsB,UAAlBA,EAAK9H,aAGxC4C,EAAS,CAAEO,KCbe,iBDGK,wBAAA2D,EAAAtD,SAAAqD,MAAN,gBAAAE,GAAA,OAAAH,EAAAjD,MAAAC,KAAAC,YAAA,IiBkFe4I,YjBvCf,SAAC1M,GAAD,sBAAA2E,EAAAnC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAQ,SAAAiC,EAAO/B,GAAP,OAAAH,EAAAtD,EAAA4D,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACjCN,EAAS,CAAEO,KChDgB,kBD+CMyB,EAAA1B,KAAA,EAG3BG,EAAYtD,EFhDU,UE6CK,OAKjC6C,EAAS,CACPO,KC9CwB,eD+CxBI,QAAS,CAAExD,GAAIA,KAGjB6C,EAAS,CAAEO,KCxDe,iBD8CO,wBAAAyB,EAAApB,SAAAmB,MAAR,gBAAA8E,GAAA,OAAA/E,EAAAf,MAAAC,KAAAC,YAAA,KiByCZ6F,eATS,SAACC,GACvB,MAAO,CACL0C,OAAQ1C,EAAM0C,OACd3M,UAAWiK,EAAMC,SAASlK,YAMU6J,GAAzBG,CAA8CyC,ICnD9CO,kMAlCX9I,KAAKqD,MAAM0F,6CAGJ,IAAAjE,EAAA9E,KACP,GAAIA,KAAKqD,MAAMc,OACb,OAAO,KAGT,IAAMsC,EAAY,GAAAjJ,OAAMwC,KAAKqD,MAAMqD,SAAW,YAAc,IAA1ClJ,OAA+CwC,KAAKqD,MAAMsD,SAAW,YAAc,GAAnF,SAElB,OACErL,EAAAC,EAAAC,cAAA,OAAKC,UAAWgL,GACdnL,EAAAC,EAAAC,cAAA,SAAOoL,QAAQ,QAAf,QACAtL,EAAAC,EAAAC,cAAA,SAAOkG,KAAK,OACLnC,KAAK,OACL6G,SAAU,SAAC4C,GAAD,OAAOlE,EAAKzB,MAAM+C,SAAS4C,EAAE5B,OAAO6B,MAAM,OAE1DjJ,KAAKqD,MAAMrG,aAAe1B,EAAAC,EAAAC,cAAA,uBAAewE,KAAKqD,MAAMpG,SAA1B,KAE1B+C,KAAKqD,MAAM6F,QACV5N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACViN,IAAK1I,KAAKqD,MAAMnE,MAAM5C,IACtBqM,IAAI,yBAERrN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEf,WA9BYgK,IAAMC,WCOzByD,8MACJnC,aAAe,SAACb,GACdA,EAAMc,iBACNnC,EAAKzB,MAAM2D,kBAGbE,aAAe,SAACf,GACdA,EAAMc,iBACNnC,EAAKzB,MAAM6D,kBAGbhB,aAAe,SAACC,GAAU,IAAAgB,EACAhB,EAAMiB,OAAtB1F,EADgByF,EAChBzF,KAAMqB,EADUoE,EACVpE,MACd+B,EAAKzB,MAAMgE,aAAa,CAAE3F,OAAMqB,mFAIhC,IAAM7D,EAAQc,KAAKqD,MAAMnE,MACnBoI,EAAQtH,KAAKqD,MAAMiE,MAEzB,OACEhM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,iEAEAF,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,KACLmF,MAAM,KACNC,YAAY,KACZ/D,MAAO7D,EAAM/C,GACbgI,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,SACLmC,KAAK,WACLmF,MAAM,YACNC,YAAY,YACZ/D,MAAO7D,EAAM9C,SACbgK,SAAUpG,KAAKkG,cACpB5K,EAAAC,EAAAC,cAAA,UAAQuH,MAAM,IAAd,uBACAzH,EAAAC,EAAAC,cAAA,UAAQuH,MAAM,SAAd,UAGFzH,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,QACLmF,MAAM,QACNC,YAAY,QACZ/D,MAAO7D,EAAM7C,MACbqK,UAAU,EACVN,SAAUpG,KAAKkG,eAEtB5K,EAAAC,EAAAC,cAAC4N,GAAD,CAAYlK,MAAOA,EACPgK,SAAU5B,EACVvE,MAAO/C,KAAKqD,MAAMlC,OAAOrE,QACzB4J,UAAU,EACVzJ,SAAU+C,KAAKqD,MAAMlC,OAAOlE,SAC5BD,YAAagD,KAAKqD,MAAMlC,OAAOnE,YAC/BoJ,SAAUpG,KAAKqD,MAAMgG,iBACrBN,UAAW/I,KAAKqD,MAAMjC,qBAElC9F,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,cACLmF,MAAM,eACNC,YAAY,eACZ/D,MAAO7D,EAAM1C,YACb2H,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAC+L,GAAD,CAAOhI,KAAK,OACLmC,KAAK,eACLmF,MAAM,gBACNC,YAAY,gBACZ/D,MAAO7D,EAAMzC,aACb0H,OAAQmD,EACRX,UAAU,EACVa,UAAU,IAEjBlM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,YACXE,SAAS,QACTI,YAAY,SACZD,gBAAgB,aAChBD,QAAS3D,KAAKgH,cAJtB,UAKA1L,EAAAC,EAAAC,cAAC4J,EAAD,CAAgBlB,KAAMhF,EACZiF,OAAQmD,IAClBhM,EAAAC,EAAAC,cAAC4I,EAAD,CAAQb,WAAW,UACXE,SAAS,OACTI,YAAY,aACZD,gBAAgB,aAChBD,QAAS3D,KAAKkH,cAJtB,iBAtFczB,IAAMC,WAwGxBC,GAAqB,CAAE0D,iBd5FG,SAAAvM,GAAO,OAAI,SAAAkC,GACzCA,EAAS,CACPO,KJU8B,qBIT9BI,QAAS7C,McyFkCsE,sBAEhC0E,eATS,SAACC,GACvB,MAAO,CACL7G,MAAO6G,EAAMvG,cACb2B,OAAQ4E,EAAM5E,SAMsBwE,GAAzBG,CAA8CqD,ICzGvDG,+LAEFtJ,KAAKqD,MAAMkG,0DAIXvJ,KAAKqD,MAAMzC,iDAIX,OACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwM,GAAD,CAAYH,KAAK,YACjBvM,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACgO,GAAD,CAAWtK,MAAOc,KAAKqD,MAAMnE,MAClBoI,OAAO,EACPD,aAAcrH,KAAKqD,MAAMxC,oBACzBqG,aAAclH,KAAKqD,MAAMpC,YACzB+F,aAAchH,KAAKqD,MAAM7C,gBACnClF,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QtBpBS,4BsBAVc,IAAMC,WAkC1BC,GAAqB,CAAE4D,ShB1BL,iCAAA7K,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAM,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAA,OAAAL,EAAAtD,EAAA4D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACtBJ,EAAQD,IAAWO,cAEzBR,EAAS,CACPO,KHDqB,YGErBI,QAAST,IALiB,wBAAAE,EAAAQ,SAAAb,MAAN,gBAAAc,EAAAC,GAAA,OAAApB,EAAAqB,MAAAC,KAAAC,YAAA,IgB0BexB,cAAamC,gBAAeC,sBAAqBL,gBAAeS,eAExF6E,eAVS,SAACC,GACvB,MAAO,CACL7G,MAAO6G,EAAMvG,cACb1D,UAAWiK,EAAMC,SAASlK,UAC1BC,SAAUgK,EAAMC,SAASjK,WAMW4J,GAAzBG,CAA8CwD,ICpCvDG,+LAEFzJ,KAAKqD,MAAMqG,WAAW1J,KAAKqD,MAAMgF,MAAM/K,OAAOnB,mDAI9C6D,KAAKqD,MAAMzC,iDAIX,OACEtF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwM,GAAD,CAAYH,KAAK,YACjBvM,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAACgO,GAAD,CAAWtK,MAAOc,KAAKqD,MAAMnE,MAClBmI,aAAcrH,KAAKqD,MAAMxC,oBACzBqG,aAAclH,KAAKqD,MAAMpC,YACzB+F,aAAchH,KAAKqD,MAAM7C,gBACpClF,EAAAC,EAAAC,cAACgK,EAAD,CAAkB1J,UAAWkE,KAAKqD,MAAMvH,UACtB6I,QvBnBU,4BuBAZc,IAAMC,WAiCxBC,GAAqB,CAAE+D,WjBtCH,SAACvN,GAAD,sBAAA6G,EAAArE,OAAAC,EAAA,EAAAD,CAAAE,EAAAtD,EAAAuD,KAAQ,SAAAmE,EAAOjE,GAAP,IAAAhB,EAAA,OAAAa,EAAAtD,EAAA4D,KAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAChCN,EAAS,CAAEO,KHLgB,kBGIK2D,EAAA5D,KAAA,EAGThB,EAAKnC,ENLA,UMEI,OAG1B6B,EAH0BkF,EAAAxD,KAKhCV,EAAS,CACPO,KHSuB,cGRvBI,QAAS3B,IAGXgB,EAAS,CAAEO,KHbe,iBGGM,wBAAA2D,EAAAtD,SAAAqD,MAAR,gBAAAE,GAAA,OAAAH,EAAAjD,MAAAC,KAAAC,YAAA,IiBsCeC,cAAaU,gBAAeC,sBAAqBL,gBAAgBS,eAE3F6E,eAVS,SAACC,GACvB,MAAO,CACL7G,MAAO6G,EAAMvG,cACb1D,UAAWiK,EAAMC,SAASlK,UAC1BC,SAAUgK,EAAMC,SAASjK,WAMW4J,GAAzBG,CAA8C2D,IChB9CE,GAlBH,WAGV,OACErO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAemO,MAHT,CAAEC,OAAQ,gBAI7BvO,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYoO,SAAS,KACnBxO,EAAAC,EAAAC,cAACuO,EAAD,MACAzO,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,IAAImC,OAAK,EAACC,UAAWrF,KACjCtJ,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,qBAAqBmC,OAAK,EAACC,UAAW9B,KAClD7M,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,gBAAgBmC,OAAK,EAACC,UAAWnC,KAC7CxM,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,UAAUmC,OAAK,EAACC,UAAW1B,KACvCjN,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,mBAAmBmC,OAAK,EAACC,UAAWR,KAChDnO,EAAAC,EAAAC,cAACoM,EAAA,EAAD,CAAOC,KAAK,cAAcmC,OAAK,EAACC,UAAWX,mCCfpCY,6BAAgB,CAC7BzB,OCNa,WAA0C,IAAzC1C,EAAyC9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAAjCjE,EAAsBqO,EAAWpK,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,EACvD,OAAQC,EAAO9K,MACb,IvBIwB,euBCtB,OAAO8K,EAAO1K,QAAQ2K,KAAK,SAAC/O,EAAEgP,GAAH,OAHN,SAAChP,EAAGgP,GAAJ,OAAWhP,EAAEc,MAAMmO,cAAgBD,EAAElO,MAAMmO,cAC5D,EAAMD,EAAElO,MAAMmO,cAAgBjP,EAAEc,MAAMmO,eAAkB,EAAI,EAE5BC,CAAalP,EAAEgP,KACrD,IvBJwB,euBKtB,SAAA/M,OAAAmB,OAAA+L,GAAA,EAAA/L,CAAWoH,GAAX,CAAmBsE,EAAO1K,UAC5B,IvBHwB,euBItB,OAAOoG,EAAMf,IAAI,SAAAzJ,GAAC,OAAIA,EAAEY,KAAOkO,EAAO1K,QAAQxD,GAAKkO,EAAO1K,QAAUpE,IACtE,IvBPwB,euBQtB,OAAOwK,EAAMH,OAAO,SAAArK,GAAC,OAAIA,EAAEY,KAAOkO,EAAO1K,QAAQxD,KACnD,QACE,OAAO4J,IDRXhB,SEPa,WAA4C,IAA3CgB,EAA2C9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAAnChE,EAAwBoO,EAAWpK,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,EACzD,OAAQC,EAAO9K,MACb,IxBU0B,iBwBLxB,OAAO8K,EAAO1K,QAAQ2K,KAAK,SAAC/O,EAAEgP,GAAH,OAHN,SAAChP,EAAGgP,GAAJ,OAAWhP,EAAEc,MAAMmO,cAAgBD,EAAElO,MAAMmO,cAC5D,EAAMD,EAAElO,MAAMmO,cAAgBjP,EAAEc,MAAMmO,eAAkB,EAAI,EAE5BC,CAAalP,EAAEgP,KACrD,IxBE0B,iBwBDxB,SAAA/M,OAAAmB,OAAA+L,GAAA,EAAA/L,CAAWoH,GAAX,CAAmBsE,EAAO1K,UAC5B,IxBG0B,iBwBFxB,OAAOoG,EAAMf,IAAI,SAAA2F,GAAC,OAAIA,EAAExO,KAAOkO,EAAO1K,QAAQxD,GAAKkO,EAAO1K,QAAUgL,IACtE,IxBD0B,iBwBExB,OAAO5E,EAAMH,OAAO,SAAA+E,GAAC,OAAIA,EAAExO,KAAOkO,EAAO1K,QAAQxD,KACnD,QACE,OAAO4J,IFPXC,SGRa,WAA4C,IAA3CD,EAA2C9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAAnCpE,EACtB,QADyDoE,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,GAC1C7K,MACb,IzBJyB,gByBKvB,OAAOZ,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBjK,WAAW,IAChC,IzBLwB,eyBMtB,OAAO6C,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBjK,WAAW,IAC9B,IzBNwB,iByBOtB,OAAO6C,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBhK,UAAU,IAC/B,IzBPuB,gByBQrB,OAAO4C,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBhK,UAAU,IACjC,QACE,OAAOgK,IHFXvG,cITa,WAAkD,IAAjDuG,EAAiD9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAAzC/D,EAA8BmO,EAAWpK,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,EAC/D,OAAQC,EAAO9K,MACb,I1BeuB,c0BbvB,I1BcqB,Y0BbjB,OAAO8K,EAAO1K,QAClB,I1BU0B,iB0BTxB,OAAOzD,EACT,I1BWiC,wB0BV/B,OAAOyC,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZpH,OAAAkM,GAAA,EAAAlM,CAAA,GAAoB0L,EAAO1K,QAAQ+B,KAAO2I,EAAO1K,QAAQoD,QAC3D,QACE,OAAOgD,IJDX0B,gBKVa,WAAoD,IAAnD1B,EAAmD9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAA3CvD,EAAgC2N,EAAWpK,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,EACjE,OAAQC,EAAO9K,MACb,I3BqByB,gB2BnBzB,I3BoBuB,c2BnBrB,OAAO8K,EAAO1K,QAChB,I3BgB4B,mB2Bf1B,OAAOjD,EACT,I3BiBmC,0B2BhBjC,OAAOiC,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZpH,OAAAkM,GAAA,EAAAlM,CAAA,GAAoB0L,EAAO1K,QAAQ+B,KAAO2I,EAAO1K,QAAQoD,QAC3D,QACE,OAAOgD,ILAX5E,OMHa,WAA0C,IAAzC4E,EAAyC9F,UAAAkK,OAAA,QAAAC,IAAAnK,UAAA,GAAAA,UAAA,GAAjCpD,EAAsBwN,EAAWpK,UAAAkK,OAAA,EAAAlK,UAAA,QAAAmK,EACvD,OAAQC,EAAO9K,MACb,I5BoB8B,qB4BnB5B,OAAOZ,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBjJ,QAASuN,EAAO1K,UACrC,I5BgBgC,uB4Bf9B,OAAO9C,EACT,I5Be6B,oB4Bd3B,OAAO8B,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmB7I,UAAWmN,EAAO1K,UACvC,I5BgBwB,e4BftB,OAAOhB,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmB/I,aAAa,IAClC,I5BeuB,c4BdrB,OAAO2B,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmB/I,aAAa,IAClC,I5BcuB,c4BbrB,OAAO2B,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmBhJ,QAASsN,EAAO1K,UACrC,I5BS+B,sB4BR7B,OAAOhB,OAAAiM,GAAA,EAAAjM,CAAA,GAAKoH,EAAZ,CAAmB9I,SAAUoN,EAAO1K,UACtC,QACE,OAAOoG,MChBP+E,GAAQC,sBAAYC,GAAUC,8BAClCC,0BAAgBC,OAKlBC,IAASC,OACP/P,EAAAC,EAAAC,cAAC8P,EAAA,EAAD,CAAUR,MAAOA,IACfxP,EAAAC,EAAAC,cAAC+P,GAAD,OAEFC,SAASC,cAAc","file":"static/js/main.c141b364.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'nodes';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n\n// Initial Reducer States\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n};\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to axios since it's used for progress on uploads\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchAssets = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSETS,\n    payload: response.filter(node => node.dataType === 'asset')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const asset = getState().selectedAsset;\n  const response = await api.create(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: CREATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const asset = getState().selectedAsset;\n  const response = await api.update(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: UPDATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: DELETE_ASSET,\n    payload: { id: id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\n","import { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from './types';\n\nexport const startLoading = () => {\n  return {\n    type: START_LOADING\n  };\n};\n\nexport const stopLoading = () => {\n  return {\n    type: STOP_LOADING\n  };\n};\n\nexport const startRedirect = () => {\n  return {\n    type: START_REDIRECT\n  };\n};\n\nexport const stopRedirect = () => {\n  return {\n    type: STOP_REDIRECT\n  };\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => (dispatch) => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = ( prop ) => (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: prop\n  });\n}\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n\n  dispatch({\n    type: NEW_ASSET,\n    payload: asset\n  });\n};\n\nexport const deselectAsset = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: prop\n  });\n}\n","import * as api from '../components/api/Api';\nimport axios from 'axios';\n\nimport { createAsset, updateAsset, updateSelectedAsset, startRedirect } from './'\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from './types';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config';\n\nexport const startUpload = () => (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  dispatch(getPresignedUrl(getState().upload.fileObj));\n};\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  dispatch({ type: STOP_UPLOAD });\n\n  const asset = getState().selectedAsset;\n  asset.id ? await dispatch(updateAsset(asset)) : await dispatch(createAsset(asset));\n\n  dispatch(deselectUploadFile());\n};\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return {\n    type: DESELECT_UPLOAD_FILE\n  };\n};\n\nexport const getPresignedUrl = fileObj => async dispatch => {\n  try {\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL } = await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: uploadURL\n    });\n\n    dispatch(uploadFile(fileObj, uploadURL));\n\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadFile = (fileObj, uploadUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, config);\n    const fileUrl = response.config.url.split('?')[0];\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n\n    dispatch(updateAssetUpload(fileObj, fileUrl));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAssetUpload = (fileObj, url) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n  dispatch(stopUpload());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType = 'secondary',  // primary | secondary | icon\n    children,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n  if (linkTo) {\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = props => {\n  const { node, type, hidden } = props;\n  \n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top right\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = props => {\n  const {node, type, hidden} = props;\n\n  const onPreview = node => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top right\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={`ui ${isLoading ? 'active' : ''} inverted dimmer`}>\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContents, deleteContent } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\nimport LoadingIndicator from '../LoadingIndicator';\n\n// need to update API to use 'contents'\n// import { CONTENT_RESOURCE } from '../../config';\nimport { RECEIVING_DATA_MESSAGE } from '../../config';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  renderList() {\n    return this.props.contents.map(content => {\n      const linkPath = `/contents/${content.id}/edit`;\n\n      return(\n        <tr key={content.id}>\n          <td>\n            <Link to={linkPath}>\n              {content.title}\n            </Link>\n          </td>\n          <td>\n            {content.dataType}\n          </td>\n          <td className=\"collapsing\">\n            {content.id}\n          </td>\n          <td className=\"collapsing\">\n            {content.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <ShowJsonButton node={content} type=\"icon\"/>\n              <BrowserPreviewButton node={content} type=\"icon\"/>\n              <Button buttonType=\"icon\"\n                      iconType=\"trash alternate outline\"\n                      tooltipText=\"Delete Content\"\n                      tooltipPosition=\"top right\"\n                      onClick={() => this.props.deleteContent(content.id)}>Delete Content\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n              <h1>Content List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/contents/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\"\n                      tooltipText=\"New Content\"\n                      tooltipPosition=\"top center\">\n                New Content\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <table className=\"ui celled striped compact table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Data Type</th>\n              <th>ID</th>\n              <th>Date Modified</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderList()}\n          </tbody>\n        </table>\n\n        <LoadingIndicator isLoading={this.props.isLoading}\n                          message={RECEIVING_DATA_MESSAGE}/>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchContents, deleteContent };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentList);\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchContents = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENTS,\n    payload: response.filter(content => content.dataType === 'content')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const content = getState().selectedContent;\n  const response = await api.create(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: CREATE_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const content = getState().selectedContent;\n  const response = await api.update(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: UPDATE_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: DELETE_CONTENT,\n    payload: { id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","import React from 'react';\n\nclass Field extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  renderInput = () => {\n    switch(this.props.type) {\n      case 'text':\n      default:\n        return this.renderTextInput();\n      case 'select':\n        return this.renderSelect();\n      case 'textarea':\n        return this.renderTextArea();\n    }\n  }\n\n  renderTextInput = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <input name={this.props.name}\n               type={this.props.type}\n               placeholder={this.props.placeholder}\n               value={this.props.value}\n               onChange={this.handleChange} />\n      </div>\n    );\n  }\n\n  renderSelect = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n        <select name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value}\n                onChange={this.handleChange}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n\n  renderTextArea = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <textarea name={this.props.name}\n                  placeholder={this.props.placeholder}\n                  value={this.props.value}\n                  onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return this.renderInput();\n  }\n}\n\nexport default Field;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const content = this.props.content;\n    const isNew = this.props.isNew;\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={content.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={content.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"content\">Content</option>\n        </Field>\n\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={content.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"subTitle\"\n               label=\"Subtitle\"\n               placeholder=\"subtitle\"\n               value={content.subTitle}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"textarea\"\n               name=\"copyText\"\n               label=\"Copy Text\"\n               placeholder=\"copy text\"\n               value={content.copyText}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={content.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={content.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={content}\n                          hidden={isNew}></ShowJsonButton>\n          <BrowserPreviewButton node={content}\n                                hidden={isNew}></BrowserPreviewButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Content\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent\n  };\n}\n\nexport default connect(mapStateToProps) (ContentForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n  \n  render() {\n    return this.props.redirect\n      ? <Redirect to={this.props.path} />\n      : null;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { newContent, createContent, deselectContent, updateSelectedContent, startRedirect } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return (\n      <div>\n        <Redirector path=\"/\" />\n        <h1>New Content</h1>\n        <ContentForm content={this.props.content}\n                     isNew={true}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.props.createContent}\n                     onFormCancel={this.props.startRedirect}/>\n        <LoadingIndicator isLoading={this.props.isLoading}\n                          message={SENDING_DATA_MESSAGE}/>\n       </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { newContent, createContent, deselectContent, updateSelectedContent, startRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchContent, updateContent, deselectContent, updateSelectedContent, startRedirect } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\n// research containers for wrapping forms, etc.\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return (\n      <div>\n        <Redirector path=\"/\" />\n        <h1>Edit Content</h1>\n        <ContentForm content={this.props.content}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.props.updateContent}\n                     onFormCancel={this.props.startRedirect}/>\n        <LoadingIndicator isLoading={this.props.isLoading}\n                          message={SENDING_DATA_MESSAGE}/>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { fetchContent, updateContent, deselectContent, updateSelectedContent, startRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAssets, deleteAsset } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport LoadingIndicator from '../LoadingIndicator';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  renderList() {\n    return this.props.assets.map(asset => {\n      const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n      return (\n        <div className=\"item\"\n             key={asset.id}>\n          <img className=\"ui small image\"\n               src={asset.url}\n               alt=\"alt text placeholder\"></img>\n          <div className=\"content\">\n            <Link to={linkPath} className=\"header\">\n              {asset.title}\n            </Link>\n            <div className=\"description\">\n              <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n              <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n              <strong>File Type: </strong>{asset.file.type}</p>\n            </div>\n          </div>\n          <div className=\"ui icon buttons right floated content\">\n            <ShowJsonButton node={asset} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Asset\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => this.props.deleteAsset(asset.id)}>\n              Delete Asset\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n            <h1>Asset List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/assets/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\">\n                New Asset\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"ui divided relaxed list\">\n          {this.renderList()}\n        </div>\n\n        <LoadingIndicator isLoading={this.props.isLoading}\n                          message={RECEIVING_DATA_MESSAGE}/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchAssets, deleteAsset }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetList);\n","import React from 'react';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.onUnmount();\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return (\n      <div className={fieldClasses}>\n        <label htmlFor=\"file\">File</label>\n        <input name=\"file\"\n               type=\"file\"\n               onChange={(e) => this.props.onChange(e.target.files[0])} />\n\n        {this.props.isUploading && <p>Uploading: {this.props.progress}%</p>}\n\n        {this.props.preview ? (\n          <div>\n            <div className=\"ui hidden divider\"></div>\n            <img className=\"ui big image\"\n                 src={this.props.asset.url}\n                 alt=\"alt text placeholder\">\n             </img>\n             <div className=\"ui divider\"></div>\n           </div>\n         ) : ''}\n      </div>\n    );\n  }\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectUploadFile, deselectUploadFile } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport FilePicker from './FilePicker';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const asset = this.props.asset;\n    const isNew = this.props.isNew\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={asset.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={asset.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"asset\">Asset</option>\n        </Field>\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={asset.title}\n               required={true}\n               onChange={this.handleChange} />\n\n        <FilePicker asset={asset}\n                    preview={!isNew}\n                    value={this.props.upload.fileObj}\n                    required={true}\n                    progress={this.props.upload.progress}\n                    isUploading={this.props.upload.isUploading}\n                    onChange={this.props.selectUploadFile}\n                    onUnmount={this.props.deselectUploadFile} />\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={asset.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={asset.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={asset}\n                    hidden={isNew}></ShowJsonButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = { selectUploadFile, deselectUploadFile };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { newAsset, createAsset, deselectAsset, updateSelectedAsset, startRedirect, startUpload } from '../../actions';\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return (\n      <div>\n        <Redirector path=\"/assets\" />\n        <h1>New Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   isNew={true}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.props.startUpload}\n                   onFormCancel={this.props.startRedirect}/>\n         <LoadingIndicator isLoading={this.props.isLoading}\n                           message={SENDING_DATA_MESSAGE}/>\n       </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { newAsset, createAsset, deselectAsset, updateSelectedAsset, startRedirect, startUpload };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset, startRedirect, startUpload } from '../../actions';\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return (\n      <div>\n        <Redirector path=\"/assets\" />\n        <h1>Edit Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.props.startUpload}\n                   onFormCancel={this.props.startRedirect}/>\n        <LoadingIndicator isLoading={this.props.isLoading}\n                          message={SENDING_DATA_MESSAGE}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset, startRedirect , startUpload};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from './views/ContentList';\nimport ContentCreate from './views/ContentCreate';\nimport ContentEdit from './views/ContentEdit';\nimport AssetList from './views/AssetList';\nimport AssetCreate from './views/AssetCreate';\nimport AssetEdit from './views/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state , action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config';\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from '../actions/types';\n\n// INITIAL_UPLOAD_STATE = {\n//   fileObj: { },\n//   fileUrl: '',\n//   isUploading: false,\n//   uploadedBytes: 0,\n//   uploadUrl: ''\n// };\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return { ...state, fileObj: action.payload }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return { ...state, uploadUrl: action.payload }\n    case START_UPLOAD:\n      return { ...state, isUploading: true }\n    case STOP_UPLOAD:\n      return { ...state, isUploading: false }\n    case UPLOAD_FILE:\n      return { ...state, fileUrl: action.payload };\n    case SET_UPLOAD_PROGRESS:\n      return { ...state, progress: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}