{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/assetsActions.js","actions/types.js","actions/metadataActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","components/buttons/Button.js","components/buttons/ShowJsonButton.js","components/buttons/BrowserPreviewButton.js","components/LoadingIndicator.js","components/views/ContentList.js","containers/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate.js","containers/ContentCreate.js","components/views/ContentEdit.js","containers/ContentEdit.js","components/views/AssetList.js","containers/AssetList.js","components/forms/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate.js","containers/AssetCreate.js","components/views/AssetEdit.js","containers/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_METADATA_STATE","isLoading","redirect","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_SELECTED_ASSET_STATE","id","dataType","title","url","file","dateCreated","dateModified","INITIAL_SELECTED_CONTENT_STATE","subTitle","copyText","INITIAL_UPLOAD_STATE","fileObj","fileUrl","isUploading","progress","uploadUrl","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","createAsset","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","asset","wrap","_context2","prev","next","type","selectedAsset","api","sent","payload","stop","_x2","_x3","apply","this","arguments","startRedirect","deselectContent","updateSelectedContent","prop","deselectAsset","_ref3","_callee3","_context3","_x4","updateSelectedAsset","_ref4","_callee4","_context4","_x5","startUpload","getPresignedUrl","upload","deselectUploadFile","s3Params","urlParams","uploadURL","Bucket","Key","name","ACL","ContentType","getSignedUrl","uploadFile","t0","abrupt","config","headers","Content-Type","onUploadProgress","progressEvent","Number","parseInt","loaded","size","axios","put","split","updateAssetUpload","fileData","value","_ref","_callee","_context","_x","Button","props","_props$buttonType","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","ShowJsonButton","node","hidden","buttons_Button","window","open","onShowJsonButton","BrowserPreviewButton","onPreview","LoadingIndicator","message","renderList","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","memo","components_LoadingIndicator","ContentList","fetchContents","views_ContentList","React","Component","mapDispatchToProps","filter","_x6","connect","state","metadata","Field","handleChange","event","_this","onChange","renderInput","renderTextInput","renderSelect","renderTextArea","fieldClasses","required","disabled","htmlFor","label","placeholder","ContentForm","onFormCancel","preventDefault","onFormSubmit","_event$target","target","onFormUpdate","isNew","forms_Field","readOnly","selectedContent","Redirector","stopRedirect","react_router","path","components_Redirector","forms_ContentForm","createContent","ContentCreate","newContent","views_ContentCreate","updateContent","ContentEdit","fetchContent","match","views_ContentEdit","assets","src","alt","toFixed","deleteAsset","AssetList","fetchAssets","views_AssetList","FilePicker","onUnmount","e","files","preview","AssetForm","forms_FilePicker","selectUploadFile","forms_AssetForm","AssetCreate","newAsset","views_AssetCreate","AssetEdit","fetchAsset","views_AssetEdit","App","style","margin","basename","components_Header","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.843a0808.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\n// need to update API to use 'contents'\nexport const CONTENT_RESOURCE = 'nodes';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n\n// Initial Reducer States\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n};\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to axios since it's used for progress on uploads\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchAssets = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSETS,\n    payload: response.filter(node => node.dataType === 'asset')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const asset = getState().selectedAsset;\n  const response = await api.create(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: CREATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const asset = getState().selectedAsset;\n  const response = await api.update(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: UPDATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: DELETE_ASSET,\n    payload: { id: id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\n","import { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from './types';\n\nexport const startLoading = () => {\n  return {\n    type: START_LOADING\n  };\n};\n\nexport const stopLoading = () => {\n  return {\n    type: STOP_LOADING\n  };\n};\n\nexport const startRedirect = () => {\n  return {\n    type: START_REDIRECT\n  };\n};\n\nexport const stopRedirect = () => {\n  return {\n    type: STOP_REDIRECT\n  };\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => (dispatch) => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = ( prop ) => (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: prop\n  });\n}\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n\n  dispatch({\n    type: NEW_ASSET,\n    payload: asset\n  });\n};\n\nexport const deselectAsset = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: prop\n  });\n}\n","import * as api from '../components/api/Api';\nimport axios from 'axios';\n\nimport { createAsset, updateAsset, updateSelectedAsset } from './'\n\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from './types';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config';\n\nexport const startUpload = () => (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  dispatch(getPresignedUrl(getState().upload.fileObj));\n};\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  dispatch({ type: STOP_UPLOAD });\n\n  const asset = getState().selectedAsset;\n  asset.id ? await dispatch(updateAsset(asset)) : await dispatch(createAsset(asset));\n\n  dispatch(deselectUploadFile());\n};\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return {\n    type: DESELECT_UPLOAD_FILE\n  };\n};\n\nexport const getPresignedUrl = fileObj => async dispatch => {\n  try {\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL } = await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: uploadURL\n    });\n\n    dispatch(uploadFile(fileObj, uploadURL));\n\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadFile = (fileObj, uploadUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, config);\n    const fileUrl = response.config.url.split('?')[0];\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n\n    dispatch(updateAssetUpload(fileObj, fileUrl));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAssetUpload = (fileObj, url) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n  dispatch(stopUpload());\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType = 'secondary',  // primary | secondary | icon\n    children,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n  if (linkTo) {\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = props => {\n  const { node, type, hidden } = props;\n  \n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top right\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = props => {\n  const {node, type, hidden} = props;\n\n  const onPreview = node => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top right\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={`ui ${isLoading ? 'active' : ''} inverted dimmer`}>\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\nimport LoadingIndicator from '../LoadingIndicator';\n\nimport { RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst ContentListView = (props) => {\n  return (\n    <div>\n      <div className=\"ui two column grid\">\n        <div className=\"row\">\n          <div className=\"left floated column\">\n            <h1>Content List</h1>\n          </div>\n          <div className=\"right floated right aligned column\">\n            <Button linkTo=\"/contents/new\"\n                    buttonType=\"primary\"\n                    iconType=\"plus\"\n                    tooltipText=\"New Content\"\n                    tooltipPosition=\"top center\">\n              New Content\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <table className=\"ui celled striped compact table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Data Type</th>\n            <th>ID</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList(props)}\n        </tbody>\n      </table>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE}/>\n    </div>\n  );\n};\n\nconst renderList = props => {\n  return props.contents.map(content => {\n    const linkPath = `/contents/${content.id}/edit`;\n\n    return(\n      <tr key={content.id}>\n        <td>\n          <Link to={linkPath}>\n            {content.title}\n          </Link>\n        </td>\n        <td>\n          {content.dataType}\n        </td>\n        <td className=\"collapsing\">\n          {content.id}\n        </td>\n        <td className=\"collapsing\">\n          {content.dateModified}\n        </td>\n        <td className=\"collapsing\">\n          <div className=\"ui icon buttons\">\n            <ShowJsonButton node={content} type=\"icon\"/>\n            <BrowserPreviewButton node={content} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Content\"\n                    tooltipPosition=\"top right\"\n                    onClick={() => props.deleteContent(content.id)}>Delete Content\n            </Button>\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nexport default memo(ContentListView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchContents, deleteContent } from '../actions';\n\nimport ContentListView from '../components/views/ContentList';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  render() {\n    return <ContentListView contents={this.props.contents}\n                            isLoading={this.props.isLoading}\n                            deleteContent={this.props.deleteContent} />;\n  }\n}\n\nexport function mapStateToProps(state) {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchContents, deleteContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentList)\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchContents = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENTS,\n    payload: response.filter(content => content.dataType === 'content')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const content = getState().selectedContent;\n  const response = await api.create(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: CREATE_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const content = getState().selectedContent;\n  const response = await api.update(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: UPDATE_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n  dispatch({ type: START_REDIRECT });\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: DELETE_CONTENT,\n    payload: { id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","import React from 'react';\n\nclass Field extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  renderInput = () => {\n    switch(this.props.type) {\n      case 'text':\n      default:\n        return this.renderTextInput();\n      case 'select':\n        return this.renderSelect();\n      case 'textarea':\n        return this.renderTextArea();\n    }\n  }\n\n  renderTextInput = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <input name={this.props.name}\n               type={this.props.type}\n               placeholder={this.props.placeholder}\n               value={this.props.value}\n               onChange={this.handleChange} />\n      </div>\n    );\n  }\n\n  renderSelect = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n        <select name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value}\n                onChange={this.handleChange}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n\n  renderTextArea = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <textarea name={this.props.name}\n                  placeholder={this.props.placeholder}\n                  value={this.props.value}\n                  onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return this.renderInput();\n  }\n}\n\nexport default Field;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const content = this.props.content;\n    const isNew = this.props.isNew;\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={content.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={content.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"content\">Content</option>\n        </Field>\n\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={content.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"subTitle\"\n               label=\"Subtitle\"\n               placeholder=\"subtitle\"\n               value={content.subTitle}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"textarea\"\n               name=\"copyText\"\n               label=\"Copy Text\"\n               placeholder=\"copy text\"\n               value={content.copyText}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={content.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={content.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={content}\n                          hidden={isNew}></ShowJsonButton>\n          <BrowserPreviewButton node={content}\n                                hidden={isNew}></BrowserPreviewButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Content\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent\n  };\n}\n\nexport default connect(mapStateToProps) (ContentForm);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n  \n  render() {\n    return this.props.redirect\n      ? <Redirect to={this.props.path} />\n      : null;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>New Content</h1>\n      <ContentForm content={props.content}\n                   isNew={true}\n                   onFormUpdate={props.updateSelectedContent}\n                   onFormSubmit={props.createContent}\n                   onFormCancel={props.startRedirect}/>\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE}/>\n     </div>\n  );\n}\nexport default memo(ContentCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { newContent, createContent, deselectContent, updateSelectedContent, startRedirect } from '../actions';\n\nimport ContentCreateView from '../components/views/ContentCreate';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentCreateView content={this.props.content}\n                              isLoading={this.props.isLoading}\n                              createContent={this.props.createContent}\n                              updateSelectedContent={this.props.updateSelectedContent}\n                              startRedirect={this.props.startRedirect} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { newContent, createContent, deselectContent, updateSelectedContent, startRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentEditView = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>Edit Content</h1>\n      <ContentForm content={props.content}\n                   onFormUpdate={props.updateSelectedContent}\n                   onFormSubmit={props.updateContent}\n                   onFormCancel={props.startRedirect}/>\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE}/>\n    </div>\n  );\n};\n\nexport default memo(ContentEditView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchContent, updateContent, deselectContent, updateSelectedContent, startRedirect } from '../actions';\n\nimport ContentEditView from '../components/views/ContentEdit';\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentEditView content={this.props.content}\n                            isLoading={this.props.isLoading}\n                            updateContent={this.props.updateContent}\n                            updateSelectedContent={this.props.updateSelectedContent}\n                            startRedirect={this.props.startRedirect} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { fetchContent, updateContent, deselectContent, updateSelectedContent, startRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport LoadingIndicator from '../LoadingIndicator';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst AssetListView = (props) => {\n  return (\n    <div>\n      <div className=\"ui two column grid\">\n        <div className=\"row\">\n          <div className=\"left floated column\">\n          <h1>Asset List</h1>\n          </div>\n          <div className=\"right floated right aligned column\">\n            <Button linkTo=\"/assets/new\"\n                    buttonType=\"primary\"\n                    iconType=\"plus\">\n              New Asset\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"ui divided relaxed list\">\n        {renderList(props)}\n      </div>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE}/>\n    </div>\n  )\n};\n\nconst renderList = props => {\n  return props.assets.map(asset => {\n    const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n    return (\n      <div className=\"item\"\n           key={asset.id}>\n        <img className=\"ui small image\"\n             src={asset.url}\n             alt=\"alt text placeholder\"></img>\n        <div className=\"content\">\n          <Link to={linkPath} className=\"header\">\n            {asset.title}\n          </Link>\n          <div className=\"description\">\n            <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n            <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n            <strong>File Type: </strong>{asset.file.type}</p>\n          </div>\n        </div>\n        <div className=\"ui icon buttons right floated content\">\n          <ShowJsonButton node={asset} type=\"icon\"/>\n          <Button buttonType=\"icon\"\n                  iconType=\"trash alternate outline\"\n                  tooltipText=\"Delete Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={() => props.deleteAsset(asset.id)}>\n            Delete Asset\n          </Button>\n        </div>\n      </div>\n    );\n  });\n}\nexport default memo(AssetListView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchAssets, deleteAsset } from '../actions';\n\nimport AssetListView from '../components/views/AssetList';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  render() {\n    return <AssetListView assets={this.props.assets}\n                          isLoading={this.props.isLoading}\n                          deleteAsset={this.props.deleteAsset} />;\n  }\n}\n\nexport function mapStateToProps(state) {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchAssets, deleteAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetList)\n","import React from 'react';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.onUnmount();\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return (\n      <div className={fieldClasses}>\n        <label htmlFor=\"file\">File</label>\n        <input name=\"file\"\n               type=\"file\"\n               onChange={(e) => this.props.onChange(e.target.files[0])} />\n\n        {this.props.isUploading && <p>Uploading: {this.props.progress}%</p>}\n\n        {this.props.preview ? (\n          <div>\n            <div className=\"ui hidden divider\"></div>\n            <img className=\"ui big image\"\n                 src={this.props.asset.url}\n                 alt=\"alt text placeholder\">\n             </img>\n             <div className=\"ui divider\"></div>\n           </div>\n         ) : ''}\n      </div>\n    );\n  }\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectUploadFile, deselectUploadFile } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport FilePicker from './FilePicker';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const asset = this.props.asset;\n    const isNew = this.props.isNew\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={asset.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={asset.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"asset\">Asset</option>\n        </Field>\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={asset.title}\n               required={true}\n               onChange={this.handleChange} />\n\n        <FilePicker asset={asset}\n                    preview={!isNew}\n                    value={this.props.upload.fileObj}\n                    required={true}\n                    progress={this.props.upload.progress}\n                    isUploading={this.props.upload.isUploading}\n                    onChange={this.props.selectUploadFile}\n                    onUnmount={this.props.deselectUploadFile} />\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={asset.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={asset.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={asset}\n                    hidden={isNew}></ShowJsonButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = { selectUploadFile, deselectUploadFile };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetForm);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetCreateView = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>New Asset</h1>\n      <AssetForm asset={props.asset}\n                 isNew={true}\n                 onFormUpdate={props.updateSelectedAsset}\n                 onFormSubmit={props.startUpload}\n                 onFormCancel={props.startRedirect}/>\n       <LoadingIndicator isLoading={props.isLoading}\n                         message={SENDING_DATA_MESSAGE}/>\n     </div>\n  );\n}\n\nexport default memo(AssetCreateView);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport { newAsset, createAsset, deselectAsset, updateSelectedAsset, startRedirect, startUpload } from '../actions';\n\nimport AssetCreateView from '../components/views/AssetCreate';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetCreateView asset={this.props.asset}\n                            isLoading={this.props.isLoading}\n                            startUpload={this.props.startUpload}\n                            updateSelectedAsset={this.props.updateSelectedAsset}\n                            startRedirect={this.props.startRedirect} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { newAsset, createAsset, deselectAsset, updateSelectedAsset, startRedirect, startUpload };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetEditView = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>Edit Asset</h1>\n      <AssetForm asset={props.asset}\n                 onFormUpdate={props.updateSelectedAsset}\n                 onFormSubmit={props.startUpload}\n                 onFormCancel={props.startRedirect}/>\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE}/>\n    </div>\n  );\n}\n\nexport default memo(AssetEditView);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  fetchAsset,\n  deselectAsset,\n  startUpload,\n  updateSelectedAsset,\n  startRedirect\n } from '../actions';\n\nimport AssetEditView from '../components/views/AssetEdit';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetEditView asset={this.props.asset}\n                          isLoading={this.props.isLoading}\n                          startUpload={this.props.startUpload}\n                          updateSelectedAsset={this.props.updateSelectedAsset}\n                          startRedirect={this.props.startRedirect} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchAsset,\n  deselectAsset,\n  startUpload,\n  updateSelectedAsset,\n  startRedirect\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from '../containers/ContentList';\nimport ContentCreate from '../containers/ContentCreate';\nimport ContentEdit from '../containers/ContentEdit';\nimport AssetList from '../containers/AssetList';\nimport AssetCreate from '../containers/AssetCreate';\nimport AssetEdit from '../containers/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state , action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config';\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from '../actions/types';\n\n// INITIAL_UPLOAD_STATE = {\n//   fileObj: { },\n//   fileUrl: '',\n//   isUploading: false,\n//   uploadedBytes: 0,\n//   uploadUrl: ''\n// };\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return { ...state, fileObj: action.payload }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return { ...state, uploadUrl: action.payload }\n    case START_UPLOAD:\n      return { ...state, isUploading: true }\n    case STOP_UPLOAD:\n      return { ...state, isUploading: false }\n    case UPLOAD_FILE:\n      return { ...state, fileUrl: action.payload };\n    case SET_UPLOAD_PROGRESS:\n      return { ...state, progress: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}