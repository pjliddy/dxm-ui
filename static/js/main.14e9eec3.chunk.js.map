{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/assetsActions.js","actions/types.js","actions/metadataActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","components/buttons/Button.js","components/buttons/BrowserPreviewButton.js","components/LoadingIndicator.js","components/buttons/ShowJsonButton.js","components/views/ContentList.js","containers/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate.js","containers/ContentCreate.js","components/views/ContentEdit.js","containers/ContentEdit.js","components/views/AssetList.js","containers/AssetList.js","components/forms/FilePicker.js","containers/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate.js","containers/AssetCreate.js","components/views/AssetEdit.js","containers/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_METADATA_STATE","isLoading","redirect","INITIAL_SELECTED_ASSET_STATE","id","dataType","title","url","file","dateCreated","dateModified","INITIAL_SELECTED_CONTENT_STATE","subTitle","copyText","INITIAL_UPLOAD_STATE","fileObj","fileUrl","isUploading","progress","uploadUrl","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","createAsset","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","asset","wrap","_context2","prev","next","type","selectedAsset","api","sent","payload","t0","abrupt","stop","_x2","_x3","apply","this","arguments","startRedirect","deselectContent","updateSelectedContent","property","deselectAsset","updateSelectedAsset","deselectUploadFile","startUpload","getPresignedUrl","upload","_ref","_callee","s3Params","urlParams","uploadURL","_context","Bucket","Key","name","ACL","ContentType","getSignedUrl","uploadFile","_x","_ref3","config","headers","Content-Type","onUploadProgress","progressEvent","Number","parseInt","loaded","size","axios","put","split","updateAssetUpload","fileData","value","stopUpload","_ref4","_callee3","_context3","_x4","_x5","Button","props","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","BrowserPreviewButton","node","hidden","buttons_Button","window","open","onPreview","LoadingIndicator","message","ShowJsonButton","onShowJsonButton","renderPageHeader","renderList","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","memo","components_LoadingIndicator","ContentList","fetchContents","views_ContentList","React","Component","mapDispatchToProps","_callee4","_context4","_x6","filter","connect","state","metadata","Field","handleChange","event","onChange","renderTextInput","fieldClasses","required","disabled","htmlFor","label","placeholder","renderSelect","renderTextArea","renderInput","ContentForm","isNew","_event$target","target","onFormUpdate","forms_Field","readOnly","preventDefault","onFormCancel","onFormSubmit","Redirector","stopRedirect","react_router","path","components_Redirector","forms_ContentForm","createContent","ContentCreate","newContent","views_ContentCreate","selectedContent","updateContent","ContentEdit","fetchContent","match","views_ContentEdit","assets","src","alt","toFixed","deleteAsset","AssetList","fetchAssets","views_AssetList","FilePicker","e","files","preview","forms_FilePicker","selectUploadFile","AssetForm","containers_FilePicker","forms_AssetForm","AssetCreate","newAsset","views_AssetCreate","AssetEdit","fetchAsset","views_AssetEdit","App","style","margin","basename","components_Header","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.14e9eec3.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'contents';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n\n// Initial Reducer States\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\n\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n};\n\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to axios since it's used for progress on uploads\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchAssets = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSETS,\n      payload: response.filter(node => node.dataType === 'asset')\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.create(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: CREATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.update(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: UPDATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: DELETE_ASSET,\n      payload: { id: id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\n","import { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from './types';\n\nexport const startLoading = () => {\n  return { type: START_LOADING };\n};\n\nexport const stopLoading = () => {\n  return { type: STOP_LOADING };\n};\n\nexport const startRedirect = () => {\n  return { type: START_REDIRECT };\n};\n\nexport const stopRedirect = () => {\n  return { type: STOP_REDIRECT };\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await read(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => dispatch => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: property\n  });\n}\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await read(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  try {\n    const asset = getState().selectedAsset;\n\n    dispatch({\n      type: NEW_ASSET,\n      payload: asset\n    });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deselectAsset = () => dispatch => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\nimport axios from 'axios';\n\nimport { createAsset, updateAsset, updateSelectedAsset } from './'\n\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from './types';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config';\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return {\n    type: DESELECT_UPLOAD_FILE\n  };\n};\n\nexport const startUpload = () => (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  dispatch(getPresignedUrl(getState().upload.fileObj));\n};\n\nexport const getPresignedUrl = fileObj => async dispatch => {\n  try {\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL } = await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: uploadURL\n    });\n\n    dispatch(uploadFile(fileObj, uploadURL));\n\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadFile = (fileObj, uploadUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, config);\n    const fileUrl = response.config.url.split('?')[0];\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n\n    dispatch(updateAssetUpload(fileObj, fileUrl));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAssetUpload = (fileObj, url) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n  dispatch(stopUpload());\n}\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: STOP_UPLOAD });\n\n    const asset = getState().selectedAsset;\n    asset.id ? await dispatch(updateAsset(asset)) : await dispatch(createAsset(asset));\n\n    dispatch(deselectUploadFile());\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType,\n    children,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n  if (linkTo) {\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = props => {\n  const {node, type, hidden} = props;\n\n  const onPreview = node => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) return null;\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top right\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={`ui ${isLoading ? 'active' : ''} inverted dimmer`}>\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = props => {\n  const { node, type, hidden } = props;\n  \n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top right\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nimport { CONTENT_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst ContentList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <table className=\"ui celled striped compact table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Data Type</th>\n            <th>ID</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList(props)}\n        </tbody>\n      </table>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nconst renderPageHeader = () => {\n  return(\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n          <h1>Content List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/contents/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Content\"\n                  tooltipPosition=\"left center\">\n            New Content\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.contents.map(content => {\n    const linkPath = `/${CONTENT_RESOURCE}/${content.id}/edit`;\n\n    return(\n      <tr key={content.id}>\n        <td>\n          <Link to={linkPath}>\n            {content.title}\n          </Link>\n        </td>\n        <td>\n          {content.dataType}\n        </td>\n        <td className=\"collapsing\">\n          {content.id}\n        </td>\n        <td className=\"collapsing\">\n          {content.dateModified}\n        </td>\n        <td className=\"collapsing\">\n          <div className=\"ui icon buttons\">\n            <ShowJsonButton node={content} type=\"icon\"/>\n            <BrowserPreviewButton node={content} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Content\"\n                    tooltipPosition=\"top right\"\n                    onClick={() => props.deleteContent(content.id)}>Delete Content\n            </Button>\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nexport default memo(ContentList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteContent,\n  fetchContents\n} from '../actions';\n\nimport ContentListView from '../components/views/ContentList';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  render() {\n    return <ContentListView contents={this.props.contents}\n                            deleteContent={this.props.deleteContent}\n                            isLoading={this.props.isLoading} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteContent,\n  fetchContents\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentList)\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchContents = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENTS,\n      payload: response.filter(content => content.dataType === 'content')\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.create(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: CREATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.update(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: UPDATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: DELETE_CONTENT,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\n\nconst Field = props => {\n  const handleChange = (event) => {\n    props.onChange(event);\n  };\n\n  const renderInput = () => {\n    switch(props.type) {\n      case 'text':\n      default:\n        return renderTextInput();\n      case 'select':\n        return renderSelect();\n      case 'textarea':\n        return renderTextArea();\n    }\n  };\n\n  const renderTextInput = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <input name={props.name}\n               type={props.type}\n               placeholder={props.placeholder}\n               value={props.value}\n               onChange={handleChange} />\n      </div>\n    );\n  };\n\n  const renderSelect = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={props.name}>{props.label}</label>\n        <select name={props.name}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={handleChange}>\n          {props.children}\n        </select>\n      </div>\n    );\n  };\n\n  const renderTextArea = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <textarea name={props.name}\n                  placeholder={props.placeholder}\n                  value={props.value}\n                  onChange={handleChange}></textarea>\n      </div>\n    );\n  };\n\n  if (props.hidden) return null;\n\n  return renderInput();\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nconst ContentForm = props => {\n  const { content, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={content.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"select\"\n             name=\"dataType\"\n             label=\"Data Type\"\n             placeholder=\"data type\"\n             value={content.dataType}\n             onChange={handleChange}>\n        <option value=\"\">Select Data Type...</option>\n        <option value=\"content\">Content</option>\n      </Field>\n\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={content.title}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"subTitle\"\n             label=\"Subtitle\"\n             placeholder=\"subtitle\"\n             value={content.subTitle}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"textarea\"\n             name=\"copyText\"\n             label=\"Copy Text\"\n             placeholder=\"copy text\"\n             value={content.copyText}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={content.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={content.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <ShowJsonButton node={content}\n                        hidden={isNew}></ShowJsonButton>\n        <BrowserPreviewButton node={content}\n                              hidden={isNew}></BrowserPreviewButton>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Content\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n  \n  render() {\n    return this.props.redirect\n      ? <Redirect to={this.props.path} />\n      : null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>New Content</h1>\n      <ContentForm content={props.content}\n                   isNew={true}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.createContent}\n                   onFormUpdate={props.updateSelectedContent} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\nexport default memo(ContentCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createContent,\n  deselectContent,\n  newContent,\n  startRedirect,\n  updateSelectedContent\n} from '../actions';\n\nimport ContentCreateView from '../components/views/ContentCreate';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentCreateView content={this.props.content}\n                              createContent={this.props.createContent}\n                              isLoading={this.props.isLoading}\n                              startRedirect={this.props.startRedirect}\n                              updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  createContent,\n  deselectContent,\n  newContent,\n  startRedirect,\n  updateSelectedContent\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>Edit Content</h1>\n      <ContentForm content={props.content}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.updateContent}\n                   onFormUpdate={props.updateSelectedContent} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nexport default memo(ContentEdit);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  fetchContent,\n  updateContent,\n  deselectContent,\n  updateSelectedContent,\n  startRedirect\n} from '../actions';\n\nimport ContentEditView from '../components/views/ContentEdit';\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentEditView content={this.props.content}\n                            isLoading={this.props.isLoading}\n                            startRedirect={this.props.startRedirect}\n                            updateContent={this.props.updateContent}\n                            updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchContent,\n  updateContent,\n  deselectContent,\n  updateSelectedContent,\n  startRedirect\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst AssetList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <div className=\"ui divided relaxed list\">\n        {renderList(props)}\n      </div>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  )\n};\n\nconst renderPageHeader = () => {\n  return (\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n        <h1>Asset List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/assets/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Asset\"\n                  tooltipPosition=\"left center\">\n            New Asset\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.assets.map(asset => {\n    const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n    return (\n      <div className=\"item\"\n           key={asset.id}>\n        <img className=\"ui small image\"\n             src={asset.url}\n             alt=\"alt text placeholder\"></img>\n        <div className=\"content\">\n          <Link to={linkPath} className=\"header\">\n            {asset.title}\n          </Link>\n          <div className=\"description\">\n            <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n            <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n            <strong>File Type: </strong>{asset.file.type}</p>\n          </div>\n        </div>\n        <div className=\"ui icon buttons right floated content\">\n          <ShowJsonButton node={asset} type=\"icon\"/>\n          <Button buttonType=\"icon\"\n                  iconType=\"trash alternate outline\"\n                  onClick={() => props.deleteAsset(asset.id)}\n                  tooltipPosition=\"top center\"\n                  tooltipText=\"Delete Asset\">\n            Delete Asset\n          </Button>\n        </div>\n      </div>\n    );\n  });\n}\nexport default memo(AssetList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteAsset,\n  fetchAssets,\n} from '../actions';\n\nimport AssetListView from '../components/views/AssetList';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  render() {\n    return <AssetListView assets={this.props.assets}\n                          deleteAsset={this.props.deleteAsset}\n                          isLoading={this.props.isLoading} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteAsset,\n  fetchAssets\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetList)\n","import React from 'react';\n\nconst FilePicker = props => {\n  if (props.hidden)  return null;\n\n  const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n  return (\n    <div className={fieldClasses}>\n      <label htmlFor=\"file\">File</label>\n      <input name=\"file\"\n             type=\"file\"\n             onChange={(e) => props.onChange(e.target.files[0])} />\n\n      {props.isUploading && <p>Uploading: {props.progress}%</p>}\n\n      {props.preview ? (\n        <div>\n          <div className=\"ui hidden divider\"></div>\n          <img className=\"ui big image\"\n               src={props.asset.url}\n               alt=\"alt text placeholder\">\n           </img>\n           <div className=\"ui divider\"></div>\n         </div>\n       ) : ''}\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectUploadFile,\n  selectUploadFile\n} from '../actions';\n\nimport FilePickerView from '../components/forms/FilePicker';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.deselectUploadFile();\n  }\n\n  render() {\n    return <FilePickerView asset={this.props.asset}\n                           isUploading={this.props.isUploading}\n                           onChange={this.props.selectUploadFile}\n                           preview={this.props.preview}\n                           progress={this.props.progress}\n                           required={this.props.required}\n                           value={this.props.value} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    upload: state.upload,\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectUploadFile,\n  selectUploadFile\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (FilePicker);\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport FilePicker from '../../containers/FilePicker';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nconst AssetForm = props => {\n  const { asset, upload, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={asset.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"select\"\n             name=\"dataType\"\n             label=\"Data Type\"\n             placeholder=\"data type\"\n             value={asset.dataType}\n             onChange={handleChange}>\n        <option value=\"\">Select Data Type...</option>\n        <option value=\"asset\">Asset</option>\n      </Field>\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={asset.title}\n             required={true}\n             onChange={handleChange} />\n\n      <FilePicker asset={asset}\n                  preview={!isNew}\n                  value={upload.fileObj}\n                  required={true}\n                  progress={upload.progress}\n                  isUploading={upload.isUploading} />\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={asset.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={asset.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <ShowJsonButton node={asset}\n                        hidden={isNew}></ShowJsonButton>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Asset\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AssetForm;\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>New Asset</h1>\n      <AssetForm asset={props.asset}\n                 isNew={true}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 upload={props.upload} />\n       <LoadingIndicator isLoading={props.isLoading}\n                         message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\n\nexport default memo(AssetCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n} from '../actions';\n\nimport AssetCreateView from '../components/views/AssetCreate';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetCreateView asset={this.props.asset}\n                            isLoading={this.props.isLoading}\n                            startRedirect={this.props.startRedirect}\n                            startUpload={this.props.startUpload}\n                            updateSelectedAsset={this.props.updateSelectedAsset}\n                            upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>Edit Asset</h1>\n      <AssetForm asset={props.asset}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 upload={props.upload} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n}\n\nexport default memo(AssetEdit);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deselectAsset,\n  fetchAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n } from '../actions';\n\nimport AssetEditView from '../components/views/AssetEdit';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetEditView asset={this.props.asset}\n                          isLoading={this.props.isLoading}\n                          startRedirect={this.props.startRedirect}\n                          startUpload={this.props.startUpload}\n                          updateSelectedAsset={this.props.updateSelectedAsset}\n                          upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectAsset,\n  fetchAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from '../containers/ContentList';\nimport ContentCreate from '../containers/ContentCreate';\nimport ContentEdit from '../containers/ContentEdit';\nimport AssetList from '../containers/AssetList';\nimport AssetCreate from '../containers/AssetCreate';\nimport AssetEdit from '../containers/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state , action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config';\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE } from '../actions/types';\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return { ...state, fileObj: action.payload }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return { ...state, uploadUrl: action.payload }\n    case START_UPLOAD:\n      return { ...state, isUploading: true }\n    case STOP_UPLOAD:\n      return { ...state, isUploading: false }\n    case UPLOAD_FILE:\n      return { ...state, fileUrl: action.payload };\n    case SET_UPLOAD_PROGRESS:\n      return { ...state, progress: action.payload };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}