{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/assetsActions.js","actions/types.js","actions/metadataActions.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","actions/uploadActions.js","components/buttons/Button.js","components/buttons/BrowserPreviewButton.js","components/LoadingIndicator.js","components/buttons/ShowJsonButton.js","components/views/ContentList.js","containers/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/Redirector.js","components/views/ContentCreate.js","containers/ContentCreate.js","components/views/ContentEdit.js","containers/ContentEdit.js","components/views/AssetList.js","containers/AssetList.js","components/forms/FilePicker.js","containers/FilePicker.js","components/forms/AssetForm.js","components/views/AssetCreate.js","containers/AssetCreate.js","components/views/AssetEdit.js","containers/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","reducers/uploadReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_METADATA_STATE","isLoading","redirect","INITIAL_SELECTED_ASSET_STATE","id","resourceType","title","url","file","dateCreated","dateModified","INITIAL_SELECTED_CONTENT_STATE","subTitle","copyText","INITIAL_UPLOAD_STATE","fileObj","fileUrl","isNew","isUploading","progress","uploadUrl","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","createAsset","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","getState","asset","wrap","_context2","prev","next","type","selectedAsset","api","sent","payload","t0","abrupt","stop","_x2","_x3","apply","this","arguments","startRedirect","deselectContent","updateSelectedContent","property","deselectAsset","updateSelectedAsset","deselectUploadFile","startUpload","getPresignedUrl","upload","_ref","_callee","s3Params","urlParams","uploadURL","_context","uuid","name","value","Bucket","Key","ACL","ContentType","getSignedUrl","uploadFile","_x","_ref3","config","headers","Content-Type","onUploadProgress","progressEvent","Number","parseInt","loaded","size","axios","put","split","updateAssetUpload","fileData","stopUpload","_ref4","_callee3","_context3","_x4","_x5","Button","props","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","data-tooltip","data-position","BrowserPreviewButton","node","hidden","buttons_Button","window","open","onPreview","LoadingIndicator","message","ShowJsonButton","onShowJsonButton","renderPageHeader","renderList","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","memo","components_LoadingIndicator","ContentList","fetchContents","views_ContentList","React","Component","mapDispatchToProps","_callee4","_context4","_x6","filter","connect","state","metadata","Field","handleChange","event","readOnly","onChange","renderTextInput","fieldClasses","required","disabled","htmlFor","label","placeholder","renderSelect","renderTextArea","renderInput","ContentForm","_event$target","target","onFormUpdate","forms_Field","preventDefault","onFormCancel","onFormSubmit","Redirector","stopRedirect","react_router","path","components_Redirector","forms_ContentForm","createContent","ContentCreate","newContent","views_ContentCreate","selectedContent","updateContent","ContentEdit","fetchContent","match","views_ContentEdit","assets","src","alt","toFixed","deleteAsset","AssetList","fetchAssets","views_AssetList","FilePicker","e","files","preview","forms_FilePicker","selectUploadFile","AssetForm","containers_FilePicker","forms_AssetForm","AssetCreate","newAsset","views_AssetCreate","AssetEdit","fetchAsset","views_AssetEdit","App","style","margin","basename","components_Header","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.91fb8380.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'contents';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Messages\nexport const RECEIVING_DATA_MESSAGE = 'Receiving Data...';\nexport const SENDING_DATA_MESSAGE = 'Sending Data...';\n\n// Initial Reducer States\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\n\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false,\n  redirect: false\n  // keep track of isNew here?\n};\n\nexport const INITIAL_SELECTED_ASSET_STATE = {\n  id: '',\n  resourceType: 'assets',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_SELECTED_CONTENT_STATE = {\n  id: '',\n  resourceType: 'contents',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport const INITIAL_UPLOAD_STATE = {\n  fileObj: { },\n  fileUrl: '',\n  id: '',\n  isNew: false,\n  isUploading: false,\n  progress: 0,\n  uploadUrl: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to axios since it's used for progress on uploads\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchAssets = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSETS,\n      payload: response.filter(node => node.resourceType === ASSET_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const createAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.create(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: CREATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAsset = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const asset = getState().selectedAsset;\n    const response = await api.update(asset, ASSET_RESOURCE);\n\n    dispatch({\n      type: UPDATE_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deleteAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: DELETE_ASSET,\n      payload: { id: id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n\n};\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\nexport const START_REDIRECT = 'START_REDIRECT';\nexport const STOP_REDIRECT = 'STOP_REDIRECT';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n\n// upload actions\nexport const DESELECT_UPLOAD_FILE = 'DESELECT_UPLOAD_FILE';\nexport const GET_PRESIGNED_URL = 'GET_PRESIGNED_URL';\nexport const SELECT_UPLOAD_FILE = 'SELECT_UPLOAD_FILE';\nexport const SET_UPLOAD_PROGRESS = 'SET_UPLOAD_PROGRESS';\nexport const START_UPLOAD = 'START_UPLOAD';\nexport const STOP_UPLOAD = 'STOP_UPLOAD';\nexport const UPLOAD_FILE = 'UPLOAD_FILE';\nexport const UPLOAD_IS_NEW = 'UPLOAD_IS_NEW';\n","import { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from './types';\n\nexport const startLoading = () => {\n  return { type: START_LOADING };\n};\n\nexport const stopLoading = () => {\n  return { type: STOP_LOADING };\n};\n\nexport const startRedirect = () => {\n  return { type: START_REDIRECT };\n};\n\nexport const stopRedirect = () => {\n  return { type: STOP_REDIRECT };\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await read(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const newContent = () => (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => dispatch => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: property\n  });\n}\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET, UPLOAD_IS_NEW } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAsset = id => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await read(id, ASSET_RESOURCE);\n\n    dispatch({\n      type: FETCH_ASSET,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  try {\n    const asset = getState().selectedAsset;\n\n    dispatch({\n      type: UPLOAD_IS_NEW\n    })\n\n    dispatch({\n      type: NEW_ASSET,\n      payload: asset\n    });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const deselectAsset = () => dispatch => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = property => dispatch => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: property\n  });\n}\n","import * as api from '../components/api/Api';\nimport axios from 'axios';\nimport uuid from 'uuid/v4';\n\nimport { createAsset, updateAsset, updateSelectedAsset } from './'\n\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE, UPLOAD_IS_NEW } from './types';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../config';\n\nexport const selectUploadFile = fileObj => dispatch => {\n  dispatch({\n    type: SELECT_UPLOAD_FILE,\n    payload: fileObj\n  });\n};\n\nexport const deselectUploadFile = () => {\n  return {\n    type: DESELECT_UPLOAD_FILE\n  };\n};\n\nexport const startUpload = () => (dispatch, getState) => {\n  dispatch({ type: START_UPLOAD });\n  dispatch(getPresignedUrl(getState().upload.fileObj));\n};\n\nexport const getPresignedUrl = fileObj => async (dispatch, getState) => {\n  try {\n\n    // if state.selectedAsset has id, use it or else generate one\n    const id = (getState().selectedAsset.id) ? getState().selectedAsset.id : uuid();\n\n    dispatch(updateSelectedAsset({ 'name': 'id', 'value': id }));\n\n    const s3Params = {\n      'Bucket': ASSET_REPO_BUCKET,\n      'Key':  `${ASSET_RESOURCE}/${id}/${fileObj.name}`,\n      'ACL': 'public-read',\n      'ContentType': fileObj.type\n    };\n    const urlParams = { getSignedUrl: true };\n    const { uploadURL }= await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n    dispatch({\n      type: GET_PRESIGNED_URL,\n      payload: { uploadURL, id }\n    });\n\n    dispatch(uploadFile(fileObj, uploadURL));\n\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadFile = (fileObj, uploadUrl) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': fileObj.type\n      },\n      onUploadProgress: progressEvent => {\n        dispatch({\n          type: SET_UPLOAD_PROGRESS,\n          payload: Number.parseInt(progressEvent.loaded / fileObj.size * 100, 10)\n        });\n      }\n    };\n\n    const response = await axios.put(uploadUrl, fileObj, config);\n    const fileUrl = response.config.url.split('?')[0];\n\n    dispatch({\n      type: UPLOAD_FILE,\n      payload: fileUrl\n    });\n\n    dispatch(updateAssetUpload(fileObj, fileUrl));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateAssetUpload = (fileObj, url) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n  dispatch(stopUpload());\n}\n\nexport const stopUpload = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: STOP_UPLOAD });\n\n    const asset = getState().selectedAsset;\n\n    getState().upload.isNew\n      ? await dispatch(createAsset(asset))\n      : await dispatch(updateAsset(asset));\n\n    dispatch(deselectUploadFile());\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const uploadIsNew = () => {\n  return { type: UPLOAD_IS_NEW };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = props => {\n  const {\n    buttonType,\n    children,\n    iconType,\n    linkTo,\n    onClick,\n    tooltipPosition,\n    tooltipText,\n  } = props;\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'primary';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'secondary basic';\n      break;\n    case 'icon':\n      buttonStyle = 'basic'\n      break;\n  }\n  if (linkTo) {\n    return(\n      <Link className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && <i className={`${iconType} icon`}></i>}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={`ui ${buttonStyle} button`}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && <i className={`${iconType} icon`}></i>}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = props => {\n  const {node, type, hidden} = props;\n\n  const onPreview = node => {\n    window.open(`${SITE_REPO_URL}/${node.resourceType}/${node.id}.html`);\n  }\n\n  if (hidden) return null;\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top right\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\n\nconst LoadingIndicator = props => {\n  const { isLoading, message } = props;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={`ui ${isLoading ? 'active' : ''} inverted dimmer`}>\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\nexport default LoadingIndicator;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = props => {\n  const { node, type, hidden } = props;\n  \n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.resourceType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top right\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nimport { CONTENT_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst ContentList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <table className=\"ui celled striped compact table\">\n        <thead>\n          <tr>\n            <th>Title</th>\n            <th>Data Type</th>\n            <th>ID</th>\n            <th>Date Modified</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {renderList(props)}\n        </tbody>\n      </table>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nconst renderPageHeader = () => {\n  return(\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n          <h1>Content List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/contents/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Content\"\n                  tooltipPosition=\"left center\">\n            New Content\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.contents.map(content => {\n    const linkPath = `/${CONTENT_RESOURCE}/${content.id}/edit`;\n\n    return(\n      <tr key={content.id}>\n        <td>\n          <Link to={linkPath}>\n            {content.title}\n          </Link>\n        </td>\n        <td>\n          {content.resourceType}\n        </td>\n        <td className=\"collapsing\">\n          {content.id}\n        </td>\n        <td className=\"collapsing\">\n          {content.dateModified}\n        </td>\n        <td className=\"collapsing\">\n          <div className=\"ui icon buttons\">\n            <ShowJsonButton node={content} type=\"icon\"/>\n            <BrowserPreviewButton node={content} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Content\"\n                    tooltipPosition=\"top right\"\n                    onClick={() => props.deleteContent(content.id)}>Delete Content\n            </Button>\n          </div>\n        </td>\n      </tr>\n    );\n  });\n};\n\nexport default memo(ContentList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteContent,\n  fetchContents\n} from '../actions';\n\nimport ContentListView from '../components/views/ContentList';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  render() {\n    return <ContentListView contents={this.props.contents}\n                            deleteContent={this.props.deleteContent}\n                            isLoading={this.props.isLoading} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteContent,\n  fetchContents\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentList)\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT } from './types';\n\nexport const fetchContents = () => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const response = await api.index(CONTENT_RESOURCE);\n\n    dispatch({\n      type: FETCH_CONTENTS,\n      payload: response.filter(content => content.resourceType === CONTENT_RESOURCE)\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const createContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.create(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: CREATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    const content = getState().selectedContent;\n    const response = await api.update(content, CONTENT_RESOURCE);\n\n    dispatch({\n      type: UPDATE_CONTENT,\n      payload: response\n    });\n\n    dispatch({ type: STOP_LOADING });\n    dispatch({ type: START_REDIRECT });\n  } catch (error) {\n    return error;\n  }\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async dispatch => {\n  try {\n    dispatch({ type: START_LOADING });\n\n    await api.destroy(id, CONTENT_RESOURCE);\n\n    dispatch({\n      type: DELETE_CONTENT,\n      payload: { id }\n    });\n\n    dispatch({ type: STOP_LOADING });\n  } catch (error) {\n    return error;\n  }\n};\n","import React from 'react';\n\nconst Field = props => {\n  const handleChange = (event) => {\n    if (!props.readOnly) props.onChange(event);\n  };\n\n  const renderInput = () => {\n    switch(props.type) {\n      case 'text':\n      default:\n        return renderTextInput();\n      case 'select':\n        return renderSelect();\n      case 'textarea':\n        return renderTextArea();\n    }\n  };\n\n  const renderTextInput = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <input name={props.name}\n               type={props.type}\n               placeholder={props.placeholder}\n               value={props.value}\n               onChange={handleChange} />\n      </div>\n    );\n  };\n\n  const renderSelect = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={props.name}>{props.label}</label>\n        <select name={props.name}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={handleChange}>\n          {props.children}\n        </select>\n      </div>\n    );\n  };\n\n  const renderTextArea = () => {\n    const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={props.name}>{props.label}</label>\n        <textarea name={props.name}\n                  placeholder={props.placeholder}\n                  value={props.value}\n                  onChange={handleChange}></textarea>\n      </div>\n    );\n  };\n\n  if (props.hidden) return null;\n\n  return renderInput();\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nconst ContentForm = props => {\n  const { content, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={content.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={content.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={content.title}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"subTitle\"\n             label=\"Subtitle\"\n             placeholder=\"subtitle\"\n             value={content.subTitle}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"textarea\"\n             name=\"copyText\"\n             label=\"Copy Text\"\n             placeholder=\"copy text\"\n             value={content.copyText}\n             required={true}\n             onChange={handleChange}></Field>\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={content.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={content.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <ShowJsonButton node={content}\n                        hidden={isNew}></ShowJsonButton>\n        <BrowserPreviewButton node={content}\n                              hidden={isNew}></BrowserPreviewButton>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Content\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { stopRedirect } from '../actions';\n\nclass Redirector extends React.Component {\n  componentWillUnmount(){\n    this.props.stopRedirect();\n  }\n  \n  render() {\n    return this.props.redirect\n      ? <Redirect to={this.props.path} />\n      : null;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = { stopRedirect };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Redirector);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>New Content</h1>\n      <ContentForm content={props.content}\n                   isNew={true}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.createContent}\n                   onFormUpdate={props.updateSelectedContent} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\nexport default memo(ContentCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createContent,\n  deselectContent,\n  newContent,\n  startRedirect,\n  updateSelectedContent\n} from '../actions';\n\nimport ContentCreateView from '../components/views/ContentCreate';\n\nclass ContentCreate extends React.Component {\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentCreateView content={this.props.content}\n                              createContent={this.props.createContent}\n                              isLoading={this.props.isLoading}\n                              startRedirect={this.props.startRedirect}\n                              updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  createContent,\n  deselectContent,\n  newContent,\n  startRedirect,\n  updateSelectedContent\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React, { memo } from 'react'\n\nimport ContentForm from '../forms/ContentForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst ContentEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/\" />\n      <h1>Edit Content</h1>\n      <ContentForm content={props.content}\n                   onFormCancel={props.startRedirect}\n                   onFormSubmit={props.updateContent}\n                   onFormUpdate={props.updateSelectedContent} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n};\n\nexport default memo(ContentEdit);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  fetchContent,\n  updateContent,\n  deselectContent,\n  updateSelectedContent,\n  startRedirect\n} from '../actions';\n\nimport ContentEditView from '../components/views/ContentEdit';\n\nclass ContentEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  render() {\n    return <ContentEditView content={this.props.content}\n                            isLoading={this.props.isLoading}\n                            startRedirect={this.props.startRedirect}\n                            updateContent={this.props.updateContent}\n                            updateSelectedContent={this.props.updateSelectedContent} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchContent,\n  updateContent,\n  deselectContent,\n  updateSelectedContent,\n  startRedirect\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React, { memo } from 'react'\nimport { Link } from 'react-router-dom';\n\nimport Button from '../buttons/Button';\nimport LoadingIndicator from '../LoadingIndicator';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nimport { ASSET_RESOURCE, RECEIVING_DATA_MESSAGE } from '../../config';\n\nconst AssetList = props => {\n  return (\n    <div>\n      {renderPageHeader()}\n      <div className=\"ui divided relaxed list\">\n        {renderList(props)}\n      </div>\n\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={RECEIVING_DATA_MESSAGE} />\n    </div>\n  )\n};\n\nconst renderPageHeader = () => {\n  return (\n    <div className=\"ui two column grid\">\n      <div className=\"row\">\n        <div className=\"left floated column\">\n        <h1>Asset List</h1>\n        </div>\n        <div className=\"right floated right aligned column\">\n          <Button linkTo=\"/assets/new\"\n                  buttonType=\"primary\"\n                  iconType=\"plus\"\n                  tooltipText=\"New Asset\"\n                  tooltipPosition=\"left center\">\n            New Asset\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst renderList = props => {\n  return props.assets.map(asset => {\n    const linkPath = `/${ASSET_RESOURCE}/${asset.id}/edit`;\n\n    return (\n      <div className=\"item\"\n           key={asset.id}>\n        <img className=\"ui small image\"\n             src={asset.url}\n             alt=\"alt text placeholder\"></img>\n        <div className=\"content\">\n          <Link to={linkPath} className=\"header\">\n            {asset.title}\n          </Link>\n          <div className=\"description\">\n            <p><strong>ID: </strong>{asset.id}<br />\n            <strong>Date Modified: </strong>{asset.dateModified}<br />\n            <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n            <strong>File Type: </strong>{asset.file.type}</p>\n          </div>\n        </div>\n        <div className=\"ui icon buttons right floated content\">\n          <ShowJsonButton node={asset} type=\"icon\"/>\n          <Button buttonType=\"icon\"\n                  iconType=\"trash alternate outline\"\n                  onClick={() => props.deleteAsset(asset.id)}\n                  tooltipPosition=\"top center\"\n                  tooltipText=\"Delete Asset\">\n            Delete Asset\n          </Button>\n        </div>\n      </div>\n    );\n  });\n}\nexport default memo(AssetList);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deleteAsset,\n  fetchAssets,\n} from '../actions';\n\nimport AssetListView from '../components/views/AssetList';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  render() {\n    return <AssetListView assets={this.props.assets}\n                          deleteAsset={this.props.deleteAsset}\n                          isLoading={this.props.isLoading} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = {\n  deleteAsset,\n  fetchAssets\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssetList)\n","import React from 'react';\n\nconst FilePicker = props => {\n  if (props.hidden)  return null;\n\n  const fieldClasses = `${props.required ? 'required ' : ''}${props.disabled ? 'disabled ' : ''}field`;\n\n  return (\n    <div className={fieldClasses}>\n      <label htmlFor=\"file\">File</label>\n      <input name=\"file\"\n             type=\"file\"\n             onChange={(e) => props.onChange(e.target.files[0])} />\n\n      {props.isUploading && <p>Uploading: {props.progress}%</p>}\n\n      {!props.isUploading && props.preview ? (\n        <div>\n          <div className=\"ui hidden divider\"></div>\n          <img className=\"ui big image\"\n               src={props.asset.url}\n               alt=\"alt text placeholder\">\n           </img>\n           <div className=\"ui divider\"></div>\n         </div>\n       ) : ''}\n    </div>\n  );\n}\n\nexport default FilePicker;\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  deselectUploadFile,\n  selectUploadFile\n} from '../actions';\n\nimport FilePickerView from '../components/forms/FilePicker';\n\nclass FilePicker extends React.Component {\n  componentWillUnmount() {\n    this.props.deselectUploadFile();\n  }\n\n  render() {\n    return <FilePickerView asset={this.props.asset}\n                           isUploading={this.props.isUploading}\n                           onChange={this.props.selectUploadFile}\n                           preview={this.props.preview}\n                           progress={this.props.progress}\n                           required={this.props.required}\n                           value={this.props.value} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    upload: state.upload,\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectUploadFile,\n  selectUploadFile\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (FilePicker);\n","import React from 'react';\n\nimport Button from '../buttons/Button';\nimport Field from './Field';\nimport FilePicker from '../../containers/FilePicker';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nconst AssetForm = props => {\n  const { asset, upload, isNew } = props;\n\n  const onFormCancel = (event) => {\n    event.preventDefault();\n    props.onFormCancel();\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    props.onFormSubmit();\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    props.onFormUpdate({ name, value });\n  };\n\n  return(\n    <div className=\"ui form\">\n      <p>All fields must have values. Validation to be added.</p>\n\n      <Field type=\"text\"\n             name=\"id\"\n             label=\"ID\"\n             placeholder=\"id\"\n             value={asset.id}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"resourceType\"\n             label=\"Resource Type\"\n             placeholder=\"resource type\"\n             value={asset.resourceType}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"title\"\n             label=\"Title\"\n             placeholder=\"title\"\n             value={asset.title}\n             required={true}\n             onChange={handleChange} />\n\n      <FilePicker asset={asset}\n                  preview={!isNew}\n                  value={upload.fileObj}\n                  required={true}\n                  progress={upload.progress}\n                  isUploading={upload.isUploading} />\n\n      <Field type=\"text\"\n             name=\"dateCreated\"\n             label=\"Date Created\"\n             placeholder=\"date created\"\n             value={asset.dateCreated}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <Field type=\"text\"\n             name=\"dateModified\"\n             label=\"Date Modified\"\n             placeholder=\"date modified\"\n             value={asset.dateModified}\n             hidden={isNew}\n             disabled={true}\n             readOnly={true}></Field>\n\n      <div>\n        <Button buttonType=\"secondary\"\n                iconType=\"close\"\n                tooltipText=\"Cancel\"\n                tooltipPosition=\"top center\"\n                onClick={onFormCancel}>Cancel</Button>\n        <ShowJsonButton node={asset}\n                        hidden={isNew}></ShowJsonButton>\n        <Button buttonType=\"primary\"\n                iconType=\"save\"\n                tooltipText=\"Save Asset\"\n                tooltipPosition=\"top center\"\n                onClick={onFormSubmit}>Save</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default AssetForm;\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetCreate = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>New Asset</h1>\n      <AssetForm asset={props.asset}\n                 isNew={true}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 upload={props.upload} />\n       <LoadingIndicator isLoading={props.isLoading}\n                         message={SENDING_DATA_MESSAGE} />\n     </div>\n  );\n}\n\nexport default memo(AssetCreate);\n","import React from 'react';\nimport { connect } from 'react-redux'\nimport {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n} from '../actions';\n\nimport AssetCreateView from '../components/views/AssetCreate';\n\nclass AssetCreate extends React.Component {\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetCreateView asset={this.props.asset}\n                            isLoading={this.props.isLoading}\n                            startRedirect={this.props.startRedirect}\n                            startUpload={this.props.startUpload}\n                            updateSelectedAsset={this.props.updateSelectedAsset}\n                            upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  createAsset,\n  deselectAsset,\n  newAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React, { memo } from 'react'\n\nimport AssetForm from '../forms/AssetForm';\nimport LoadingIndicator from '../LoadingIndicator';\nimport Redirector from '../Redirector';\n\nimport { SENDING_DATA_MESSAGE } from '../../config';\n\nconst AssetEdit = props => {\n  return (\n    <div>\n      <Redirector path=\"/assets\" />\n      <h1>Edit Asset</h1>\n      <AssetForm asset={props.asset}\n                 onFormCancel={props.startRedirect}\n                 onFormSubmit={props.startUpload}\n                 onFormUpdate={props.updateSelectedAsset}\n                 upload={props.upload} />\n      <LoadingIndicator isLoading={props.isLoading}\n                        message={SENDING_DATA_MESSAGE} />\n    </div>\n  );\n}\n\nexport default memo(AssetEdit);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deselectAsset,\n  fetchAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n } from '../actions';\n\nimport AssetEditView from '../components/views/AssetEdit';\n\nclass AssetEdit extends React.Component {\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  render() {\n    return <AssetEditView asset={this.props.asset}\n                          isLoading={this.props.isLoading}\n                          startRedirect={this.props.startRedirect}\n                          startUpload={this.props.startUpload}\n                          updateSelectedAsset={this.props.updateSelectedAsset}\n                          upload={this.props.upload} />;\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading,\n    redirect: state.metadata.redirect,\n    upload: state.upload\n  };\n}\n\nconst mapDispatchToProps = {\n  deselectAsset,\n  fetchAsset,\n  startRedirect,\n  startUpload,\n  updateSelectedAsset\n };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from '../containers/ContentList';\nimport ContentCreate from '../containers/ContentCreate';\nimport ContentEdit from '../containers/ContentEdit';\nimport AssetList from '../containers/AssetList';\nimport AssetCreate from '../containers/AssetCreate';\nimport AssetEdit from '../containers/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\nimport uploadReducer from './uploadReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer,\n  upload: uploadReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state, action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a );\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => {\n        return (a.title.toLowerCase() > b.title.toLowerCase())\n          ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0)\n      };\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport { START_LOADING, STOP_LOADING, START_REDIRECT, STOP_REDIRECT } from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n      case START_REDIRECT:\n        return { ...state, redirect: true }\n      case STOP_REDIRECT:\n        return { ...state, redirect: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_ASSET_STATE } from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_SELECTED_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_SELECTED_CONTENT_STATE } from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_SELECTED_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INITIAL_SELECTED_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return {\n        ...state,\n        [action.payload.name]: action.payload.value\n      }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_UPLOAD_STATE } from '../config';\nimport { DESELECT_UPLOAD_FILE, GET_PRESIGNED_URL, SELECT_UPLOAD_FILE, SET_UPLOAD_PROGRESS, START_UPLOAD, STOP_UPLOAD, UPLOAD_FILE,UPLOAD_IS_NEW } from '../actions/types';\n\nexport default (state = INITIAL_UPLOAD_STATE, action) => {\n  switch (action.type) {\n    case SELECT_UPLOAD_FILE:\n      return {\n        ...state,\n        fileObj: action.payload\n      }\n    case DESELECT_UPLOAD_FILE:\n      return INITIAL_UPLOAD_STATE;\n    case GET_PRESIGNED_URL:\n      return {\n        ...state,\n        uploadUrl: action.payload.uploadUrl,\n        id: action.payload.id\n      }\n    case START_UPLOAD:\n      return {\n        ...state,\n        isUploading: true\n      }\n    case STOP_UPLOAD:\n      return {\n        ...state,\n        isUploading: false\n      }\n    case UPLOAD_FILE:\n      return {\n        ...state,\n        fileUrl: action.payload\n      };\n    case SET_UPLOAD_PROGRESS:\n      return {\n        ...state,\n        progress: action.payload\n      };\n    case UPLOAD_IS_NEW:\n      return {\n        ...state,\n        isNew: true\n      }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}