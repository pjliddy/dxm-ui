{"version":3,"sources":["components/Header.js","config.js","components/api/Api.js","actions/selectedContentActions.js","actions/types.js","actions/selectedAssetActions.js","components/buttons/Button.js","components/buttons/ShowJsonButton.js","components/buttons/BrowserPreviewButton.js","components/IsLoading.js","components/views/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/views/ContentCreate.js","components/views/ContentEdit.js","components/views/AssetList.js","actions/assetsActions.js","components/api/S3.js","components/forms/AssetForm.js","components/views/AssetCreate.js","components/views/AssetEdit.js","components/App.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","reducers/metadataReducer.js","reducers/selectedAssetReducer.js","reducers/selectedContentReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","API_BASE_URL","INITIAL_METADATA_STATE","isLoading","INITIAL_ASSETS_STATE","INITIAL_CONTENTS_STATE","INITIAL_ASSET_STATE","id","dataType","title","url","file","dateCreated","dateModified","INTIAL_CONTENT_STATE","subTitle","copyText","create","body","resource","params","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","update","destroy","deselectContent","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","type","payload","stop","_x4","apply","this","arguments","updateSelectedContent","prop","_ref4","_callee4","_context4","_x5","deselectAsset","updateSelectedAsset","Button","_ref","_ref$buttonType","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","icon","iconClass","data-tooltip","data-position","ShowJsonButton","node","hidden","buttons_Button","window","open","onShowJsonButton","BrowserPreviewButton","onPreview","IsLoading","props","loaderStyles","ContentList","fetchContents","_this","contents","map","content","linkPath","key","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","renderList","components_IsLoading","React","Component","mapDispatchToProps","_callee","_context","api","sent","filter","_x","connect","state","metadata","Field","handleChange","event","onChange","renderInput","renderTextInput","renderSelect","renderTextArea","fieldClasses","required","disabled","htmlFor","name","label","placeholder","value","ContentForm","onFormCancel","preventDefault","onFormSubmit","_event$target","target","onFormUpdate","isNew","forms_Field","readOnly","ContentCreate","redirect","setState","createContent","newContent","react_router","forms_ContentForm","_ref2","_callee2","getState","_context2","selectedContent","_x2","_x3","ContentEdit","updateContent","fetchContent","match","AssetList","fetchAssets","assets","asset","src","alt","size","toFixed","deleteAsset","getPresignedUrl","s3Params","urlParams","Bucket","Key","ACL","ContentType","getSignedUrl","abrupt","uploadAsset","uploadUrl","config","headers","Content-Type","onUploadProgress","progressEvent","progress","Number","parseInt","loaded","axios","put","split","t0","AssetForm","selectedFile","handleFileChange","files","AssetCreate","fileObj","uploadURL","fileData","createAsset","newAsset","forms_AssetForm","selectedAsset","AssetEdit","updateAsset","fetchAsset","App","style","margin","basename","components_Header","path","exact","component","combineReducers","length","undefined","action","sort","b","toLowerCase","sortFunction","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.dde252ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// String Constants\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'nodes';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n\n// Initial Reducer States\nexport const INITIAL_METADATA_STATE = {\n  isLoading: false\n};\nexport const INITIAL_ASSETS_STATE = [];\nexport const INITIAL_CONTENTS_STATE = [];\nexport const INITIAL_ASSET_STATE = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\nexport const INTIAL_CONTENT_STATE = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n","import { API_BASE_URL }  from '../../config';\n\n// convert to class?\n\n// POST includes params for getSignedUrl for S3 authentication\nexport const create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nexport const destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n","import { read } from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newContent = () => async (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: NEW_CONTENT,\n    payload: content\n  });\n};\n\nexport const deselectContent = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_CONTENT,\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_CONTENT,\n    payload: prop\n  });\n}\n","// metadata action types\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\n// asset action types\nexport const CREATE_ASSET = 'CREATE_ASSET';\nexport const DELETE_ASSET = 'DELETE_ASSET';\nexport const FETCH_ASSETS = 'FETCH_ASSETS';\nexport const UPDATE_ASSET = 'UPDATE_ASSET';\n\n// content action types\nexport const CREATE_CONTENT = 'CREATE_CONTENT';\nexport const DELETE_CONTENT = 'DELETE_CONTENT';\nexport const FETCH_CONTENTS = 'FETCH_CONTENTS';\nexport const UPDATE_CONTENT = 'UPDATE_CONTENT';\n\n// selected asset actions\nexport const DESELECT_ASSET = 'DESELECT_ASSET';\nexport const FETCH_ASSET = 'FETCH_ASSET';\nexport const NEW_ASSET = 'NEW_ASSET';\nexport const UPDATE_SELECTED_ASSET = 'UPDATE_SELECTED_ASSET';\n\n// selected content actions\nexport const DESELECT_CONTENT = 'DESELECT_CONTENT';\nexport const FETCH_CONTENT = 'FETCH_CONTENT';\nexport const NEW_CONTENT = 'NEW_CONTENT';\nexport const UPDATE_SELECTED_CONTENT = 'UPDATE_SELECTED_CONTENT';\n","import { read } from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await read(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n\n  dispatch({\n    type: NEW_ASSET,\n    payload: asset\n  });\n};\n\nexport const deselectAsset = () => async (dispatch) => {\n  dispatch({\n    type: DESELECT_ASSET,\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: UPDATE_SELECTED_ASSET,\n    payload: prop\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  buttonType = 'secondary',  // primary | secondary | icon\n  children,\n  iconType,\n  linkTo,\n  onClick,\n  tooltipPosition,\n  tooltipText,\n}) => {\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'ui primary button';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'ui secondary basic button';\n      break;\n    case 'icon':\n      buttonStyle = 'ui basic button'\n      break;\n  }\n\n  let icon = '';\n\n  if (iconType) {\n    const iconClass = `${iconType} icon`;\n    icon = <i className={iconClass}></i>;\n  }\n\n  if (linkTo) {\n    return(\n      <Link className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && icon}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && icon}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = ({ node, type, hidden, children }) => {\n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top center\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = ({node, type, hidden, children}) => {\n  const onPreview = (node) => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top center\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\n\nconst IsLoading = props => {\n  const { isLoading } = props;\n\n  const loaderStyles = `ui ${isLoading ? 'active' : ''} inverted dimmer`;\n\n  if (!isLoading) return null;\n\n  return (\n    <div className={loaderStyles}>\n      <div className=\"ui text loader\">Working...</div>\n    </div>\n  );\n}\nexport default IsLoading;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContents, deleteContent } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\nimport IsLoading from '../IsLoading';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  renderList() {\n    return this.props.contents.map(content => {\n      const linkPath = `/contents/${content.id}/edit`;\n\n      return(\n        <tr key={content.id}>\n          <td>\n            <Link to={linkPath}>\n              {content.title}\n            </Link>\n          </td>\n          <td>\n            {content.dataType}\n          </td>\n          <td className=\"collapsing\">\n            {content.id}\n          </td>\n          <td className=\"collapsing\">\n            {content.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <ShowJsonButton node={content} type=\"icon\"/>\n              <BrowserPreviewButton node={content} type=\"icon\"/>\n              <Button buttonType=\"icon\"\n                      iconType=\"trash alternate outline\"\n                      tooltipText=\"Delete Content\"\n                      tooltipPosition=\"top right\"\n                      onClick={() => this.props.deleteContent(content.id)}>Delete Content\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n              <h1>Content List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/contents/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\"\n                      tooltipText=\"New Content\"\n                      tooltipPosition=\"top center\">\n                New Content\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <table className=\"ui celled striped compact table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Data Type</th>\n              <th>ID</th>\n              <th>Date Modified</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderList()}\n          </tbody>\n        </table>\n\n        <IsLoading isLoading={this.props.isLoading} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    contents: state.contents,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchContents, deleteContent };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentList);\n","import * as api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchContents = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(CONTENT_RESOURCE);\n\n  dispatch({\n    type: FETCH_CONTENTS,\n    payload: response.filter(content => content.dataType === 'content')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createContent = (content) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.create(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: CREATE_CONTENT,\n    payload: response\n  });\n  \n  dispatch({ type: STOP_LOADING });\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const content = getState().selectedContent;\n  const response = await api.update(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: UPDATE_CONTENT,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: DELETE_CONTENT,\n    payload: { id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","import React from 'react';\n\nclass Field extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  renderInput = () => {\n    switch(this.props.type) {\n      case 'text':\n      default:\n        return this.renderTextInput();\n      case 'select':\n        return this.renderSelect();\n      case 'textarea':\n        return this.renderTextArea();\n    }\n  }\n\n  renderTextInput = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <input name={this.props.name}\n               type={this.props.type}\n               placeholder={this.props.placeholder}\n               value={this.props.value}\n               onChange={this.handleChange} />\n      </div>\n    );\n  }\n\n  renderSelect = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n        <select name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value}\n                onChange={this.handleChange}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n\n  renderTextArea = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <textarea name={this.props.name}\n                  placeholder={this.props.placeholder}\n                  value={this.props.value}\n                  onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return this.renderInput();\n  }\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const content = this.props.content;\n    const isNew = this.props.isNew;\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={content.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={content.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"content\">Content</option>\n        </Field>\n\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={content.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"subTitle\"\n               label=\"Subtitle\"\n               placeholder=\"subtitle\"\n               value={content.subTitle}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"textarea\"\n               name=\"copyText\"\n               label=\"Copy Text\"\n               placeholder=\"copy text\"\n               value={content.copyText}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={content.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={content.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={content}\n                          hidden={isNew}></ShowJsonButton>\n          <BrowserPreviewButton node={content}\n                                hidden={isNew}></BrowserPreviewButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Content\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newContent, createContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport IsLoading from '../IsLoading';\n\nclass ContentCreate extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  createContent = async () => {\n    this.setState({ isLoading: true });\n\n    await this.props.createContent(this.props.content);\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    return (\n      <div>\n        <h1>New Content</h1>\n        <ContentForm content={this.props.content}\n                     isNew={true}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.createContent}\n                     onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.props.isLoading} />\n       </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { newContent, createContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContent, updateContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\nimport IsLoading from '../IsLoading';\n\n// research containers for wrapping forms, etc.\n\nclass ContentEdit extends React.Component {\n  state = {\n    redirect: false,\n  };\n\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  updateContent = async () => {\n    await this.props.updateContent();\n\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    // create redirect component\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    return (\n      <div>\n        <h1>Edit Content</h1>\n        <ContentForm content={this.props.content}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.updateContent}\n                     onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.props.isLoading} />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    content: state.selectedContent,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchContent, updateContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAssets, deleteAsset } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport IsLoading from '../IsLoading';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  renderList() {\n    return this.props.assets.map(asset => {\n      const linkPath = `/assets/${asset.id}/edit`;\n\n      return (\n        <div className=\"item\"\n             key={asset.id}>\n          <img className=\"ui small image\"\n               src={asset.url}\n               alt=\"alt text placeholder\"></img>\n          <div className=\"content\">\n            <Link to={linkPath} className=\"header\">\n              {asset.title}\n            </Link>\n            <div className=\"description\">\n              <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n              <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n              <strong>File Type: </strong>{asset.file.type}</p>\n            </div>\n          </div>\n          <div className=\"ui icon buttons right floated content\">\n            <ShowJsonButton node={asset} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Asset\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => this.props.deleteAsset(asset.id)}>\n              Delete Asset\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n            <h1>Asset List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/assets/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\">\n                New Asset\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"ui divided relaxed list\">\n          {this.renderList()}\n        </div>\n\n        <IsLoading isLoading={this.props.isLoading} />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    assets: state.assets,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchAssets, deleteAsset }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetList);\n","import * as api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from './types';\nimport { START_LOADING, STOP_LOADING } from './types';\n\nexport const fetchAssets = () => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  const response = await api.index(ASSET_RESOURCE);\n\n  dispatch({\n    type: FETCH_ASSETS,\n    payload: response.filter(node => node.dataType === 'asset')\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const createAsset = (asset) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  // expand with file upload stuff\n  const response = await api.create(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: CREATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const updateAsset = (asset) => async (dispatch, getState) => {\n  dispatch({ type: START_LOADING });\n\n  const asset = getState().selectedAsset;\n  const response = await api.update(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: UPDATE_ASSET,\n    payload: response\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n  dispatch({ type: START_LOADING });\n\n  await api.destroy(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: DELETE_ASSET,\n    payload: { id: id }\n  });\n\n  dispatch({ type: STOP_LOADING });\n};\n","import * as api from '../api/Api';\nimport axios from 'axios';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET } from '../../config';\nimport { updateSelectedAsset } from '../../actions';\n\nexport const getPresignedUrl = async (file) => {\n  const s3Params = {\n    'Bucket': ASSET_REPO_BUCKET,\n    'Key':  `${ASSET_RESOURCE}/${file.name}`,\n    'ACL': 'public-read',\n    'ContentType': file.type\n  };\n  const urlParams = { getSignedUrl: true };\n  const response = await api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n  return response;\n}\n\nexport const uploadAsset = async (uploadUrl, file) => {\n  try {\n    // post file to presigned URL\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': file.type\n      },\n      onUploadProgress: progressEvent => {\n        const progress = Number.parseInt(progressEvent.loaded / file.size * 100, 10);\n\n        // set to state value\n\n        console.log(`Progress: ${progress}%`);\n      }\n    }\n\n    const response = await axios.put(uploadUrl, file, config);\n    const url = response.config.url.split('?')[0];\n\n    return url;\n  } catch (error) {\n    return error;\n  }\n}\n\n// make this an action\nexport const updateAssetFile = (url, fileObj) => dispatch => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n  dispatch(updateSelectedAsset({ 'name': 'file', 'value': fileData }));\n  dispatch(updateSelectedAsset({ 'name': 'url', 'value': url }));\n\n}\n","import React from 'react';\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetForm extends React.Component {\n  state = {\n    selectedFile: ''\n  };\n\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.selectedFile);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  handleFileChange = (event) => {\n    const { name } = event.target;\n    const value = event.target.files[0];\n\n    this.props.onFormUpdate({ name, value });\n\n    this.setState({\n      selectedFile: value\n    });\n  }\n\n  render() {\n    const asset = this.props.asset;\n    const isNew = this.props.isNew\n\n    /*\n      create upload component in React?\n      make file input component?\n      disable upload button during upload?\n    */\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={asset.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={asset.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"asset\">Asset</option>\n        </Field>\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={asset.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <div className=\"field\">\n          <label htmlFor=\"file\">File</label>\n          <input name=\"file\"\n                 type=\"file\"\n                 onChange={this.handleFileChange} />\n\n          {!isNew ? (\n            <div>\n              <div className=\"ui hidden divider\"></div>\n              <img className=\"ui big image\"\n                   src={this.props.asset.url}\n                   alt=\"alt text placeholder\">\n               </img>\n               <div className=\"ui divider\"></div>\n             </div>\n           ) : ''}\n        </div>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={asset.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={asset.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={asset}\n                    hidden={isNew}></ShowJsonButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssetForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newAsset, createAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset /*, updateAssetFile */ } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\nimport IsLoading from '../IsLoading';\n\nclass AssetCreate extends React.Component {\n  state = {\n    redirect: false\n  };\n\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    // replace with go to page (#pages) action\n    this.setState({ redirect: true });\n  }\n\n  // redefine as action / reducer\n  onFormSubmit = async (fileObj) => {\n    try {\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      // upload file to S3\n      const url = await uploadAsset(uploadURL, fileObj);\n\n      // what if upload fails?\n\n      // dispatch(updateAssetFile(url, fileObj));\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n      // on success, create asset node in db\n      await this.props.createAsset(this.props.asset);\n\n      this.setState({\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    return (\n      <div>\n        <h1>New Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   isNew={true}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.onFormSubmit}\n                   onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.props.isLoading} />\n       </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { newAsset, createAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset /*, updateAssetFile */ } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\nimport IsLoading from '../IsLoading';\n\nclass AssetEdit extends React.Component {\n  state = {\n    redirect: false\n  };\n\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  /*\n    Need to delete existing asset image if updated\n  */\n\n  onFormSubmit = async (fileObj) => {\n    try {\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      const url = await uploadAsset(uploadURL, fileObj);\n\n      // what if upload fails?\n\n      // updateAssetFile(url, fileObj);\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n\n      // on success, create asset node in db\n      await this.props.updateAsset(this.props.asset);\n\n      this.setState({\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    return (\n      <div>\n        <h1>Edit Asset</h1>\n        <AssetForm asset={this.props.asset}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.onFormSubmit}\n                   onFormCancel={this.onFormCancel}/>\n         <IsLoading isLoading={this.props.isLoading} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    asset: state.selectedAsset,\n    isLoading: state.metadata.isLoading\n  };\n}\n\nconst mapDispatchToProps = { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from './views/ContentList';\nimport ContentCreate from './views/ContentCreate';\nimport ContentEdit from './views/ContentEdit';\nimport AssetList from './views/AssetList';\nimport AssetCreate from './views/AssetCreate';\nimport AssetEdit from './views/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  // contents/:id/edit\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport metadataReducer from './metadataReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  metadata: metadataReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer\n});\n","import { INITIAL_ASSETS_STATE } from '../config';\nimport { CREATE_ASSET, DELETE_ASSET, FETCH_ASSETS, UPDATE_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSETS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSETS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_ASSET:\n      return [...state , action.payload];\n    case UPDATE_ASSET:\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case DELETE_ASSET:\n      return state.filter(a => a.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_CONTENTS_STATE } from '../config';\nimport { CREATE_CONTENT, DELETE_CONTENT, FETCH_CONTENTS, UPDATE_CONTENT } from '../actions/types';\n\nexport default (state = INITIAL_CONTENTS_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENTS:\n      // sort by name for now\n      const sortFunction = (a, b) => (a.title.toLowerCase() > b.title.toLowerCase())\n        ? 1 : ((b.title.toLowerCase() > a.title.toLowerCase()) ? -1 : 0);\n\n      return action.payload.sort((a,b) => sortFunction(a,b));\n    case CREATE_CONTENT:\n      return [...state , action.payload];\n    case UPDATE_CONTENT:\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case DELETE_CONTENT:\n      return state.filter(c => c.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import { INITIAL_METADATA_STATE } from '../config';\nimport { START_LOADING, STOP_LOADING } from '../actions/types';\n\nexport default (state = INITIAL_METADATA_STATE, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true }\n    case STOP_LOADING:\n      return { ...state, isLoading: false }\n    default:\n      return state;\n  }\n};\n","import { INITIAL_ASSET_STATE } from '../config';\nimport { DESELECT_ASSET, FETCH_ASSET, NEW_ASSET, UPDATE_SELECTED_ASSET } from '../actions/types';\n\nexport default (state = INITIAL_ASSET_STATE, action) => {\n  switch (action.type) {\n    case FETCH_ASSET:\n      return action.payload;\n    case NEW_ASSET:\n        return action.payload;\n    case DESELECT_ASSET:\n      return INITIAL_ASSET_STATE;\n    case UPDATE_SELECTED_ASSET:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { INTIAL_CONTENT_STATE } from '../config';\nimport { DESELECT_CONTENT, FETCH_CONTENT, NEW_CONTENT, UPDATE_SELECTED_CONTENT } from '../actions/types';\n\nexport default (state = INTIAL_CONTENT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_CONTENT:\n      return action.payload;\n    case NEW_CONTENT:\n      return action.payload;\n    case DESELECT_CONTENT:\n      return INTIAL_CONTENT_STATE;\n    case UPDATE_SELECTED_CONTENT:\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\n// const store = createStore(reducers, applyMiddleware(thunk));\n\nconst store = createStore(reducers, composeWithDevTools(\n  applyMiddleware(thunk)\n));\n\n// use store.dispatch() and map view data loading actions?\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}