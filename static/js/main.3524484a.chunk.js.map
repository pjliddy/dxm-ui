{"version":3,"sources":["components/api/Api.js","config.js","components/Header.js","actions/selectedContentActions.js","actions/selectedAssetActions.js","components/buttons/Button.js","components/buttons/ShowJsonButton.js","components/buttons/BrowserPreviewButton.js","components/views/ContentList.js","actions/contentsActions.js","components/forms/Field.js","components/forms/ContentForm.js","components/views/ContentCreate.js","components/views/ContentEdit.js","components/views/AssetList.js","actions/assetsActions.js","components/api/S3.js","components/forms/AssetForm.js","components/views/AssetCreate.js","components/views/AssetEdit.js","components/App.js","reducers/selectedContentReducer.js","reducers/selectedAssetReducer.js","reducers/index.js","reducers/assetsReducer.js","reducers/contentsReducer.js","index.js"],"names":["API_BASE_URL","require","module","exports","create","body","resource","params","url","URL","concat","search","URLSearchParams","fetch","method","JSON","stringify","then","response","json","error","console","log","index","read","id","update","destroy","__webpack_require__","r","__webpack_exports__","d","ASSET_REPO_BUCKET","ASSET_REPO_PATH","ASSET_RESOURCE","CONTENT_LAKE_URL","CONTENT_RESOURCE","SITE_REPO_URL","Header","react_default","a","createElement","className","react_router_dom","to","deselectContent","_ref3","Object","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","wrap","_context3","prev","next","type","payload","stop","_x4","apply","this","arguments","updateSelectedContent","prop","_ref4","_callee4","_context4","_x5","deselectAsset","updateSelectedAsset","Button","_ref","_ref$buttonType","buttonType","children","iconType","linkTo","onClick","tooltipPosition","tooltipText","buttonStyle","icon","iconClass","data-tooltip","data-position","ShowJsonButton","node","hidden","buttons_Button","window","open","dataType","onShowJsonButton","BrowserPreviewButton","onPreview","ContentList","props","fetchContents","_this","contents","map","content","linkPath","key","title","dateModified","buttons_ShowJsonButton","buttons_BrowserPreviewButton","deleteContent","renderList","React","Component","mapDispatchToProps","_callee","_context","Api","sent","filter","_x","connect","state","Field","handleChange","event","onChange","renderInput","renderTextInput","renderSelect","renderTextArea","fieldClasses","required","disabled","htmlFor","name","label","placeholder","value","ContentForm","onFormCancel","preventDefault","onFormSubmit","_event$target","target","onFormUpdate","isNew","forms_Field","readOnly","subTitle","copyText","dateCreated","ContentCreate","redirect","isLoading","setState","createContent","newContent","react_router","loaderStyles","forms_ContentForm","_ref2","_callee2","getState","_context2","selectedContent","_x2","_x3","ContentEdit","updateContent","fetchContent","match","AssetList","fetchAssets","assets","asset","src","alt","file","size","toFixed","deleteAsset","getPresignedUrl","s3Params","urlParams","Bucket","Key","ACL","ContentType","getSignedUrl","abrupt","uploadAsset","uploadUrl","config","headers","Content-Type","onUploadProgress","progressEvent","progress","Number","parseInt","loaded","axios","put","split","t0","AssetForm","selectedFile","handleFileChange","files","AssetCreate","createAsset","fileObj","uploadURL","fileData","newAsset","forms_AssetForm","selectedAsset","AssetEdit","updateAsset","fetchAsset","App","style","margin","basename","components_Header","path","exact","component","initialContentState","initialAssetState","combineReducers","length","undefined","action","toConsumableArray","c","objectSpread","defineProperty","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.3524484a.chunk.js","sourcesContent":["const API_BASE_URL = require('../../config').API_BASE_URL\n// import { API_BASE_URL }  from '../../config';\n\n// convert to class?\n\n// POST includes params for getSignedUrl for S3 authentication\nconst create = (body, resource, params) => {\n  const url = new URL(`${API_BASE_URL}/${resource}`);\n  url.search = new URLSearchParams(params);\n\n  return fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst index = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst read = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst update = (body, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst destroy = (id, resource) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nmodule.exports = {\n  create,\n  index,\n  read,\n  update,\n  destroy\n};\n","// don't duplicate value for ASSET_REPO_PATH and ASSET_RESOURCE\nexport const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\nexport const ASSET_REPO_BUCKET = 'dxm-file-repo';\nexport const ASSET_REPO_PATH = 'assets';\nexport const ASSET_RESOURCE = 'assets';\nexport const CONTENT_LAKE_URL = 'https://dxm-content-lake.s3.amazonaws.com';\nexport const CONTENT_RESOURCE = 'nodes';\nexport const SITE_REPO_URL = 'https://dxm-site-repo.s3.amazonaws.com';\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <div className=\"ui stackable main menu\">\n      <div className=\"header item\">\n        Digital eXperience Manager\n      </div>\n      <div className=\"right menu\">\n        <Link to='/' className=\"item\">\n          Content\n        </Link>\n        <Link to='/assets' className=\"item\">\n          Assets\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import Api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\n\nexport const fetchContent = (id) => async (dispatch) => {\n  const response = await Api.read(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: 'FETCH_CONTENT',\n    payload: response\n  });\n};\n\nexport const newContent = () => async (dispatch, getState) => {\n  const content = getState().selectedContent;\n\n  dispatch({\n    type: 'NEW_CONTENT',\n    payload: content\n  });\n};\n\nexport const deselectContent = () => async (dispatch) => {\n  dispatch({\n    type: 'DESELECT_CONTENT',\n    payload: { }\n  });\n};\n\nexport const updateSelectedContent = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: 'UPDATE_SELECTED_CONTENT',\n    payload: prop\n  });\n}\n","import Api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\n\nexport const fetchAsset = (id) => async (dispatch) => {\n  const response = await Api.read(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: 'FETCH_ASSET',\n    payload: response\n  });\n};\n\nexport const newAsset = () => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n\n  dispatch({\n    type: 'NEW_ASSET',\n    payload: asset\n  });\n};\n\nexport const deselectAsset = () => async (dispatch) => {\n  dispatch({\n    type: 'DESELECT_ASSET',\n    payload: { }\n  });\n};\n\nexport const updateSelectedAsset = ( prop ) => async (dispatch) => {\n  dispatch({\n    type: 'UPDATE_SELECTED_ASSET',\n    payload: prop\n  });\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  buttonType = 'secondary',  // primary | secondary | icon\n  children,\n  iconType,\n  linkTo,\n  onClick,\n  tooltipPosition,\n  tooltipText,\n}) => {\n\n  let buttonStyle = '';\n\n  switch (buttonType) {\n    case 'primary':\n      buttonStyle = 'ui primary button';\n      break;\n    case 'secondary':\n    default:\n      buttonStyle = 'ui secondary basic button';\n      break;\n    case 'icon':\n      buttonStyle = 'ui basic button'\n      break;\n  }\n\n  let icon = '';\n\n  if (iconType) {\n    const iconClass = `${iconType} icon`;\n    icon = <i className={iconClass}></i>;\n  }\n\n  if (linkTo) {\n    return(\n      <Link className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            to={linkTo}>\n        {iconType && icon}\n        {buttonType !== 'icon' ? children : ''}\n      </Link>\n    )\n  }\n\n  return (\n    <button className={buttonStyle}\n            data-tooltip={tooltipText}\n            data-position={tooltipPosition}\n            onClick={onClick}>\n      {iconType && icon}\n      {buttonType !== 'icon' ? children : ''}\n    </button>\n  )\n}\n\nexport default Button;\n","import React from 'react';\nimport Button from './Button';\nimport { CONTENT_LAKE_URL }  from '../../config';\n\nconst ShowJsonButton = ({ node, type, hidden, children }) => {\n  const onShowJsonButton = (node) => {\n    window.open(`${CONTENT_LAKE_URL}/${node.dataType}/${node.id}.json`);\n  };\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"code\"\n            tooltipText=\"Show JSON\"\n            tooltipPosition=\"top center\"\n            onClick={() => onShowJsonButton(node)}>\n      Show JSON\n    </Button>\n  );\n}\n\nexport default ShowJsonButton;\n","import React from 'react';\nimport Button from './Button';\nimport { SITE_REPO_URL }  from '../../config';\n\nconst BrowserPreviewButton = ({node, type, hidden, children}) => {\n  const onPreview = (node) => {\n    window.open(`${SITE_REPO_URL}/${node.dataType}/${node.id}.html`);\n  }\n\n  if (hidden) {\n    return null;\n  }\n\n  return (\n    <Button buttonType={type}\n            iconType=\"desktop\"\n            tooltipText=\"Preview in Browser\"\n            tooltipPosition=\"top center\"\n            onClick={() => onPreview(node)}>\n      Preview in Browser\n    </Button>\n  );\n}\n\nexport default BrowserPreviewButton;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContents, deleteContent } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentList extends React.Component {\n  componentDidMount() {\n    this.props.fetchContents();\n  }\n\n  renderList() {\n    return this.props.contents.map(content => {\n      const linkPath = `/contents/${content.id}/edit`;\n\n      return(\n        <tr key={content.id}>\n          <td>\n            <Link to={linkPath}>\n              {content.title}\n            </Link>\n          </td>\n          <td>\n            {content.dataType}\n          </td>\n          <td className=\"collapsing\">\n            {content.id}\n          </td>\n          <td className=\"collapsing\">\n            {content.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <ShowJsonButton node={content} type=\"icon\"/>\n              <BrowserPreviewButton node={content} type=\"icon\"/>\n              <Button buttonType=\"icon\"\n                      iconType=\"trash alternate outline\"\n                      tooltipText=\"Delete Content\"\n                      tooltipPosition=\"top right\"\n                      onClick={() => this.props.deleteContent(content.id)}>\n                Delete Content\n              </Button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    // const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n              <h1>Content List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/contents/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\"\n                      tooltipText=\"New Content\"\n                      tooltipPosition=\"top center\">\n                New Content\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/*\n          <div className={loaderStyles}>\n            <div className=\"ui text loader\">Working...</div>\n          </div>\n        */}\n\n        <table className=\"ui celled striped compact table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Data Type</th>\n              <th>ID</th>\n              <th>Date Modified</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderList()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { contents: state.contents };\n}\n\nconst mapDispatchToProps = { fetchContents, deleteContent };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentList);\n","import Api from '../components/api/Api';\nimport { CONTENT_RESOURCE }  from '../config';\n\nexport const fetchContents = () => async (dispatch) => {\n  const response = await Api.index(CONTENT_RESOURCE);\n\n  dispatch({\n    type: 'FETCH_CONTENTS',\n    payload: response.filter(content => content.dataType === 'content')\n  });\n};\n\nexport const createContent = (content) => async (dispatch) => {\n  const response = await Api.create(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: 'CREATE_CONTENT',\n    payload: response\n  });\n};\n\nexport const updateContent = () => async (dispatch, getState) => {\n  const content = getState().selectedContent;\n  const response = await Api.update(content, CONTENT_RESOURCE);\n\n  dispatch({\n    type: 'UPDATE_CONTENT',\n    payload: response\n  });\n};\n\n// have API delete return id as confirmation?\n\nexport const deleteContent = (id) => async (dispatch) => {\n  await Api.destroy(id, CONTENT_RESOURCE);\n\n  dispatch({\n    type: 'DELETE_CONTENT',\n    payload: { id }\n  });\n};\n","import React from 'react';\n\nclass Field extends React.Component {\n  handleChange = (event) => {\n    this.props.onChange(event);\n  }\n\n  renderInput = () => {\n    switch(this.props.type) {\n      case 'text':\n      default:\n        return this.renderTextInput();\n      case 'select':\n        return this.renderSelect();\n      case 'textarea':\n        return this.renderTextArea();\n    }\n  }\n\n  renderTextInput = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <input name={this.props.name}\n               type={this.props.type}\n               placeholder={this.props.placeholder}\n               value={this.props.value}\n               onChange={this.handleChange} />\n      </div>\n    );\n  }\n\n  renderSelect = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n      <label htmlFor={this.props.name}>{this.props.label}</label>\n        <select name={this.props.name}\n                placeholder={this.props.placeholder}\n                value={this.props.value}\n                onChange={this.handleChange}>\n          {this.props.children}\n        </select>\n      </div>\n    );\n  }\n\n  renderTextArea = () => {\n    const fieldClasses = `${this.props.required ? 'required ' : ''}${this.props.disabled ? 'disabled ' : ''}field`;\n\n    return(\n      <div className={fieldClasses}>\n        <label htmlFor={this.props.name}>{this.props.label}</label>\n        <textarea name={this.props.name}\n                  placeholder={this.props.placeholder}\n                  value={this.props.value}\n                  onChange={this.handleChange}></textarea>\n      </div>\n    );\n  }\n\n  render() {\n    if (this.props.hidden) {\n      return null;\n    }\n\n    return this.renderInput();\n  }\n}\n\nexport default Field;\n","import React from 'react';\n\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\nimport BrowserPreviewButton from '../buttons/BrowserPreviewButton';\n\nclass ContentForm extends React.Component {\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit();\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  render() {\n    const content = this.props.content;\n    const isNew = this.props.isNew;\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={content.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={content.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"content\">Content</option>\n        </Field>\n\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={content.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"subTitle\"\n               label=\"Subtitle\"\n               placeholder=\"subtitle\"\n               value={content.subTitle}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"textarea\"\n               name=\"copyText\"\n               label=\"Copy Text\"\n               placeholder=\"copy text\"\n               value={content.copyText}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={content.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={content.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={content}\n                          hidden={isNew}></ShowJsonButton>\n          <BrowserPreviewButton node={content}\n                                hidden={isNew}></BrowserPreviewButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Content\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newContent, createContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\n\nclass ContentCreate extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.newContent();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  createContent = async () => {\n    this.setState({ isLoading: true });\n\n    await this.props.createContent(this.props.content);\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>New Content</h1>\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n        <ContentForm content={this.props.content}\n                     isNew={true}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.createContent}\n                     onFormCancel={this.onFormCancel}/>\n       </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { content: state.selectedContent };\n}\n\nconst mapDispatchToProps = { newContent, createContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchContent, updateContent, deselectContent, updateSelectedContent } from '../../actions';\n\nimport ContentForm from '../forms/ContentForm';\n\n// research containers for wrapping forms, etc.\n\nclass ContentEdit extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.fetchContent(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.deselectContent();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  updateContent = async () => {\n    this.setState({ isLoading: true });\n\n    await this.props.updateContent();\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  render() {\n    // create redirect component\n    if (this.state.redirect) { return <Redirect to=\"/\" />; }\n\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>Edit Content</h1>\n\n        {/* make loader component  */}\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n\n        <ContentForm content={this.props.content}\n                     onFormUpdate={this.props.updateSelectedContent}\n                     onFormSubmit={this.updateContent}\n                     onFormCancel={this.onFormCancel}/>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { content: state.selectedContent };\n}\n\nconst mapDispatchToProps = { fetchContent, updateContent, deselectContent, updateSelectedContent };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (ContentEdit);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAssets, deleteAsset } from '../../actions';\n\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetList extends React.Component {\n  componentDidMount() {\n    this.props.fetchAssets();\n  }\n\n  renderList() {\n    return this.props.assets.map(asset => {\n      const linkPath = `/assets/${asset.id}/edit`;\n\n      return (\n        <div className=\"item\"\n             key={asset.id}>\n          <img className=\"ui small image\"\n               src={asset.url}\n               alt=\"alt text placeholder\"></img>\n          <div className=\"content\">\n            <Link to={linkPath} className=\"header\">\n              {asset.title}\n            </Link>\n            <div className=\"description\">\n              <p><strong>Date Modified: </strong>{asset.dateModified}<br />\n              <strong>File Size: </strong>{(asset.file.size / 1024).toFixed(0)} kB<br />\n              <strong>File Type: </strong>{asset.file.type}</p>\n            </div>\n          </div>\n          <div className=\"ui icon buttons right floated content\">\n            <ShowJsonButton node={asset} type=\"icon\"/>\n            <Button buttonType=\"icon\"\n                    iconType=\"trash alternate outline\"\n                    tooltipText=\"Delete Asset\"\n                    tooltipPosition=\"top center\"\n                    onClick={() => this.props.deleteAsset(asset.id)}>\n              Delete Asset\n            </Button>\n          </div>\n        </div>\n      );\n    });\n  }\n\n  render() {\n    // const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <div className=\"ui two column grid\">\n          <div className=\"row\">\n            <div className=\"left floated column\">\n            <h1>Asset List</h1>\n            </div>\n            <div className=\"right floated right aligned column\">\n              <Button linkTo=\"/assets/new\"\n                      buttonType=\"primary\"\n                      iconType=\"plus\">\n                New Asset\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/*\n          <div className={loaderStyles}>\n            <div className=\"ui text loader\">Working...</div>\n          </div>\n        */}\n        <div className=\"ui divided relaxed list\">\n          {this.renderList()}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { assets: state.assets };\n}\n\nconst mapDispatchToProps = { fetchAssets, deleteAsset }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetList);\n","import Api from '../components/api/Api';\nimport { ASSET_RESOURCE }  from '../config';\n\nexport const fetchAssets = () => async (dispatch) => {\n  const response = await Api.index(ASSET_RESOURCE);\n\n  dispatch({\n    type: 'FETCH_ASSETS',\n    payload: response.filter(node => node.dataType === 'asset')\n  });\n};\n\nexport const createAsset = (asset) => async (dispatch) => {\n  const response = await Api.create(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: 'CREATE_ASSET',\n    payload: response\n  });\n};\n\nexport const updateAsset = (asset) => async (dispatch, getState) => {\n  const asset = getState().selectedAsset;\n  const response = await Api.update(asset, ASSET_RESOURCE);\n\n  dispatch({\n    type: 'UPDATE_ASSET',\n    payload: response\n  });\n};\n\nexport const deleteAsset = (id) => async (dispatch) => {\n  await Api.destroy(id, ASSET_RESOURCE);\n\n  dispatch({\n    type: 'DELETE_ASSET',\n    payload: { id: id }\n  });\n};\n","import Api from '../api/Api';\nimport axios from 'axios';\nimport { ASSET_RESOURCE, ASSET_REPO_BUCKET, ASSET_REPO_PATH } from '../../config';\nimport { updateSelectedAsset } from '../../actions';\n\nexport const getPresignedUrl = async (file) => {\n  const s3Params = {\n    'Bucket': ASSET_REPO_BUCKET,\n    'Key':  `${ASSET_REPO_PATH}/${file.name}`,\n    'ACL': 'public-read',\n    'ContentType': file.type\n  };\n  const urlParams = { getSignedUrl: true };\n  const response = await Api.create(s3Params, ASSET_RESOURCE, urlParams);\n\n  return response;\n}\n\nexport const uploadAsset = async (uploadUrl, file) => {\n  try {\n    // post file to presigned URL\n    const config = {\n      headers: {\n        'ACL': 'public-read',\n        'Content-Type': file.type\n      },\n      onUploadProgress: progressEvent => {\n        const progress = Number.parseInt(progressEvent.loaded / file.size * 100, 10);\n\n        // set to state value\n\n        console.log(`Progress: ${progress}%`);\n      }\n    }\n\n    const response = await axios.put(uploadUrl, file, config);\n    const url = response.config.url.split('?')[0];\n\n    return url;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport const updateAssetFile = async (url, fileObj) => {\n  const fileData = {\n    name: fileObj.name,\n    size: fileObj.size,\n    type: fileObj.type\n  };\n\n  updateSelectedAsset({ 'name': 'file', 'value': fileData });\n  updateSelectedAsset({ 'name': 'url', 'value': url });\n}\n","import React from 'react';\nimport Field from './Field';\nimport Button from '../buttons/Button';\nimport ShowJsonButton from '../buttons/ShowJsonButton';\n\nclass AssetForm extends React.Component {\n  state = {\n    selectedFile: ''\n  };\n\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.selectedFile);\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.props.onFormUpdate({ name, value });\n  }\n\n  handleFileChange = (event) => {\n    const { name } = event.target;\n    const value = event.target.files[0];\n\n    this.props.onFormUpdate({ name, value });\n\n    this.setState({\n      selectedFile: value\n    });\n  }\n\n  render() {\n    const asset = this.props.asset;\n    const isNew = this.props.isNew\n\n    /*\n      create upload component in React?\n      make file input component?\n      disable upload button during upload?\n    */\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n\n        <Field type=\"text\"\n               name=\"id\"\n               label=\"ID\"\n               placeholder=\"id\"\n               value={asset.id}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"select\"\n               name=\"dataType\"\n               label=\"Data Type\"\n               placeholder=\"data type\"\n               value={asset.dataType}\n               onChange={this.handleChange}>\n          <option value=\"\">Select Data Type...</option>\n          <option value=\"asset\">Asset</option>\n        </Field>\n\n        <Field type=\"text\"\n               name=\"title\"\n               label=\"Title\"\n               placeholder=\"title\"\n               value={asset.title}\n               required={true}\n               onChange={this.handleChange}></Field>\n\n        <div className=\"field\">\n          <label htmlFor=\"file\">File</label>\n          <input name=\"file\"\n                 type=\"file\"\n                 onChange={this.handleFileChange} />\n\n          {!isNew ? (\n            <div>\n              <div className=\"ui hidden divider\"></div>\n              <img className=\"ui big image\"\n                   src={this.props.asset.url}\n                   alt=\"alt text placeholder\">\n               </img>\n               <div className=\"ui divider\"></div>\n             </div>\n           ) : ''}\n        </div>\n\n        <Field type=\"text\"\n               name=\"dateCreated\"\n               label=\"Date Created\"\n               placeholder=\"date created\"\n               value={asset.dateCreated}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <Field type=\"text\"\n               name=\"dateModified\"\n               label=\"Date Modified\"\n               placeholder=\"date modified\"\n               value={asset.dateModified}\n               hidden={isNew}\n               disabled={true}\n               readOnly={true}></Field>\n\n        <div>\n          <Button buttonType=\"secondary\"\n                  iconType=\"close\"\n                  tooltipText=\"Cancel\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormCancel}>Cancel</Button>\n          <ShowJsonButton node={asset}\n                    hidden={isNew}></ShowJsonButton>\n          <Button buttonType=\"primary\"\n                  iconType=\"save\"\n                  tooltipText=\"Save Asset\"\n                  tooltipPosition=\"top center\"\n                  onClick={this.onFormSubmit}>Save</Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AssetForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { newAsset, createAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\n\nclass AssetCreate extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.newAsset();\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  createAsset = async (fileObj) => {\n    try {\n      this.setState({ isLoading: true });\n\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      // upload file to S3\n      const url = await uploadAsset(uploadURL, fileObj);\n\n      // what if upload fails?\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n      // on success, create asset node in db\n      await this.props.createAsset(this.props.asset);\n\n      this.setState({\n        isLoading: false,\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>New Asset</h1>\n\n        {/* make loader component  */}\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n\n        <AssetForm asset={this.props.asset}\n                   isNew={true}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.createAsset}\n                   onFormCancel={this.onFormCancel}/>\n       </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { asset: state.selectedAsset };\n}\n\nconst mapDispatchToProps = { newAsset, createAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetCreate);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset } from '../../actions';\n\nimport { getPresignedUrl, uploadAsset } from '../api/S3';\nimport AssetForm from '../forms/AssetForm';\n\nclass AssetEdit extends React.Component {\n  state = {\n    redirect: false,\n    isLoading: false\n  };\n\n  componentDidMount() {\n    this.props.fetchAsset(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.deselectAsset();\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  /*\n    Need to delete existing asset image if updated\n  */\n\n  updateAsset = async (fileObj) => {\n    try {\n      this.setState({ isLoading: true });\n\n      // get presigned URL from assets Api\n      const { uploadURL } = await getPresignedUrl(fileObj);\n      const url = await uploadAsset(uploadURL, fileObj);\n      // what if upload fails?\n\n      // MOVE TO LIB FILE\n      const fileData = {\n        name: fileObj.name,\n        size: fileObj.size,\n        type: fileObj.type\n      };\n\n      this.props.updateSelectedAsset({ 'name': 'file', 'value': fileData });\n      this.props.updateSelectedAsset({ 'name': 'url', 'value': url });\n      // END MOVE TO LIB FILE\n\n      // on success, create asset node in db\n      await this.props.updateAsset(this.props.asset);\n\n      this.setState({\n        isLoading: false,\n        redirect: true\n      });\n    } catch (error) {\n      return error;\n    }\n  }\n\n  render() {\n    if (this.state.redirect) { return <Redirect to=\"/assets\" />; }\n\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>Edit Asset</h1>\n\n        {/* make loader component  */}\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n\n        <AssetForm asset={this.props.asset}\n                   onFormUpdate={this.props.updateSelectedAsset}\n                   onFormSubmit={this.updateAsset}\n                   onFormCancel={this.onFormCancel}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { asset: state.selectedAsset };\n}\n\nconst mapDispatchToProps = { fetchAsset, updateAsset, deselectAsset, updateSelectedAsset };\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AssetEdit);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport Header from './Header';\nimport ContentList from './views/ContentList';\nimport ContentCreate from './views/ContentCreate';\nimport ContentEdit from './views/ContentEdit';\nimport AssetList from './views/AssetList';\nimport AssetCreate from './views/AssetCreate';\nimport AssetEdit from './views/AssetEdit';\n\nconst App = () => {\n  const containerStyle = { margin: '10px 0 20px' };\n\n  // contents/:id/edit\n\n  return (\n    <div className=\"ui container\" style={containerStyle}>\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/contents/:id/edit\" exact component={ContentEdit} />\n        <Route path=\"/contents/new\" exact component={ContentCreate} />\n        <Route path=\"/assets\" exact component={AssetList} />\n        <Route path=\"/assets/:id/edit\" exact component={AssetEdit} />\n        <Route path=\"/assets/new\" exact component={AssetCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","// move to import\n\nconst initialContentState = {\n  id: '',\n  dataType: 'content',\n  title: '',\n  subTitle: '',\n  copyText: '',\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport default (state = initialContentState, action) => {\n  switch (action.type) {\n    case 'FETCH_CONTENT':\n      return action.payload;\n    case 'NEW_CONTENT':\n      return action.payload;\n    case 'DESELECT_CONTENT':\n      return initialContentState;\n    case 'UPDATE_SELECTED_CONTENT':\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","const initialAssetState = {\n  id: '',\n  dataType: 'asset',\n  title: '',\n  url: '',\n  file: { },\n  dateCreated: '',\n  dateModified: ''\n};\n\nexport default (state = initialAssetState, action) => {\n  switch (action.type) {\n    case 'FETCH_ASSET':\n      return action.payload;\n    case 'NEW_ASSET':\n        return action.payload;\n    case 'DESELECT_ASSET':\n      return initialAssetState;\n    case 'UPDATE_SELECTED_ASSET':\n      return { ...state, [action.payload.name]: action.payload.value }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport assetsReducer from './assetsReducer';\nimport contentsReducer from './contentsReducer';\nimport selectedContentReducer from './selectedContentReducer';\nimport selectedAssetReducer from './selectedAssetReducer';\n\nexport default combineReducers({\n  assets: assetsReducer,\n  contents: contentsReducer,\n  selectedAsset: selectedAssetReducer,\n  selectedContent: selectedContentReducer\n});\n","// set default state to empty array\nexport default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_ASSETS':\n      return action.payload;\n    case 'CREATE_ASSET':\n        return [...state , action.payload];\n    case 'UPDATE_ASSET':\n      return state.map(a => a.id === action.payload.id ? action.payload : a);\n    case 'DELETE_ASSET':\n      return state.filter(asset => asset.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","// set default state to empty array\nexport default (state = [], action) => {\n  switch (action.type) {\n    case 'FETCH_CONTENTS':\n      return action.payload;\n    case 'CREATE_CONTENT':\n      return [...state , action.payload];\n    case 'UPDATE_CONTENT':\n      return state.map(c => c.id === action.payload.id ? action.payload : c);\n    case 'DELETE_CONTENT':\n      return state.filter(content => content.id !== action.payload.id);\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}