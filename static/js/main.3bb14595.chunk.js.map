{"version":3,"sources":["components/views/ContentList.js","components/ContentForm.js","components/views/ContentCreate.js","components/views/ContentEdit.js","components/Header.js","components/App.js","index.js","components/api/Api.js"],"names":["ContentList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getContentIndex","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","setState","isLoading","Api","list","apiResource","sent","items","stop","deleteContent","_ref2","_callee2","id","_context2","destroy","_x","apply","arguments","state","_this2","map","item","linkPath","concat","react_default","createElement","key","react_router_dom","to","className","title","contentType","dateModified","onClick","loaderStyles","renderList","React","Component","ContentForm","handleChange","event","currentState","objectSpread","_event$target","target","name","value","onFormSubmit","preventDefault","props","onFormCancel","onPreview","body","data","templateId","create","then","text","html","DOMParser","parseFromString","documentElement","outerHTML","console","log","window","open","document","onSaveAndPreview","subTitle","copyText","dateCreated","isNew","itemToState","idField","dateCreatedField","dateModifiedField","previewButton","htmlFor","type","placeholder","readOnly","onChange","ContentCreate","postContent","_ref","JSON","stringify","redirect","react_router","components_ContentForm","ContentEdit","getContent","read","putContent","update","match","params","Header","App","basename","components_Header","path","exact","component","ReactDOM","render","components_App","querySelector","API_BASE_URL","module","exports","resource","fetch","method","error","json"],"mappings":"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","file":"static/js/main.3bb14595.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Api from '../api/Api';\n\nclass ContentList extends React.Component {\n  constructor() {\n    super();\n    this.apiResource = 'nodes';\n    this.state = {\n      items: [],\n      isLoading: false\n    };\n  }\n\n  getContentIndex = async () => {\n    this.setState({ isLoading: true });\n    const response = await Api.list(this.apiResource);\n    this.setState({\n      isLoading: false,\n      items: response\n    });\n  }\n\n  deleteContent = async (id) => {\n    this.setState({ isLoading: true });\n    await Api.destroy(this.apiResource, id);\n    this.getContentIndex();\n    this.setState({ isLoading: false });\n  }\n\n  renderList() {\n    return this.state.items.map(item => {\n      const linkPath = `/content/edit/${item.id}`;\n\n      return(\n        <tr key={item.id}>\n          <td>\n            <Link to={linkPath} className=\"item\">\n              {item.title}\n            </Link>\n          </td>\n          <td>\n            {item.contentType}\n          </td>\n          <td className=\"collapsing\">\n            {item.id}\n          </td>\n          <td className=\"collapsing\">\n            {item.dateModified}\n          </td>\n          <td className=\"collapsing\">\n            <div className=\"ui icon buttons\">\n              <button className=\"ui basic button\"\n                      onClick={() => this.deleteContent(item.id)}>\n                <i className=\"trash alternate outline icon\"></i>\n              </button>\n            </div>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  componentDidMount() {\n    this.getContentIndex();\n  }\n\n  render() {\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <Link to=\"/content/new\" className=\"ui right floated primary button\">\n          New Content\n        </Link>\n        <h1>Content List</h1>\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n        <table className=\"ui celled striped compact table\">\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th>Content Type</th>\n              <th>ID</th>\n              <th>Date Modified</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.renderList()}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n};\n\nexport default ContentList;\n","import React from 'react';\nimport Api from './api/Api';\n\nclass ContentForm extends React.Component {\n  constructor() {\n    super();\n    this.apiResource = 'compose';\n    this.state = {\n      item: {\n        id: '',\n        contentType: 'content',\n        title: '',\n        subTitle: '',\n        copyText: '',\n        dateCreated: '',\n        dateModified: ''\n      }\n    };\n  }\n\n  handleChange = (event) => {\n    const { item } = { ...this.state };\n    const currentState = item;\n    const { name, value } = event.target;\n    currentState[name] = value;\n\n    this.setState({ item: currentState });\n  }\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n    this.props.onFormSubmit(this.state.item);\n  }\n\n  onFormCancel = (event) => {\n    event.preventDefault();\n    this.props.onFormCancel();\n  }\n\n  onPreview = () => {\n    const body = {\n      data: this.state.item,\n      templateId: this.state.item.contentType\n    };\n\n    Api.create(this.apiResource, body)\n      .then(response => {\n        return response.text();\n      })\n      .then(response => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(response, \"text/html\");\n        const html = doc.documentElement.outerHTML;\n\n        console.log(html);\n\n        const newWindow = window.open();\n        newWindow.document.body.outerHTML = html;\n      })\n  }\n\n  onSaveAndPreview = (event) => {\n    this.onFormSubmit(event);\n    this.onPreview(event);\n  }\n\n  itemToState() {\n    if (this.props.item.id && this.props.item.id !== this.state.item.id ) {\n      this.setState({ item: this.props.item });\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ isNew: this.props.isNew });\n    this.itemToState();\n  }\n\n  componentDidUpdate() {\n    this.itemToState();\n  }\n\n  render() {\n    const item = this.state.item;\n    const isNew = this.state.isNew\n\n    let idField = null;\n    let dateCreatedField = null;\n    let dateModifiedField = null;\n    let previewButton = null;\n\n    if (!isNew) {\n      idField = <div className=\"disabled field\">\n                  <label htmlFor=\"id\">ID</label>\n                  <input name=\"id\"\n                         type=\"text\"\n                         placeholder=\"id\"\n                         value={item.id}\n                         readOnly />\n                </div>;\n      dateCreatedField = <div className=\"disabled field\">\n                          <label htmlFor=\"dateCreated\">Date Created</label>\n                          <input name=\"dateCreated\"\n                                 type=\"text\"\n                                 placeholder=\"date created\"\n                                 value={item.dateCreated}\n                                 readOnly />\n                        </div>;\n\n      dateModifiedField = <div className=\"disabled field\">\n                            <label htmlFor=\"dateModified\">Date Modified</label>\n                            <input name=\"dateModified\"\n                                   type=\"text\"\n                                   placeholder=\"date modifed\"\n                                   value={item.dateModified}\n                                   readOnly />\n                          </div>;\n      previewButton = <button className=\"ui secondary basic button\"\n                              onClick={this.onPreview}>\n                        Preview\n                      </button>;\n    }\n\n    return(\n      <div className=\"ui form\">\n        <p>All fields must have values. Validation to be added.</p>\n        {idField}\n        <div className=\"required field\">\n          <label htmlFor=\"contentType\">Content Type</label>\n          <select name=\"contentType\"\n                 type=\"text\"\n                 placeholder=\"content type\"\n                 value={item.contentType}\n                 onChange={this.handleChange}>\n                    <option value=\"\">Content Type</option>\n                    <option value=\"content\">Content</option>\n          </select>\n        </div>\n        <div className=\"required field\">\n          <label htmlFor=\"title\">Title</label>\n          <input name=\"title\"\n                 type=\"text\"\n                 placeholder=\"title\"\n                 value={item.title}\n                 onChange={this.handleChange} />\n        </div>\n        <div className=\"required field\">\n          <label htmlFor=\"subTitle\">Subtitle</label>\n          <input name=\"subTitle\"\n                 type=\"text\"\n                 placeholder=\"subtitle\"\n                 value={item.subTitle}\n                 onChange={this.handleChange} />\n        </div>\n        <div className=\"required field\">\n          <label htmlFor=\"copyText\">Copy Text</label>\n          <textarea name=\"copyText\"\n                 placeholder=\"copy text\"\n                 value={item.copyText}\n                 onChange={this.handleChange}></textarea>\n        </div>\n        {dateCreatedField}\n        {dateModifiedField}\n        <div>\n          <button className=\"ui secondary basic button\"\n                  onClick={this.onFormCancel}>\n            Cancel\n          </button>\n          {previewButton}\n          <button className=\"ui primary button\"\n                  onClick={this.onFormSubmit}>\n            Save\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ContentForm;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport ContentForm from '../ContentForm';\nimport Api from '../api/Api';\n\nclass ContentCreate extends React.Component {\n  constructor() {\n    super();\n    this.apiResource = 'nodes';\n    this.state = {\n      item: {\n        id: '',\n        contentType: '',\n        title: '',\n        subTitle: '',\n        copyText: '',\n        dateCreated: '',\n        dateModified: ''\n      },\n      redirect: false,\n      isLoading: false\n    };\n  }\n\n  postContent = async (item) => {\n    this.setState({ isLoading: true });\n    const response = await Api.create(this.apiResource, item);\n\n    console.log(`postContent: ${JSON.stringify(response)}`);\n\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n      const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>New Content</h1>\n        <div className={loaderStyles}>\n          <div className=\"ui text loader\">Working...</div>\n        </div>\n        <ContentForm item={this.state.item}\n                     isNew={true}\n                     onFormSubmit={this.postContent}\n                     onFormCancel={this.onFormCancel}/>\n       </div>\n    );\n  }\n};\n\nexport default ContentCreate;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Api from '../api/Api';\nimport ContentForm from '../ContentForm';\n\nclass ContentEdit extends React.Component {\n  constructor() {\n    super();\n    this.apiResource = 'nodes';\n    this.state = {\n      item: {\n        id: '',\n        contentType: '',\n        title: '',\n        subTitle: '',\n        copyText: '',\n        dateCreated: '',\n        dateModified: ''\n      },\n      redirect: false,\n      isLoading: false\n    };\n  }\n\n  getContent = async (id) => {\n    this.setState({ isLoading: true });\n    const response = await Api.read(this.apiResource, id);\n    this.setState({\n      item: response,\n      isLoading: false\n    });\n  }\n\n  putContent = async () => {\n    this.setState({ isLoading: true });\n    await Api.update(this.apiResource, this.state.item);\n    this.setState({\n      isLoading: false,\n      redirect: true\n    });\n  }\n\n  onFormCancel = () => {\n    this.setState({ redirect: true });\n  }\n\n  componentDidMount() {\n    this.getContent(this.props.match.params.id);\n  }\n\n  handleLoader() {\n    if (this.state.isLoading) {\n      return (\n        <div className=\"ui segment\">\n          <div className=\"ui active inverted dimmer\">\n            <div className=\"ui text loader\">Loading</div>\n          </div>\n          <p></p>\n        </div>\n      );\n    } else {\n      return(\n        <ContentForm item={this.state.item}\n                     onFormSubmit={this.putContent}\n                     onFormCancel={this.onFormCancel}/>\n      );\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const loaderStyles = `ui ${this.state.isLoading ? 'active' : ''} inverted dimmer`;\n\n    return (\n      <div>\n        <h1>Edit Content</h1>\n          <div className={loaderStyles}>\n            <div className=\"ui text loader\">Working...</div>\n          </div>\n          <ContentForm item={this.state.item}\n                       onFormSubmit={this.putContent}\n                       onFormCancel={this.onFormCancel}/>\n        </div>\n    );\n  }\n};\n\nexport default ContentEdit;\n","import React from 'react';\n\nconst Header = () => {\n  return (\n    <div className=\"ui segment\">\n      <h1>Digital eXperience Manager</h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport ContentList from './views/ContentList';\nimport ContentCreate from './views/ContentCreate';\nimport ContentEdit from './views/ContentEdit';\nimport Header from './Header';\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <HashRouter basename='/'>\n        <Header />\n        <Route path=\"/\" exact component={ContentList} />\n        <Route path=\"/content/edit/:id\" exact component={ContentEdit} />\n        <Route path=\"/content/new\" exact component={ContentCreate} />\n      </HashRouter>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector('#root')\n);\n","const API_BASE_URL = 'https://kiuhmwwxi4.execute-api.us-east-1.amazonaws.com/dxm-api';\n\nconst create = (resource, body) => {\n  return fetch(`${API_BASE_URL}/${resource}`, {\n      method: 'POST',\n      body: JSON.stringify(body)\n  })\n    .then(\n      (response) => {\n        console.log(`contentCreate: ${JSON.stringify(response)}`);\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst list = (resource) => {\n  return fetch(`${API_BASE_URL}/${resource}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst read = (resource, id) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`)\n    .then(response => response.json())\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst update = (resource, body) => {\n  return fetch(`${API_BASE_URL}/${resource}/${body.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(body)\n  })\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\nconst destroy = (resource, id) => {\n  return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n      method: 'DELETE'\n  })\n    .then(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n};\n\n\nmodule.exports = {\n  create,\n  list,\n  read,\n  update,\n  destroy\n}\n\n// export const create = (resource, item) => {\n//   return fetch(`${API_BASE_URL}/${resource}`, {\n//       method: 'POST',\n//       body: JSON.stringify(item)\n//   })\n//     .then(\n//       (response) => {\n//         console.log(`contentCreate: ${JSON.stringify(response)}`);\n//         return response;\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n// }\n\n// export const list = (resource) => {\n//   return fetch(`${API_BASE_URL}/${resource}`)\n//     .then(response => response.json())\n//     .then(\n//       (response) => {\n//         return response;\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n// }\n\n// export const read = (resource, id) => {\n//   return fetch(`${API_BASE_URL}/${resource}/${id}`)\n//     .then(response => response.json())\n//     .then(\n//       (response) => {\n//         return response;\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n// }\n\n// export const update = (resource, item) => {\n//   return fetch(`${API_BASE_URL}/${resource}/${item.id}`, {\n//       method: 'PUT',\n//       body: JSON.stringify(item)\n//   })\n//     .then(\n//       (response) => {\n//         return response;\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n// }\n\n// export const destroy = (resource, id) => {\n//   return fetch(`${API_BASE_URL}/${resource}/${id}`, {\n//       method: 'DELETE'\n//   })\n//     .then(\n//       (response) => {\n//         return response;\n//       },\n//       (error) => {\n//         console.log(error);\n//       }\n//     );\n// }\n"],"sourceRoot":""}